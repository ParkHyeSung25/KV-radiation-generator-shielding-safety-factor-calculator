# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'RG_ui_2022_0826.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import (QApplication, QWidget, QPushButton, QLabel, QLineEdit, QGridLayout, QMessageBox)
from PyQt5.QtGui import QDoubleValidator
import numpy as np
import math


class Ui_MainWindow(object):
    def __init__(self):
        self.concrete_50 = [[0.01, 10], [0.282, 0.07408], [0.359, 0.0524], [0.456, 0.03883], [0.571, 0.03156], [0.677, 0.02705], [0.764, 0.018926], [0.918, 0.013779], [1.091, 0.011577], [1.207, 0.008925], [1.342, 0.006731], [1.448, 0.005144], [1.525, 0.003786], [1.67, 0.0028054], [1.805, 0.0021111], [1.949, 0.0016529], [2.094, 0.0013318], [2.238, 0.0010519], [2.344, 0.0008146], [2.421, 0.0006874], [2.556, 0.0005712], [2.71, 0.0004716], [2.816, 0.0003918], [2.941, 0.0003242], [3.018, 0.00028215], [3.115, 0.00023497], [3.259, 0.00020678], [3.365, 0.00018684], [3.461, 0.00015663], [3.606, 0.00013365], [3.77, 0.00011008], [3.914, 9.047e-05], [4.068, 7.258e-05], [4.184, 6.387e-05], [4.328, 5.402e-05], [4.492, 4.469e-05], [4.598, 3.507e-05], [4.723, 3.045e-05], [4.81, 2.7395e-05], [4.906, 2.4214e-05], [5.022, 2.1261e-05], [5.118, 1.9254e-05], [5.214, 1.6537e-05], [5.339, 1.4746e-05], [5.416, 1.22e-05], [5.542, 1.0364e-05], [5.667, 8.688e-06], [5.744, 7.062e-06], [5.888, 5.986e-06], [6.023, 5.074e-06], [6.129, 4.436e-06], [6.254, 4.035e-06], [6.37, 3.251e-06], [6.524, 2.6077e-06], [6.697, 2.2847e-06], [6.861, 1.886e-06], [7.102, 1.4287e-06], [7.265, 1.1898e-06], [7.468, 1.0019e-06]]
        self.concrete_70 = [[0.002, 0.1682], [0.224, 0.13946], [0.388, 0.11718], [0.561, 0.10611], [0.638, 0.09114], [0.744, 0.07811], [0.898, 0.06919], [0.994, 0.05878], [1.129, 0.04928], [1.245, 0.04336], [1.37, 0.04023], [1.505, 0.03603], [1.591, 0.03199], [1.726, 0.027844], [1.832, 0.024774], [1.947, 0.022683], [2.073, 0.020227], [2.217, 0.0178], [2.342, 0.016478], [2.439, 0.014824], [2.535, 0.013784], [2.631, 0.012621], [2.756, 0.011156], [2.91, 0.010192], [3.007, 0.00954], [3.122, 0.008544], [3.238, 0.007841], [3.344, 0.007132], [3.449, 0.006617], [3.565, 0.005953], [3.709, 0.005367], [3.825, 0.004979], [3.96, 0.004579], [4.066, 0.00423], [4.162, 0.003968], [4.287, 0.003649], [4.383, 0.003276], [4.489, 0.00306], [4.643, 0.0027829], [4.749, 0.0025424], [4.845, 0.0023433], [4.971, 0.0021504], [5.067, 0.0020217], [5.182, 0.0018882], [5.336, 0.001748], [5.442, 0.0015622], [5.539, 0.0014494], [5.645, 0.0013096], [5.779, 0.0011912], [5.895, 0.0011224], [5.991, 0.0010391], [6.107, 0.0009769], [6.241, 0.0009084], [6.347, 0.0008281], [6.453, 0.0007854], [6.569, 0.0007352], [6.675, 0.0006776], [6.79, 0.0006413], [6.906, 0.0005872], [6.992, 0.0005582], [7.079, 0.0005259], [7.175, 0.0004945], [7.329, 0.0004527], [7.445, 0.0004173], [7.551, 0.0003906], [7.657, 0.0003608], [7.782, 0.0003333], [7.926, 0.0003161], [8.013, 0.0002965], [8.119, 0.00027635], [8.205, 0.00026154], [8.282, 0.00024105], [8.417, 0.00023168], [8.533, 0.00021027], [8.639, 0.00019552], [8.773, 0.00017824], [8.947, 0.00016284], [9.081, 0.0001491], [9.235, 0.00014018], [9.341, 0.00013006], [9.447, 0.00012094], [9.592, 0.00011147], [9.755, 0.00010319], [9.861, 9.68e-05], [9.977, 8.962e-05], [10.111, 8.315e-05], [10.246, 7.664e-05], [10.371, 7.064e-05], [10.477, 6.411e-05], [10.622, 5.818e-05], [10.776, 5.519e-05], [10.872, 5.143e-05], [10.988, 4.699e-05], [11.122, 4.408e-05], [11.19, 4.117e-05], [11.305, 3.836e-05], [11.43, 3.505e-05], [11.584, 3.167e-05], [11.719, 2.971e-05], [11.844, 2.7083e-05], [11.95, 2.5017e-05], [12.075, 2.3469e-05], [12.181, 2.1967e-05], [12.316, 1.9981e-05], [12.46, 1.8457e-05], [12.576, 1.7584e-05], [12.653, 1.6136e-05], [12.778, 1.5137e-05], [12.923, 1.4137e-05], [13.028, 1.2606e-05], [13.163, 1.1467e-05], [13.336, 1.071e-05], [13.491, 9.72e-06], [13.625, 8.979e-06], [13.741, 8.441e-06], [13.847, 7.884e-06], [13.991, 7.331e-06], [14.126, 6.862e-06], [14.261, 6.283e-06], [14.463, 5.221e-06], [14.588, 4.834e-06], [14.771, 4.426e-06], [14.867, 4.179e-06], [14.963, 3.719e-06], [15.098, 3.45e-06], [15.223, 3.258e-06], [15.368, 2.977e-06], [15.464, 2.8108e-06], [15.589, 2.6136e-06], [15.743, 2.4303e-06], [15.83, 2.2301e-06], [16.003, 1.9496e-06], [16.109, 1.837e-06], [16.263, 1.7006e-06], [16.407, 1.5744e-06], [16.513, 1.49e-06], [16.639, 1.3733e-06], [16.744, 1.2492e-06], [16.86, 1.1874e-06], [16.966, 1.1213e-06], [17.091, 1.0519e-06], [17.178, 1.0043e-06]]
        self.concrete_100 = [[0.069, 0.25798], [0.195, 0.23725], [0.329, 0.22159], [0.455, 0.20379], [0.57, 0.18907], [0.647, 0.18013], [0.724, 0.17085], [0.83, 0.16205], [0.907, 0.14903], [1.003, 0.13645], [1.138, 0.12829], [1.244, 0.11824], [1.36, 0.11068], [1.465, 0.10544], [1.591, 0.09869], [1.658, 0.09402], [1.754, 0.08879], [1.841, 0.08496], [1.937, 0.08058], [2.005, 0.07559], [2.101, 0.0717], [2.245, 0.06565], [2.361, 0.06241], [2.476, 0.06011], [2.544, 0.05651], [2.64, 0.05349], [2.755, 0.05118], [2.861, 0.04887], [2.977, 0.04594], [3.073, 0.04216], [3.237, 0.03937], [3.323, 0.03759], [3.41, 0.03581], [3.545, 0.03316], [3.689, 0.03076], [3.814, 0.02899], [3.949, 0.027132], [4.093, 0.025621], [4.219, 0.023982], [4.334, 0.022847], [4.43, 0.021245], [4.546, 0.0206], [4.594, 0.019711], [4.671, 0.018945], [4.787, 0.018168], [4.912, 0.017157], [5.046, 0.015988], [5.143, 0.015435], [5.249, 0.01432], [5.393, 0.013523], [5.537, 0.012686], [5.691, 0.01198], [5.807, 0.011388], [5.903, 0.010542], [6.067, 0.009846], [6.211, 0.009319], [6.327, 0.008589], [6.442, 0.008201], [6.577, 0.007727], [6.721, 0.007217], [6.875, 0.006785], [7.01, 0.006421], [7.145, 0.005984], [7.289, 0.005689], [7.414, 0.005348], [7.588, 0.004919], [7.732, 0.004696], [7.799, 0.004474], [7.944, 0.004234], [8.059, 0.004025], [8.175, 0.003793], [8.367, 0.003527], [8.483, 0.003323], [8.637, 0.003063], [8.801, 0.0028605], [8.935, 0.0026953], [9.041, 0.0025677], [9.205, 0.0024302], [9.291, 0.0023357], [9.349, 0.00223], [9.436, 0.0021528], [9.571, 0.0020554], [9.657, 0.0019755], [9.725, 0.0019071], [9.965, 0.0017812], [10.081, 0.0016563], [10.187, 0.0015503], [10.35, 0.0014868], [10.504, 0.0014009], [10.581, 0.0013405], [10.774, 0.0012575], [10.889, 0.0011849], [10.986, 0.0011239], [11.111, 0.001052], [11.294, 0.000989], [11.438, 0.0009402], [11.534, 0.0008878], [11.679, 0.0008477], [11.775, 0.0008147], [11.91, 0.0007677], [12.064, 0.0007265], [12.189, 0.0006861], [12.285, 0.0006522], [12.429, 0.0006186], [12.564, 0.0005854], [12.66, 0.0005553], [12.814, 0.0005325], [12.911, 0.0005051], [13.026, 0.0004801], [13.142, 0.0004574], [13.277, 0.0004319], [13.392, 0.0004124], [13.508, 0.0003964], [13.565, 0.0003735], [13.739, 0.0003566], [13.854, 0.0003338], [14.047, 0.0003138], [14.172, 0.0002996], [14.297, 0.00028295], [14.46, 0.00026602], [14.643, 0.00024465], [14.778, 0.00023103], [14.874, 0.00022059], [14.99, 0.00021295], [15.105, 0.00019714], [15.231, 0.00018412], [15.394, 0.00017349], [15.519, 0.00016455], [15.664, 0.00015471], [15.77, 0.00014642], [15.952, 0.00013918], [16.087, 0.00013289], [16.203, 0.00012577], [16.376, 0.00012008], [16.492, 0.00011516], [16.559, 0.00010875], [16.703, 0.00010224], [16.857, 9.848e-05], [16.934, 9.445e-05], [17.059, 9.037e-05], [17.156, 8.61e-05], [17.262, 8.148e-05], [17.396, 7.61e-05], [17.521, 7.282e-05], [17.656, 6.892e-05], [17.772, 6.551e-05], [17.878, 6.2e-05], [18.003, 5.816e-05], [18.157, 5.505e-05], [18.32, 5.244e-05], [18.465, 5.029e-05], [18.532, 4.823e-05], [18.648, 4.646e-05], [18.763, 4.505e-05], [18.84, 4.254e-05], [18.985, 3.991e-05], [19.052, 3.844e-05], [19.148, 3.622e-05], [19.235, 3.489e-05], [19.389, 3.324e-05], [19.552, 3.166e-05], [19.61, 3.07e-05], [19.735, 2.944e-05], [19.822, 2.805e-05], [19.928, 2.7198e-05], [20.043, 2.5571e-05], [20.169, 2.3882e-05], [20.207, 2.2602e-05], [20.332, 2.1438e-05], [20.477, 2.0424e-05], [20.621, 1.9543e-05], [20.727, 1.8784e-05], [20.842, 1.8093e-05], [20.968, 1.6861e-05], [21.15, 1.5923e-05], [21.256, 1.5102e-05], [21.391, 1.4451e-05], [21.526, 1.3737e-05], [21.661, 1.2802e-05], [21.853, 1.1957e-05], [22.036, 1.1291e-05], [22.142, 1.0663e-05], [22.267, 1.0091e-05], [22.354, 9.592e-06], [22.469, 8.92e-06], [22.614, 8.404e-06], [22.787, 7.902e-06], [22.902, 7.413e-06], [23.027, 7.031e-06], [23.153, 6.654e-06], [23.307, 6.106e-06], [23.461, 5.665e-06], [23.605, 5.421e-06], [23.749, 5.176e-06], [23.932, 4.888e-06], [24.057, 4.687e-06], [24.173, 4.436e-06], [24.269, 4.08e-06], [24.404, 3.844e-06], [24.529, 3.662e-06], [24.673, 3.458e-06], [24.808, 3.288e-06], [24.953, 3.139e-06], [25.058, 3.01e-06], [25.193, 2.8552e-06], [25.289, 2.7502e-06], [25.415, 2.6086e-06], [25.511, 2.5349e-06], [25.607, 2.4044e-06], [25.723, 2.2655e-06], [25.829, 2.1205e-06], [25.954, 2.0247e-06], [26.108, 1.9246e-06], [26.242, 1.8135e-06], [26.387, 1.7468e-06], [26.483, 1.6642e-06], [26.608, 1.5854e-06], [26.743, 1.5104e-06], [26.839, 1.4358e-06], [26.935, 1.3528e-06], [27.061, 1.2775e-06], [27.176, 1.2251e-06], [27.311, 1.1646e-06], [27.436, 1.1095e-06], [27.6, 1.0547e-06], [27.696, 1.0204e-06]]
        self.concrete_125 = [[0.06, 0.434], [0.156, 0.3922], [0.252, 0.3671], [0.358, 0.3474], [0.502, 0.3245], [0.599, 0.3064], [0.714, 0.2913], [0.81, 0.27264], [0.926, 0.25129], [1.051, 0.23009], [1.157, 0.21442], [1.273, 0.20115], [1.359, 0.18953], [1.436, 0.17858], [1.59, 0.16243], [1.764, 0.15104], [1.918, 0.14014], [2.023, 0.13351], [2.091, 0.12747], [2.226, 0.11905], [2.331, 0.11342], [2.428, 0.10829], [2.543, 0.10317], [2.649, 0.09829], [2.745, 0.09364], [2.851, 0.08901], [3.005, 0.08424], [3.111, 0.0785], [3.246, 0.07462], [3.361, 0.07109], [3.506, 0.06728], [3.631, 0.0634], [3.795, 0.0604], [3.891, 0.05831], [4.016, 0.05494], [4.141, 0.05199], [4.266, 0.04964], [4.401, 0.04657], [4.536, 0.04437], [4.661, 0.04116], [4.786, 0.03887], [4.93, 0.03671], [5.046, 0.03482], [5.181, 0.03324], [5.315, 0.03125], [5.469, 0.02945], [5.614, 0.027748], [5.777, 0.026319], [5.931, 0.024799], [6.066, 0.02347], [6.153, 0.022707], [6.23, 0.021776], [6.403, 0.020746], [6.509, 0.019808], [6.673, 0.019122], [6.759, 0.018018], [6.856, 0.017355], [6.99, 0.016209], [7.115, 0.015273], [7.289, 0.014519], [7.423, 0.01371], [7.571, 0.012922], [7.754, 0.012049], [7.892, 0.011473], [8.075, 0.010811], [8.243, 0.010223], [8.442, 0.009565], [8.564, 0.009045], [8.701, 0.008583], [8.858, 0.00808], [8.983, 0.007698], [9.098, 0.007366], [9.204, 0.007017], [9.397, 0.006671], [9.541, 0.00623], [9.676, 0.005922], [9.849, 0.005617], [10.032, 0.005305], [10.157, 0.005032], [10.282, 0.004857], [10.407, 0.004648], [10.532, 0.004351], [10.696, 0.004136], [10.889, 0.003905], [11.052, 0.003729], [11.206, 0.003568], [11.351, 0.003362], [11.485, 0.003133], [11.639, 0.002959], [11.803, 0.002825], [11.909, 0.0026736], [12.053, 0.0025754], [12.198, 0.0024374], [12.332, 0.0023272], [12.477, 0.0022171], [12.602, 0.0021215], [12.766, 0.0020256], [12.891, 0.0019469], [13.054, 0.0018466], [13.218, 0.0017133], [13.343, 0.0016576], [13.468, 0.0015653], [13.613, 0.0015111], [13.767, 0.0014176], [13.911, 0.0013328], [14.065, 0.0012697], [14.19, 0.0012043], [14.325, 0.0011575], [14.488, 0.0011052], [14.566, 0.0010552], [14.739, 0.0009987], [14.874, 0.0009535], [14.96, 0.0009266], [15.085, 0.0008925], [15.172, 0.0008391], [15.345, 0.0008012], [15.47, 0.0007718], [15.595, 0.0007401], [15.74, 0.0007005], [15.846, 0.0006644], [15.99, 0.0006386], [16.106, 0.0006137], [16.25, 0.0005873], [16.462, 0.0005558], [16.606, 0.0005226], [16.693, 0.0004989], [16.847, 0.0004743], [16.962, 0.0004538], [17.116, 0.0004343], [17.261, 0.0004183], [17.386, 0.0003985], [17.501, 0.0003847], [17.607, 0.0003617], [17.723, 0.0003499], [17.829, 0.0003371], [17.934, 0.0003268], [18.04, 0.0003169], [18.108, 0.0003053], [18.242, 0.0002947], [18.329, 0.00028324], [18.435, 0.00027103], [18.541, 0.0002628], [18.666, 0.0002537], [18.772, 0.00024276], [18.868, 0.00023281], [18.993, 0.00022082], [19.118, 0.00021317], [19.272, 0.00019953], [19.417, 0.00019093], [19.551, 0.0001823], [19.705, 0.00017522], [19.85, 0.00016656], [19.985, 0.00015973], [20.139, 0.00015251], [20.206, 0.00014561], [20.331, 0.0001369], [20.475, 0.00013158], [20.591, 0.00012702], [20.716, 0.00012128], [20.841, 0.00011503], [20.986, 0.0001113], [21.091, 0.00010744], [21.217, 0.00010281], [21.351, 9.86e-05], [21.486, 9.581e-05], [21.602, 9.088e-05], [21.765, 8.639e-05], [21.91, 8.176e-05], [22.035, 7.721e-05], [22.179, 7.307e-05], [22.324, 7.069e-05], [22.391, 6.78e-05], [22.497, 6.502e-05], [22.651, 6.249e-05], [22.795, 5.953e-05], [22.94, 5.647e-05], [23.065, 5.391e-05], [23.19, 5.159e-05], [23.305, 4.947e-05], [23.45, 4.724e-05], [23.565, 4.52e-05], [23.69, 4.287e-05], [23.854, 4.103e-05], [23.969, 3.926e-05], [24.066, 3.757e-05], [24.191, 3.603e-05], [24.297, 3.455e-05], [24.422, 3.277e-05], [24.537, 3.163e-05], [24.663, 3.034e-05], [24.797, 2.897e-05], [24.932, 2.7717e-05], [25.038, 2.6757e-05], [25.163, 2.5491e-05], [25.298, 2.4285e-05], [25.404, 2.3187e-05], [25.529, 2.2335e-05], [25.635, 2.1467e-05], [25.76, 2.0632e-05], [25.895, 1.9786e-05], [26.029, 1.8685e-05], [26.193, 1.7958e-05], [26.289, 1.7222e-05], [26.443, 1.648e-05], [26.568, 1.5839e-05], [26.655, 1.5257e-05], [26.77, 1.4631e-05], [26.905, 1.4125e-05], [27.03, 1.3338e-05], [27.194, 1.282e-05], [27.281, 1.2267e-05], [27.425, 1.1661e-05], [27.569, 1.1012e-05], [27.714, 1.0491e-05], [27.839, 1.0039e-05], [27.954, 9.606e-06], [28.128, 9.172e-06], [28.262, 8.738e-06], [28.436, 8.288e-06], [28.551, 7.878e-06], [28.724, 7.506e-06], [28.859, 7.151e-06], [29.023, 6.767e-06], [29.206, 6.321e-06], [29.379, 5.89e-06], [29.514, 5.649e-06], [29.6, 5.477e-06], [29.725, 5.172e-06], [29.87, 4.96e-06], [30.005, 4.747e-06], [30.101, 4.613e-06], [30.226, 4.404e-06], [30.399, 4.214e-06], [30.505, 4.059e-06], [30.621, 3.842e-06], [30.765, 3.692e-06], [30.919, 3.518e-06], [31.063, 3.351e-06], [31.198, 3.165e-06], [31.391, 3.028e-06], [31.496, 2.911e-06], [31.622, 2.7425e-06], [31.756, 2.6243e-06], [31.872, 2.5001e-06], [32.026, 2.3506e-06], [32.17, 2.2492e-06], [32.276, 2.1428e-06], [32.44, 2.0641e-06], [32.555, 1.9795e-06], [32.642, 1.9109e-06], [32.786, 1.8045e-06], [32.892, 1.7536e-06], [33.027, 1.6928e-06], [33.123, 1.627e-06], [33.219, 1.5569e-06], [33.345, 1.5063e-06], [33.431, 1.4255e-06], [33.556, 1.3551e-06], [33.691, 1.2967e-06], [33.855, 1.2354e-06], [34.018, 1.1795e-06], [34.143, 1.1262e-06], [34.278, 1.0824e-06], [34.394, 1.0449e-06], [34.471, 1.0199e-06]]
        self.concrete_150 = [[0.001, 0.7871], [0.098, 0.7081], [0.223, 0.6541], [0.329, 0.591], [0.444, 0.5424], [0.579, 0.5043], [0.675, 0.4689], [0.791, 0.4448], [0.887, 0.4219], [0.983, 0.3958], [1.06, 0.3729], [1.195, 0.3498], [1.292, 0.326], [1.436, 0.3078], [1.532, 0.2901], [1.667, 0.26794], [1.763, 0.25469], [1.879, 0.23945], [2.004, 0.22562], [2.081, 0.21495], [2.187, 0.20568], [2.293, 0.19768], [2.408, 0.18668], [2.562, 0.17551], [2.668, 0.16868], [2.793, 0.15894], [2.909, 0.1491], [3.034, 0.14394], [3.13, 0.13713], [3.226, 0.12949], [3.38, 0.12282], [3.496, 0.11547], [3.621, 0.11001], [3.756, 0.10434], [3.871, 0.09985], [4.016, 0.09533], [4.112, 0.09082], [4.227, 0.0871], [4.381, 0.08298], [4.497, 0.07905], [4.622, 0.07481], [4.738, 0.07238], [4.872, 0.06865], [4.997, 0.0657], [5.123, 0.06328], [5.219, 0.06029], [5.382, 0.05731], [5.517, 0.05376], [5.662, 0.05178], [5.777, 0.04912], [5.931, 0.0471], [6.047, 0.04507], [6.191, 0.04256], [6.335, 0.04028], [6.47, 0.03846], [6.595, 0.03648], [6.759, 0.03522], [6.855, 0.03355], [6.961, 0.03196], [7.096, 0.03099], [7.24, 0.02985], [7.346, 0.028442], [7.481, 0.027457], [7.577, 0.026273], [7.721, 0.024865], [7.866, 0.023846], [7.991, 0.022919], [8.116, 0.022028], [8.251, 0.021172], [8.405, 0.020126], [8.549, 0.019174], [8.655, 0.018347], [8.809, 0.017673], [8.886, 0.016874], [9.05, 0.016182], [9.194, 0.01545], [9.31, 0.014784], [9.435, 0.014367], [9.55, 0.013809], [9.656, 0.013155], [9.8, 0.012672], [9.926, 0.012072], [9.993, 0.01168], [10.137, 0.011201], [10.272, 0.010837], [10.407, 0.010439], [10.513, 0.010055], [10.657, 0.0096], [10.782, 0.009187], [10.888, 0.008888], [11.032, 0.008505], [11.167, 0.008192], [11.292, 0.007944], [11.418, 0.007551], [11.562, 0.007258], [11.687, 0.007006], [11.822, 0.00666], [11.957, 0.006359], [12.091, 0.006139], [12.207, 0.005874], [12.342, 0.005658], [12.486, 0.005438], [12.582, 0.00525], [12.707, 0.005013], [12.804, 0.004882], [12.909, 0.004713], [13.015, 0.00454], [13.092, 0.004441], [13.227, 0.004287], [13.343, 0.004148], [13.468, 0.004013], [13.583, 0.003857], [13.737, 0.00365], [13.91, 0.003493], [14.045, 0.003357], [14.141, 0.003212], [14.286, 0.003108], [14.44, 0.002954], [14.584, 0.002827], [14.729, 0.0026814], [14.825, 0.0026057], [14.988, 0.0024825], [15.133, 0.002386], [15.268, 0.0022781], [15.412, 0.0021847], [15.518, 0.0020998], [15.624, 0.0020315], [15.72, 0.0019829], [15.845, 0.0019142], [15.961, 0.0018479], [16.076, 0.0017879], [16.172, 0.0017374], [16.307, 0.0016773], [16.423, 0.0016227], [16.548, 0.0015562], [16.682, 0.0014696], [16.817, 0.0014031], [16.981, 0.0013486], [17.087, 0.0013163], [17.212, 0.0012596], [17.327, 0.0012187], [17.433, 0.001179], [17.568, 0.0011332], [17.683, 0.0010844], [17.809, 0.0010331], [17.934, 0.0009951], [18.097, 0.0009522], [18.271, 0.0009132], [18.415, 0.0008719], [18.569, 0.0008362], [18.704, 0.0007966], [18.829, 0.0007623], [18.954, 0.0007326], [19.089, 0.0007057], [19.214, 0.0006783], [19.339, 0.0006519], [19.522, 0.0006252], [19.666, 0.0005969], [19.83, 0.0005763], [19.897, 0.0005526], [20.051, 0.00053], [20.205, 0.0005083], [20.34, 0.0004821], [20.484, 0.0004644], [20.609, 0.0004385], [20.773, 0.0004187], [20.917, 0.0004033], [21.071, 0.0003885], [21.168, 0.0003767], [21.302, 0.0003565], [21.476, 0.0003411], [21.639, 0.0003279], [21.764, 0.0003144], [21.899, 0.0003015], [22.005, 0.0002911], [22.13, 0.00027978], [22.265, 0.0002695], [22.39, 0.00025732], [22.506, 0.00024895], [22.621, 0.0002398], [22.756, 0.00022997], [22.881, 0.00022152], [23.016, 0.00021197], [23.15, 0.00020328], [23.295, 0.00019452], [23.42, 0.0001882], [23.526, 0.00018088], [23.651, 0.00017423], [23.805, 0.00016636], [23.949, 0.00015744], [24.075, 0.00015233], [24.2, 0.00014608], [24.344, 0.00014102], [24.44, 0.00013614], [24.556, 0.00013056], [24.71, 0.00012576], [24.816, 0.00012114], [24.912, 0.00011772], [25.027, 0.00011339], [25.172, 0.00011019], [25.268, 0.00010732], [25.384, 0.00010383], [25.518, 9.848e-05], [25.672, 9.382e-05], [25.826, 9.077e-05], [25.971, 8.629e-05], [26.096, 8.239e-05], [26.231, 7.954e-05], [26.375, 7.527e-05], [26.5, 7.235e-05], [26.635, 7e-05], [26.77, 6.757e-05], [26.875, 6.437e-05], [27.039, 6.146e-05], [27.174, 5.869e-05], [27.328, 5.616e-05], [27.491, 5.421e-05], [27.626, 5.222e-05], [27.78, 5.03e-05], [27.876, 4.74e-05], [28.011, 4.586e-05], [28.127, 4.407e-05], [28.261, 4.227e-05], [28.425, 4.08e-05], [28.541, 3.904e-05], [28.685, 3.761e-05], [28.8, 3.631e-05], [28.916, 3.489e-05], [29.051, 3.361e-05], [29.185, 3.216e-05], [29.33, 3.091e-05], [29.493, 2.932e-05], [29.628, 2.8306e-05], [29.734, 2.7086e-05], [29.83, 2.6321e-05], [29.975, 2.5466e-05], [30.081, 2.4638e-05], [30.225, 2.3215e-05], [30.369, 2.2117e-05], [30.504, 2.1024e-05], [30.648, 2.0341e-05], [30.745, 1.9637e-05], [30.87, 1.8749e-05], [31.005, 1.798e-05], [31.149, 1.7281e-05], [31.293, 1.6683e-05], [31.399, 1.607e-05], [31.524, 1.5445e-05], [31.649, 1.4812e-05], [31.784, 1.4173e-05], [31.967, 1.3533e-05], [32.092, 1.2978e-05], [32.217, 1.2556e-05], [32.362, 1.2015e-05], [32.477, 1.1447e-05], [32.622, 1.0977e-05], [32.747, 1.0481e-05], [32.853, 1.0051e-05], [32.997, 9.789e-06], [33.112, 9.347e-06], [33.276, 8.885e-06], [33.469, 8.427e-06], [33.584, 8.064e-06], [33.709, 7.717e-06], [33.825, 7.466e-06], [33.95, 7.176e-06], [34.113, 6.912e-06], [34.258, 6.658e-06], [34.412, 6.329e-06], [34.518, 6.016e-06], [34.643, 5.757e-06], [34.778, 5.545e-06], [34.893, 5.306e-06], [35.009, 5.145e-06], [35.143, 4.967e-06], [35.269, 4.837e-06], [35.384, 4.639e-06], [35.509, 4.469e-06], [35.605, 4.323e-06], [35.74, 4.146e-06], [35.885, 3.941e-06], [36.039, 3.755e-06], [36.164, 3.609e-06], [36.289, 3.484e-06], [36.424, 3.348e-06], [36.539, 3.247e-06], [36.635, 3.134e-06], [36.751, 3.026e-06], [36.895, 2.902e-06], [37.049, 2.7706e-06], [37.165, 2.6746e-06], [37.28, 2.5763e-06], [37.386, 2.4762e-06], [37.502, 2.3642e-06], [37.607, 2.2823e-06], [37.694, 2.2228e-06], [37.819, 2.1553e-06], [37.925, 2.0806e-06], [37.992, 2.0041e-06], [38.089, 1.9262e-06], [38.204, 1.8595e-06], [38.368, 1.7872e-06], [38.474, 1.733e-06], [38.589, 1.6878e-06], [38.685, 1.6437e-06], [38.782, 1.5938e-06], [38.868, 1.5522e-06], [38.955, 1.5117e-06], [39.061, 1.4594e-06], [39.128, 1.4213e-06], [39.253, 1.3541e-06], [39.398, 1.3072e-06], [39.494, 1.2731e-06], [39.6, 1.2344e-06], [39.725, 1.1969e-06], [39.85, 1.1504e-06], [39.966, 1.1032e-06], [40.1, 1.0674e-06], [40.187, 1.035e-06], [40.283, 1.0102e-06]]
        self.concrete_200 = [[0.078, 1.0032], [0.194, 0.9473], [0.3, 0.9005], [0.444, 0.8541], [0.55, 0.8245], [0.665, 0.7925], [0.742, 0.7434], [0.839, 0.702], [0.983, 0.6688], [1.147, 0.6358], [1.243, 0.599], [1.339, 0.5796], [1.445, 0.5546], [1.561, 0.526], [1.734, 0.4967], [1.859, 0.4795], [1.965, 0.4538], [2.1, 0.4324], [2.215, 0.4137], [2.331, 0.3968], [2.446, 0.378], [2.562, 0.3577], [2.706, 0.3469], [2.802, 0.3356], [2.947, 0.319], [3.043, 0.3073], [3.149, 0.294], [3.255, 0.27889], [3.409, 0.26805], [3.534, 0.25707], [3.688, 0.24009], [3.852, 0.22823], [3.996, 0.21695], [4.198, 0.20533], [4.352, 0.19605], [4.477, 0.18926], [4.602, 0.1819], [4.718, 0.17406], [4.853, 0.16619], [4.978, 0.16008], [5.103, 0.15318], [5.266, 0.14594], [5.411, 0.13873], [5.526, 0.13422], [5.671, 0.129], [5.815, 0.12481], [5.902, 0.11943], [6.027, 0.11529], [6.142, 0.11179], [6.277, 0.10768], [6.364, 0.10464], [6.508, 0.10035], [6.643, 0.09688], [6.768, 0.09332], [6.883, 0.08832], [7.009, 0.08488], [7.191, 0.08231], [7.374, 0.0779], [7.519, 0.07487], [7.634, 0.07196], [7.769, 0.07008], [7.875, 0.06691], [8.038, 0.06431], [8.241, 0.06181], [8.366, 0.05876], [8.481, 0.05635], [8.635, 0.0544], [8.78, 0.05205], [8.934, 0.04992], [9.059, 0.04841], [9.222, 0.04601], [9.357, 0.04413], [9.482, 0.04279], [9.636, 0.04131], [9.8, 0.03944], [9.944, 0.03799], [10.117, 0.03651], [10.243, 0.03494], [10.377, 0.03366], [10.502, 0.03271], [10.608, 0.03157], [10.772, 0.03041], [10.907, 0.02949], [11.032, 0.028468], [11.147, 0.027422], [11.292, 0.026298], [11.426, 0.025276], [11.58, 0.024347], [11.715, 0.023556], [11.821, 0.02284], [11.956, 0.022001], [12.119, 0.021192], [12.254, 0.020504], [12.379, 0.019881], [12.543, 0.019066], [12.649, 0.018487], [12.745, 0.017926], [12.88, 0.017305], [13.005, 0.016854], [13.14, 0.016163], [13.274, 0.015535], [13.428, 0.015063], [13.602, 0.014446], [13.746, 0.013854], [13.89, 0.013315], [14.035, 0.012939], [14.169, 0.012382], [14.304, 0.011979], [14.449, 0.011514], [14.583, 0.01114], [14.747, 0.010754], [14.853, 0.01045], [14.968, 0.010133], [15.103, 0.009782], [15.219, 0.009402], [15.344, 0.009116], [15.498, 0.008704], [15.661, 0.008384], [15.815, 0.008041], [15.921, 0.007745], [16.075, 0.007444], [16.22, 0.007202], [16.412, 0.006922], [16.547, 0.006668], [16.71, 0.006367], [16.864, 0.006106], [16.999, 0.005868], [17.182, 0.005603], [17.307, 0.005445], [17.403, 0.005268], [17.548, 0.005052], [17.702, 0.004909], [17.817, 0.004708], [17.971, 0.004545], [18.116, 0.004369], [18.26, 0.004217], [18.462, 0.004036], [18.616, 0.003862], [18.77, 0.003679], [18.876, 0.003575], [19.04, 0.003406], [19.213, 0.003295], [19.338, 0.003167], [19.463, 0.003058], [19.617, 0.002978], [19.79, 0.0028621], [19.906, 0.0027813], [20.05, 0.0026497], [20.195, 0.0025355], [20.358, 0.0024424], [20.493, 0.0023423], [20.628, 0.0022562], [20.782, 0.0021733], [20.926, 0.002098], [21.061, 0.0020076], [21.186, 0.0019338], [21.321, 0.0018668], [21.455, 0.0017903], [21.581, 0.0017321], [21.725, 0.0016795], [21.879, 0.0016178], [22.004, 0.0015584], [22.158, 0.0014978], [22.293, 0.0014332], [22.466, 0.0013836], [22.591, 0.0013269], [22.764, 0.001281], [22.918, 0.0012393], [23.063, 0.0011964], [23.169, 0.0011601], [23.303, 0.001115], [23.419, 0.0010955], [23.573, 0.0010483], [23.698, 0.0010143], [23.823, 0.0009727], [23.958, 0.0009349], [24.064, 0.0009085], [24.199, 0.0008732], [24.381, 0.00083], [24.545, 0.0008013], [24.67, 0.000777], [24.834, 0.0007402], [24.969, 0.0007114], [25.113, 0.0006853], [25.257, 0.0006616], [25.421, 0.0006373], [25.565, 0.0006165], [25.681, 0.0005939], [25.835, 0.0005721], [25.989, 0.0005535], [26.133, 0.0005331], [26.278, 0.0005147], [26.451, 0.0004958], [26.557, 0.0004775], [26.682, 0.000461], [26.807, 0.000447], [26.961, 0.0004296], [27.086, 0.0004148], [27.211, 0.0004013], [27.346, 0.0003848], [27.509, 0.0003723], [27.654, 0.0003602], [27.808, 0.0003493], [27.923, 0.0003365], [28.048, 0.0003248], [28.154, 0.0003149], [28.289, 0.0003067], [28.424, 0.0002961], [28.549, 0.00028522], [28.674, 0.00027534], [28.809, 0.0002664], [28.953, 0.00025717], [29.088, 0.00024718], [29.213, 0.00023862], [29.357, 0.00023188], [29.463, 0.00022385], [29.579, 0.00021658], [29.714, 0.0002077], [29.839, 0.00020184], [29.945, 0.00019528], [30.07, 0.00019103], [30.224, 0.0001836], [30.339, 0.00017724], [30.435, 0.00017186], [30.609, 0.00016628], [30.724, 0.00016123], [30.83, 0.00015394], [30.955, 0.00015025], [31.1, 0.00014314], [31.234, 0.00013849], [31.359, 0.00013488], [31.494, 0.00013021], [31.619, 0.00012626], [31.754, 0.00012215], [31.86, 0.00011792], [32.004, 0.00011409], [32.129, 0.00011063], [32.245, 0.0001068], [32.389, 0.00010355], [32.505, 0.00010019], [32.63, 9.736e-05], [32.803, 9.358e-05], [32.89, 9.014e-05], [33.015, 8.682e-05], [33.179, 8.345e-05], [33.323, 8.092e-05], [33.448, 7.846e-05], [33.573, 7.558e-05], [33.698, 7.328e-05], [33.823, 7.074e-05], [33.958, 6.829e-05], [34.093, 6.564e-05], [34.237, 6.337e-05], [34.401, 6.158e-05], [34.507, 5.905e-05], [34.613, 5.701e-05], [34.738, 5.467e-05], [34.901, 5.29e-05], [35.027, 5.129e-05], [35.142, 4.962e-05], [35.277, 4.812e-05], [35.392, 4.645e-05], [35.537, 4.514e-05], [35.623, 4.367e-05], [35.748, 4.244e-05], [35.902, 4.097e-05], [36.037, 3.973e-05], [36.143, 3.843e-05], [36.249, 3.719e-05], [36.374, 3.614e-05], [36.48, 3.496e-05], [36.615, 3.405e-05], [36.701, 3.294e-05], [36.826, 3.194e-05], [36.903, 3.09e-05], [37.028, 3.01e-05], [37.134, 2.938e-05], [37.279, 2.8549e-05], [37.413, 2.7682e-05], [37.539, 2.6783e-05], [37.644, 2.5912e-05], [37.76, 2.5125e-05], [37.885, 2.4309e-05], [38.029, 2.3519e-05], [38.164, 2.2704e-05], [38.26, 2.1726e-05], [38.405, 2.0927e-05], [38.559, 2.0114e-05], [38.694, 1.946e-05], [38.819, 1.8953e-05], [38.925, 1.8418e-05], [39.03, 1.7977e-05], [39.146, 1.7354e-05], [39.281, 1.6939e-05], [39.387, 1.6281e-05], [39.55, 1.5752e-05], [39.675, 1.524e-05], [39.829, 1.4745e-05], [39.926, 1.4203e-05], [40.07, 1.3802e-05], [40.224, 1.3149e-05], [40.339, 1.2721e-05], [40.445, 1.2335e-05], [40.599, 1.1908e-05], [40.705, 1.142e-05], [40.84, 1.0952e-05], [40.946, 1.0666e-05], [41.071, 1.0297e-05], [41.206, 9.896e-06], [41.35, 9.554e-06], [41.475, 9.223e-06], [41.591, 8.845e-06], [41.725, 8.595e-06], [41.87, 8.353e-06], [42.033, 8.01e-06], [42.159, 7.802e-06], [42.284, 7.515e-06], [42.399, 7.255e-06], [42.544, 6.988e-06], [42.669, 6.731e-06], [42.813, 6.498e-06], [42.909, 6.343e-06], [43.054, 6.136e-06], [43.14, 5.937e-06], [43.294, 5.706e-06], [43.41, 5.496e-06], [43.564, 5.306e-06], [43.718, 5.111e-06], [43.833, 4.978e-06], [43.958, 4.774e-06], [44.112, 4.578e-06], [44.228, 4.439e-06], [44.363, 4.333e-06], [44.488, 4.164e-06], [44.661, 4.02e-06], [44.805, 3.847e-06], [44.94, 3.706e-06], [45.065, 3.593e-06], [45.19, 3.484e-06], [45.287, 3.408e-06], [45.412, 3.283e-06], [45.527, 3.183e-06], [45.643, 3.087e-06], [45.768, 2.986e-06], [45.854, 2.902e-06], [45.941, 2.8262e-06], [46.095, 2.7104e-06], [46.162, 2.6397e-06], [46.259, 2.5595e-06], [46.384, 2.4818e-06], [46.519, 2.3853e-06], [46.644, 2.3078e-06], [46.769, 2.2476e-06], [46.894, 2.1794e-06], [47, 2.1178e-06], [47.125, 2.04e-06], [47.24, 1.9737e-06], [47.423, 1.9012e-06], [47.606, 1.8354e-06], [47.751, 1.7836e-06], [47.876, 1.7256e-06], [48.01, 1.6695e-06], [48.126, 1.5905e-06], [48.261, 1.5389e-06], [48.395, 1.4596e-06], [48.54, 1.4184e-06], [48.694, 1.3573e-06], [48.819, 1.319e-06], [48.944, 1.2818e-06], [49.088, 1.2346e-06], [49.214, 1.2051e-06], [49.31, 1.1634e-06], [49.425, 1.1305e-06], [49.55, 1.0986e-06], [49.685, 1.0629e-06], [49.801, 1.0261e-06]]
        self.concrete_250 = [[0.03, 1.5591], [0.194, 1.469], [0.357, 1.3842], [0.54, 1.2758], [0.713, 1.2208], [0.838, 1.1554], [0.973, 1.1007], [1.098, 1.0326], [1.252, 0.9773], [1.377, 0.929], [1.522, 0.8889], [1.676, 0.8413], [1.791, 0.8086], [1.984, 0.7586], [2.109, 0.7243], [2.292, 0.6885], [2.436, 0.653], [2.59, 0.629], [2.725, 0.6072], [2.879, 0.5798], [2.966, 0.556], [3.11, 0.5297], [3.245, 0.508], [3.428, 0.485], [3.601, 0.4662], [3.755, 0.4432], [3.89, 0.4241], [4.024, 0.4076], [4.14, 0.3952], [4.275, 0.3824], [4.352, 0.3716], [4.496, 0.3579], [4.64, 0.3425], [4.766, 0.3321], [4.91, 0.3178], [5.035, 0.3095], [5.17, 0.2988], [5.314, 0.28526], [5.487, 0.26997], [5.622, 0.26178], [5.795, 0.24939], [5.921, 0.24129], [6.065, 0.23038], [6.161, 0.22338], [6.306, 0.21423], [6.411, 0.2059], [6.614, 0.19616], [6.758, 0.19021], [6.854, 0.18201], [7.018, 0.17455], [7.143, 0.16962], [7.249, 0.16303], [7.374, 0.15912], [7.489, 0.15361], [7.614, 0.14961], [7.788, 0.14443], [7.874, 0.14035], [8.048, 0.13609], [8.182, 0.1308], [8.375, 0.12407], [8.519, 0.11872], [8.664, 0.11461], [8.808, 0.11088], [8.923, 0.10681], [9.097, 0.1038], [9.203, 0.10042], [9.357, 0.09737], [9.511, 0.09297], [9.616, 0.09055], [9.77, 0.08741], [9.924, 0.08383], [10.069, 0.08111], [10.223, 0.07625], [10.406, 0.07361], [10.569, 0.07075], [10.714, 0.068], [10.868, 0.06594], [11.002, 0.06351], [11.137, 0.06091], [11.301, 0.0579], [11.484, 0.05602], [11.599, 0.05361], [11.744, 0.05221], [11.878, 0.05062], [12.032, 0.04887], [12.138, 0.04718], [12.321, 0.04544], [12.398, 0.04406], [12.591, 0.04245], [12.744, 0.04125], [12.879, 0.03964], [12.995, 0.0381], [13.158, 0.03703], [13.283, 0.03582], [13.409, 0.03489], [13.563, 0.03383], [13.678, 0.03209], [13.832, 0.03118], [13.967, 0.0301], [14.102, 0.02925], [14.227, 0.028179], [14.4, 0.027263], [14.544, 0.026436], [14.679, 0.025464], [14.833, 0.024691], [14.968, 0.023679], [15.122, 0.022809], [15.295, 0.021874], [15.401, 0.021304], [15.613, 0.020386], [15.767, 0.01968], [15.911, 0.019041], [16.084, 0.018422], [16.209, 0.017745], [16.363, 0.017055], [16.508, 0.016537], [16.662, 0.015895], [16.768, 0.015378], [16.922, 0.014846], [17.105, 0.014237], [17.249, 0.013714], [17.403, 0.013152], [17.538, 0.012557], [17.701, 0.012176], [17.817, 0.011911], [17.961, 0.011524], [18.105, 0.01115], [18.25, 0.010693], [18.423, 0.010322], [18.558, 0.009987], [18.664, 0.009599], [18.827, 0.00939], [18.943, 0.008926], [19.039, 0.008655], [19.193, 0.008373], [19.395, 0.008066], [19.607, 0.007821], [19.684, 0.00755], [19.828, 0.007273], [19.973, 0.007052], [20.098, 0.006823], [20.281, 0.0065], [20.377, 0.006317], [20.502, 0.006098], [20.646, 0.005952], [20.791, 0.005759], [20.916, 0.005547], [21.07, 0.005343], [21.272, 0.005102], [21.407, 0.004958], [21.542, 0.004786], [21.676, 0.0046], [21.869, 0.004431], [22.003, 0.004221], [22.167, 0.004066], [22.34, 0.003925], [22.465, 0.003831], [22.6, 0.003666], [22.725, 0.003555], [22.87, 0.003424], [23.043, 0.003277], [23.178, 0.003198], [23.312, 0.003088], [23.399, 0.003007], [23.534, 0.0028775], [23.688, 0.002784], [23.861, 0.0026817], [23.977, 0.0026003], [24.15, 0.0025213], [24.333, 0.0024074], [24.516, 0.0023138], [24.65, 0.0022386], [24.804, 0.0021564], [24.949, 0.0020863], [25.074, 0.0020052], [25.228, 0.0019486], [25.343, 0.0018729], [25.507, 0.001812], [25.642, 0.0017531], [25.776, 0.0016813], [25.902, 0.001623], [26.065, 0.0015634], [26.229, 0.0015093], [26.383, 0.0014635], [26.527, 0.0014159], [26.652, 0.0013639], [26.777, 0.0013254], [26.951, 0.0012795], [27.066, 0.0012406], [27.22, 0.0012003], [27.345, 0.0011613], [27.48, 0.0011211], [27.653, 0.0010847], [27.778, 0.0010541], [27.903, 0.0010198], [28.077, 0.000978], [28.192, 0.0009546], [28.337, 0.0009155], [28.481, 0.0008916], [28.645, 0.0008608], [28.818, 0.0008255], [29.001, 0.0007917], [29.135, 0.0007592], [29.289, 0.0007378], [29.395, 0.0007122], [29.569, 0.0006741], [29.742, 0.0006408], [29.925, 0.0006159], [30.088, 0.0005932], [30.223, 0.0005765], [30.415, 0.0005627], [30.521, 0.0005408], [30.646, 0.0005221], [30.82, 0.000504], [30.983, 0.0004844], [31.147, 0.0004625], [31.291, 0.0004455], [31.445, 0.0004301], [31.599, 0.0004098], [31.753, 0.0003973], [31.888, 0.0003853], [32.042, 0.0003703], [32.215, 0.0003567], [32.35, 0.0003459], [32.504, 0.0003324], [32.658, 0.0003216], [32.774, 0.0003125], [32.879, 0.0003024], [33.053, 0.0002919], [33.226, 0.00027995], [33.38, 0.00027085], [33.515, 0.00026263], [33.649, 0.0002502], [33.832, 0.00024048], [33.986, 0.00023267], [34.121, 0.00022412], [34.294, 0.00021351], [34.468, 0.00020703], [34.593, 0.00019767], [34.776, 0.00019125], [34.949, 0.00018341], [35.112, 0.00017706], [35.276, 0.00017056], [35.449, 0.00016393], [35.565, 0.00015895], [35.699, 0.00015345], [35.825, 0.00014912], [35.959, 0.000143], [36.113, 0.00013654], [36.219, 0.00013298], [36.373, 0.00012866], [36.527, 0.00012448], [36.633, 0.00012123], [36.787, 0.0001155], [36.912, 0.00011224], [37.028, 0.00010883], [37.172, 0.00010552], [37.316, 0.00010255], [37.461, 9.921e-05], [37.557, 9.663e-05], [37.673, 9.287e-05], [37.846, 8.985e-05], [37.952, 8.674e-05], [38.077, 8.504e-05], [38.192, 8.209e-05], [38.327, 7.995e-05], [38.491, 7.668e-05], [38.664, 7.37e-05], [38.837, 7.037e-05], [39.02, 6.793e-05], [39.164, 6.558e-05], [39.28, 6.317e-05], [39.444, 6.058e-05], [39.607, 5.771e-05], [39.78, 5.584e-05], [39.915, 5.414e-05], [40.059, 5.192e-05], [40.252, 5.013e-05], [40.387, 4.818e-05], [40.541, 4.651e-05], [40.733, 4.441e-05], [40.868, 4.249e-05], [41.022, 4.111e-05], [41.147, 3.969e-05], [41.282, 3.84e-05], [41.455, 3.691e-05], [41.648, 3.532e-05], [41.802, 3.394e-05], [41.907, 3.299e-05], [42.033, 3.184e-05], [42.148, 3.074e-05], [42.321, 2.981e-05], [42.437, 2.8776e-05], [42.6, 2.7841e-05], [42.716, 2.6996e-05], [42.889, 2.6061e-05], [43.014, 2.5325e-05], [43.159, 2.4557e-05], [43.265, 2.3863e-05], [43.38, 2.3037e-05], [43.515, 2.2239e-05], [43.64, 2.1612e-05], [43.746, 2.1002e-05], [43.871, 2.0409e-05], [44.034, 1.9702e-05], [44.179, 1.902e-05], [44.304, 1.8483e-05], [44.448, 1.7843e-05], [44.622, 1.715e-05], [44.766, 1.6483e-05], [44.862, 1.5773e-05], [45.026, 1.5294e-05], [45.189, 1.47e-05], [45.343, 1.4253e-05], [45.449, 1.376e-05], [45.574, 1.3312e-05], [45.709, 1.288e-05], [45.921, 1.2352e-05], [46.085, 1.1898e-05], [46.2, 1.1486e-05], [46.383, 1.1113e-05], [46.556, 1.0681e-05], [46.691, 1.0311e-05], [46.816, 9.954e-06], [46.941, 9.652e-06], [47.095, 9.297e-06], [47.297, 8.819e-06], [47.451, 8.495e-06], [47.634, 8.201e-06], [47.827, 7.83e-06], [47.981, 7.626e-06], [48.106, 7.362e-06], [48.221, 7.138e-06], [48.385, 6.922e-06], [48.529, 6.638e-06], [48.645, 6.352e-06], [48.78, 6.091e-06], [48.933, 5.893e-06], [49.068, 5.664e-06], [49.251, 5.408e-06], [49.415, 5.233e-06], [49.559, 5.051e-06], [49.713, 4.866e-06], [49.857, 4.739e-06], [50.011, 4.545e-06], [50.214, 4.378e-06], [50.358, 4.217e-06], [50.531, 4.062e-06], [50.647, 3.939e-06], [50.772, 3.802e-06], [50.916, 3.687e-06], [51.032, 3.583e-06], [51.157, 3.466e-06], [51.301, 3.354e-06], [51.455, 3.238e-06], [51.628, 3.105e-06], [51.782, 2.997e-06], [51.908, 2.8872e-06], [52.042, 2.7749e-06], [52.177, 2.6848e-06], [52.37, 2.5691e-06], [52.495, 2.4966e-06], [52.649, 2.3995e-06], [52.755, 2.3216e-06], [52.899, 2.2362e-06], [53.024, 2.1683e-06], [53.216, 2.0795e-06], [53.38, 2.0119e-06], [53.544, 1.9252e-06], [53.727, 1.8463e-06], [53.842, 1.7824e-06], [53.986, 1.7245e-06], [54.16, 1.6538e-06], [54.314, 1.5965e-06], [54.458, 1.5311e-06], [54.602, 1.4781e-06], [54.756, 1.4301e-06], [54.891, 1.3805e-06], [55.055, 1.3416e-06], [55.17, 1.3009e-06], [55.305, 1.2614e-06], [55.421, 1.2258e-06], [55.575, 1.1807e-06], [55.661, 1.1398e-06], [55.786, 1.0979e-06], [55.921, 1.0414e-06], [56.037, 1.0187e-06]]
        self.concrete_300 = [[0.078, 2.0995], [0.213, 1.9914], [0.347, 1.9098], [0.492, 1.8275], [0.617, 1.7449], [0.732, 1.6368], [0.858, 1.5836], [0.983, 1.5187], [1.089, 1.4694], [1.204, 1.4029], [1.3, 1.3454], [1.445, 1.2903], [1.541, 1.2566], [1.647, 1.2158], [1.762, 1.1762], [1.849, 1.1405], [1.984, 1.0962], [2.08, 1.0582], [2.176, 1.0329], [2.292, 0.9993], [2.426, 0.9584], [2.59, 0.913], [2.725, 0.866], [2.85, 0.836], [2.965, 0.8053], [3.119, 0.7808], [3.283, 0.7472], [3.399, 0.7229], [3.514, 0.6979], [3.649, 0.6605], [3.774, 0.6432], [3.928, 0.6074], [4.092, 0.5813], [4.178, 0.5673], [4.342, 0.5465], [4.428, 0.5358], [4.563, 0.5172], [4.65, 0.5026], [4.746, 0.4928], [4.881, 0.4767], [4.958, 0.4633], [5.064, 0.4453], [5.227, 0.4327], [5.285, 0.4223], [5.401, 0.4113], [5.506, 0.3988], [5.612, 0.3876], [5.699, 0.3791], [5.795, 0.3692], [5.92, 0.3612], [5.997, 0.3518], [6.074, 0.3434], [6.19, 0.3344], [6.276, 0.3264], [6.402, 0.3165], [6.527, 0.3042], [6.671, 0.2963], [6.777, 0.28726], [6.873, 0.28038], [6.95, 0.27367], [7.056, 0.26712], [7.123, 0.2613], [7.22, 0.25561], [7.316, 0.24949], [7.412, 0.24352], [7.537, 0.23665], [7.672, 0.22946], [7.787, 0.22151], [7.903, 0.21765], [8.009, 0.21011], [8.144, 0.20283], [8.269, 0.19581], [8.442, 0.18987], [8.557, 0.18492], [8.663, 0.18129], [8.808, 0.17578], [8.865, 0.17271], [8.981, 0.16784], [9.125, 0.16203], [9.202, 0.1585], [9.347, 0.15335], [9.472, 0.14674], [9.558, 0.14386], [9.645, 0.14103], [9.789, 0.13736], [9.886, 0.13407], [9.982, 0.13086], [10.117, 0.12745], [10.242, 0.12412], [10.309, 0.12115], [10.444, 0.11644], [10.617, 0.11366], [10.762, 0.11021], [10.848, 0.10781], [10.983, 0.105], [11.089, 0.10271], [11.252, 0.09872], [11.377, 0.09635], [11.512, 0.09261], [11.705, 0.0894], [11.83, 0.08593], [11.965, 0.08295], [12.128, 0.07938], [12.292, 0.07714], [12.398, 0.07463], [12.609, 0.07173], [12.686, 0.07017], [12.812, 0.06864], [12.946, 0.06612], [13.1, 0.06411], [13.225, 0.06203], [13.379, 0.06054], [13.456, 0.05896], [13.62, 0.05705], [13.745, 0.05568], [13.89, 0.05411], [14.063, 0.05247], [14.197, 0.0511], [14.332, 0.04955], [14.457, 0.04783], [14.544, 0.0471], [14.669, 0.04587], [14.833, 0.04429], [15.016, 0.04238], [15.112, 0.04136], [15.295, 0.04011], [15.401, 0.0388], [15.497, 0.03804], [15.612, 0.03689], [15.766, 0.03616], [15.834, 0.03522], [15.997, 0.03408], [16.161, 0.03261], [16.286, 0.03148], [16.411, 0.03052], [16.527, 0.02979], [16.652, 0.02889], [16.729, 0.028572], [16.815, 0.028011], [16.969, 0.027341], [17.066, 0.026923], [17.2, 0.025934], [17.306, 0.025425], [17.441, 0.024762], [17.528, 0.024491], [17.672, 0.023852], [17.797, 0.023333], [17.97, 0.022083], [18.076, 0.021459], [18.163, 0.021038], [18.346, 0.020581], [18.5, 0.019694], [18.644, 0.019096], [18.808, 0.018516], [18.923, 0.017993], [19.068, 0.017409], [19.222, 0.016732], [19.299, 0.016332], [19.472, 0.015731], [19.645, 0.01522], [19.789, 0.014791], [19.886, 0.014405], [20.04, 0.01403], [20.145, 0.013664], [20.299, 0.013104], [20.453, 0.012678], [20.617, 0.012293], [20.752, 0.01192], [20.896, 0.011558], [21.069, 0.011207], [21.166, 0.010891], [21.291, 0.010677], [21.416, 0.01033], [21.57, 0.009972], [21.724, 0.009627], [21.916, 0.009274], [22.099, 0.008874], [22.224, 0.008567], [22.34, 0.008362], [22.494, 0.00809], [22.619, 0.007896], [22.725, 0.007657], [22.917, 0.007311], [23.091, 0.007057], [23.216, 0.006873], [23.37, 0.006635], [23.504, 0.006448], [23.63, 0.00628], [23.774, 0.006063], [23.938, 0.005879], [24.13, 0.005601], [24.265, 0.005407], [24.409, 0.005231], [24.582, 0.005039], [24.813, 0.004864], [24.996, 0.004665], [25.083, 0.004543], [25.266, 0.004376], [25.41, 0.004234], [25.612, 0.004124], [25.776, 0.003981], [25.93, 0.003843], [26.065, 0.003694], [26.247, 0.003582], [26.401, 0.003443], [26.584, 0.003331], [26.729, 0.00323], [26.883, 0.003104], [27.008, 0.00299], [27.133, 0.002893], [27.248, 0.0028423], [27.393, 0.00275], [27.518, 0.0026723], [27.653, 0.0025912], [27.778, 0.0025292], [27.884, 0.0024524], [28.086, 0.0023571], [28.24, 0.0022705], [28.403, 0.0022113], [28.548, 0.0021253], [28.654, 0.0020836], [28.788, 0.0020159], [28.942, 0.0019461], [29.048, 0.0018954], [29.183, 0.0018338], [29.337, 0.0017664], [29.52, 0.0017015], [29.674, 0.0016426], [29.789, 0.0016104], [29.886, 0.0015649], [30.02, 0.0015174], [30.136, 0.0014584], [30.271, 0.0014235], [30.386, 0.0013864], [30.569, 0.0013354], [30.704, 0.0013006], [30.848, 0.0012556], [31.021, 0.0012148], [31.146, 0.0011779], [31.281, 0.0011422], [31.397, 0.0011075], [31.531, 0.0010762], [31.628, 0.0010528], [31.762, 0.0010321], [31.888, 0.000992], [32.08, 0.0009535], [32.205, 0.0009286], [32.321, 0.0009064], [32.494, 0.0008692], [32.6, 0.0008522], [32.744, 0.0008227], [32.898, 0.000803], [33.071, 0.0007786], [33.216, 0.0007566], [33.35, 0.0007337], [33.466, 0.0007161], [33.601, 0.0006959], [33.755, 0.0006733], [33.889, 0.0006485], [34.043, 0.0006302], [34.178, 0.0006125], [34.294, 0.0005913], [34.438, 0.0005771], [34.621, 0.0005559], [34.736, 0.0005402], [34.89, 0.0005227], [35.083, 0.0005057], [35.237, 0.0004882], [35.362, 0.0004754], [35.477, 0.000462], [35.583, 0.00045], [35.708, 0.0004354], [35.824, 0.0004231], [35.997, 0.0004093], [36.161, 0.000396], [36.296, 0.0003848], [36.459, 0.0003683], [36.565, 0.000361], [36.69, 0.0003485], [36.825, 0.0003372], [36.96, 0.0003299], [37.094, 0.0003191], [37.258, 0.0003088], [37.364, 0.0003021], [37.489, 0.0002922], [37.585, 0.00028461], [37.739, 0.00027597], [37.884, 0.00026642], [38.047, 0.00025663], [38.211, 0.00024829], [38.365, 0.0002397], [38.49, 0.00023293], [38.663, 0.00022437], [38.798, 0.00021804], [38.952, 0.00021049], [39.106, 0.00020455], [39.27, 0.00019878], [39.366, 0.00019317], [39.491, 0.00018648], [39.626, 0.00018122], [39.78, 0.00017688], [39.972, 0.00016963], [40.117, 0.0001634], [40.222, 0.00015809], [40.348, 0.00015465], [40.434, 0.00015028], [40.579, 0.00014604], [40.665, 0.00014254], [40.771, 0.00013883], [40.858, 0.0001361], [41.002, 0.00013226], [41.137, 0.00012853], [41.329, 0.00012518], [41.512, 0.00012005], [41.628, 0.00011769], [41.733, 0.00011362], [41.887, 0.00010944], [42.07, 0.00010473], [42.234, 0.00010155], [42.369, 9.912e-05], [42.475, 9.548e-05], [42.58, 9.237e-05], [42.763, 8.937e-05], [42.927, 8.628e-05], [43.129, 8.311e-05], [43.322, 8.023e-05], [43.456, 7.711e-05], [43.581, 7.477e-05], [43.678, 7.218e-05], [43.841, 7.03e-05], [43.976, 6.802e-05], [44.101, 6.61e-05], [44.255, 6.381e-05], [44.4, 6.146e-05], [44.534, 6.012e-05], [44.688, 5.843e-05], [44.833, 5.665e-05], [44.967, 5.506e-05], [45.073, 5.386e-05], [45.189, 5.222e-05], [45.323, 5.097e-05], [45.439, 4.975e-05], [45.612, 4.792e-05], [45.728, 4.637e-05], [45.891, 4.447e-05], [46.065, 4.312e-05], [46.219, 4.172e-05], [46.373, 4.027e-05], [46.507, 3.913e-05], [46.613, 3.82e-05], [46.748, 3.712e-05], [46.835, 3.623e-05], [46.95, 3.536e-05], [47.075, 3.414e-05], [47.21, 3.347e-05], [47.335, 3.217e-05], [47.537, 3.112e-05], [47.662, 3.025e-05], [47.758, 2.939e-05], [47.893, 2.8689e-05], [48.028, 2.7695e-05], [48.172, 2.7033e-05], [48.278, 2.6212e-05], [48.423, 2.5248e-05], [48.586, 2.4267e-05], [48.75, 2.3531e-05], [48.885, 2.2716e-05], [48.99, 2.1977e-05], [49.144, 2.1263e-05], [49.327, 2.0527e-05], [49.443, 1.9904e-05], [49.606, 1.9385e-05], [49.751, 1.888e-05], [49.886, 1.8266e-05], [50.078, 1.7634e-05], [50.213, 1.6986e-05], [50.357, 1.6543e-05], [50.511, 1.6005e-05], [50.675, 1.5588e-05], [50.809, 1.5015e-05], [50.944, 1.4559e-05], [51.05, 1.4086e-05], [51.175, 1.3689e-05], [51.32, 1.3244e-05], [51.493, 1.2842e-05], [51.676, 1.2452e-05], [51.849, 1.1942e-05], [51.974, 1.1554e-05], [52.118, 1.1228e-05], [52.282, 1.0839e-05], [52.436, 1.0464e-05], [52.6, 1.0102e-05], [52.744, 9.773e-06], [52.85, 9.477e-06], [53.004, 9.209e-06], [53.139, 8.89e-06], [53.245, 8.601e-06], [53.437, 8.359e-06], [53.572, 8.105e-06], [53.687, 7.894e-06], [53.86, 7.62e-06], [53.986, 7.356e-06], [54.111, 7.165e-06], [54.294, 6.917e-06], [54.505, 6.633e-06], [54.669, 6.404e-06], [54.784, 6.182e-06], [54.929, 5.981e-06], [55.083, 5.761e-06], [55.237, 5.586e-06], [55.4, 5.429e-06], [55.516, 5.252e-06], [55.67, 5.082e-06], [55.834, 4.916e-06], [55.978, 4.725e-06], [56.122, 4.532e-06], [56.286, 4.356e-06], [56.45, 4.214e-06], [56.623, 4.068e-06], [56.825, 3.927e-06], [57.008, 3.8e-06], [57.133, 3.676e-06], [57.268, 3.533e-06], [57.412, 3.419e-06], [57.547, 3.307e-06], [57.681, 3.221e-06], [57.797, 3.11e-06], [57.951, 3.009e-06], [58.086, 2.924e-06], [58.22, 2.835e-06], [58.384, 2.7368e-06], [58.528, 2.6713e-06], [58.673, 2.596e-06], [58.827, 2.4951e-06], [58.952, 2.4193e-06], [59.125, 2.3253e-06], [59.241, 2.2746e-06], [59.337, 2.2153e-06], [59.462, 2.1623e-06], [59.606, 2.1106e-06], [59.78, 2.0646e-06], [59.914, 1.9975e-06], [60.068, 1.9284e-06], [60.242, 1.8616e-06], [60.396, 1.7893e-06], [60.569, 1.7388e-06], [60.694, 1.6749e-06], [60.819, 1.6169e-06], [60.915, 1.5747e-06], [61.05, 1.5235e-06], [61.185, 1.4805e-06], [61.368, 1.4261e-06], [61.474, 1.4013e-06], [61.589, 1.3587e-06], [61.782, 1.3059e-06], [61.955, 1.2719e-06], [62.061, 1.2332e-06], [62.157, 1.2011e-06], [62.292, 1.1672e-06], [62.426, 1.1317e-06], [62.503, 1.1022e-06], [62.619, 1.0664e-06], [62.773, 1.0295e-06], [62.908, 1.0004e-06]]
        self.lead_50 = [[0, 1], [0.0165, 0.4212], [0.0203, 0.28709], [0.0249, 0.18406], [0.0324, 0.1412],
                        [0.0381, 0.10335], [0.0447, 0.07848], [0.0514, 0.05984], [0.0563, 0.04572], [0.0613, 0.037742],
                        [0.067, 0.02757], [0.0736, 0.02141], [0.0822, 0.017784], [0.0882, 0.0158], [0.094, 0.012072],
                        [0.0953, 0.009167], [0.1012, 0.007676], [0.108, 0.006146], [0.1158, 0.00545],
                        [0.1182, 0.004696], [0.1206, 0.00403], [0.1248, 0.0036097], [0.1317, 0.0031423],
                        [0.136, 0.0027975], [0.1446, 0.0023813], [0.1533, 0.0020899], [0.161, 0.0018454],
                        [0.1644, 0.0016463], [0.1713, 0.0014302], [0.1763, 0.0011783], [0.1814, 0.0010405],
                        [0.1866, 0.0009493], [0.1918, 0.0008607], [0.1996, 0.0007998], [0.2065, 0.0006836],
                        [0.2116, 0.0006098], [0.2195, 0.0005496], [0.2262, 0.0004969], [0.231, 0.0004495],
                        [0.2379, 0.0004159], [0.2449, 0.00038416], [0.2524, 0.0003386], [0.2572, 0.00031278],
                        [0.2627, 0.00028476], [0.2683, 0.00026864], [0.2731, 0.00024896], [0.2765, 0.00022739],
                        [0.282, 0.00021176], [0.2875, 0.00019247], [0.2951, 0.00017779], [0.302, 0.00016397],
                        [0.3054, 0.00015172], [0.3131, 0.00014313], [0.3172, 0.00013051], [0.3227, 0.00011959],
                        [0.3282, 0.00010923], [0.3323, 0.00010172], [0.3364, 9.52e-05], [0.342, 9.16e-05],
                        [0.3447, 8.58e-05], [0.3489, 8.19e-05], [0.3566, 7.89e-05], [0.362, 6.95e-05],
                        [0.3689, 6.5e-05], [0.3745, 6.1e-05], [0.38, 5.66e-05], [0.3848, 5.32e-05], [0.3896, 4.86e-05],
                        [0.3951, 4.43e-05], [0.4021, 4.2e-05], [0.4089, 3.73e-05], [0.4145, 3.48e-05],
                        [0.4193, 3.23e-05], [0.4262, 2.99e-05], [0.4332, 2.77e-05], [0.4428, 2.43e-05],
                        [0.4491, 2.31e-05], [0.4525, 2.16e-05], [0.458, 1.97e-05], [0.4649, 1.8e-05],
                        [0.4711, 1.65e-05], [0.478, 1.5e-05], [0.485, 1.41e-05], [0.4905, 1.29e-05], [0.5002, 1.22e-05],
                        [0.5085, 1.1e-05], [0.5087, 1.17e-05], [0.5099, 1.05e-05], [0.5124, 1e-05], [0.529, 8.25e-06],
                        [0.5334, 7.94e-06], [0.5395, 7.3e-06], [0.5483, 6.92e-06], [0.5517, 6.49e-06],
                        [0.5569, 5.97e-06], [0.5664, 4.85e-06], [0.5743, 4.6e-06], [0.5822, 4.34e-06],
                        [0.5856, 4.06e-06], [0.5909, 3.79e-06], [0.5979, 3.55e-06], [0.6083, 3.08e-06],
                        [0.617, 2.73e-06], [0.6354, 2.28e-06], [0.6467, 2.04e-06], [0.6545, 1.81e-06],
                        [0.6666, 1.48e-06], [0.6754, 1.34e-06], [0.6859, 1.23e-06], [0.6917, 1.15e-06],
                        [0.7005, 1.09e-06], [0.7138, 1e-06]]
        self.lead_70 = [[0.0014, 1], [0.0213, 0.4827], [0.0293, 0.35607], [0.0302, 0.26436], [0.0367, 0.19438],
                        [0.0463, 0.16587], [0.0585, 0.12355], [0.0653, 0.1068], [0.0762, 0.08405], [0.0871, 0.06383],
                        [0.0938, 0.05291], [0.1004, 0.04123], [0.1087, 0.036579], [0.1155, 0.03162], [0.1238, 0.028142],
                        [0.1264, 0.024804], [0.139, 0.023025], [0.143, 0.02036], [0.1499, 0.018535], [0.1554, 0.016657],
                        [0.1651, 0.01497], [0.1734, 0.013453], [0.1831, 0.012247], [0.1914, 0.011295],
                        [0.1955, 0.01035], [0.2053, 0.009607], [0.2108, 0.008947], [0.2163, 0.008145],
                        [0.2246, 0.007488], [0.2344, 0.007018], [0.2399, 0.006643], [0.2483, 0.006047],
                        [0.2567, 0.005836], [0.2608, 0.005435], [0.2706, 0.005127], [0.2775, 0.004728],
                        [0.2844, 0.004361], [0.2928, 0.004048], [0.3026, 0.0038311], [0.3123, 0.0035105],
                        [0.3193, 0.0032904], [0.3276, 0.0031344], [0.336, 0.002957], [0.3415, 0.0027448],
                        [0.3499, 0.0025895], [0.3569, 0.0024667], [0.3667, 0.0023346], [0.3751, 0.0021954],
                        [0.3806, 0.0020577], [0.389, 0.0019163], [0.3945, 0.001802], [0.4057, 0.001689],
                        [0.4155, 0.0015934], [0.4267, 0.0014935], [0.4336, 0.0013818], [0.442, 0.0012994],
                        [0.4503, 0.0012259], [0.4615, 0.0011602], [0.4671, 0.0010666], [0.4769, 0.0010193],
                        [0.488, 0.0009492], [0.495, 0.0008955], [0.5034, 0.0008558], [0.5118, 0.0008205],
                        [0.5174, 0.0007716], [0.53, 0.0007326], [0.5398, 0.0006979], [0.5481, 0.0006542],
                        [0.5565, 0.0006171], [0.5677, 0.0005898], [0.5747, 0.0005582], [0.5831, 0.0005266],
                        [0.5957, 0.0005], [0.6097, 0.0004626], [0.618, 0.0004253], [0.6293, 0.0004051],
                        [0.6405, 0.00038718], [0.6503, 0.00037243], [0.6587, 0.00035021], [0.6698, 0.00032508],
                        [0.6797, 0.00031575], [0.6881, 0.00029884], [0.6993, 0.00028467], [0.7076, 0.00026683],
                        [0.7203, 0.00025091], [0.7301, 0.00023902], [0.7385, 0.00023215], [0.7483, 0.0002183],
                        [0.7581, 0.00020661], [0.765, 0.00019682], [0.7735, 0.00018932], [0.7832, 0.00017745],
                        [0.7916, 0.00017069], [0.8001, 0.00016525], [0.8071, 0.00015947], [0.8169, 0.00015191],
                        [0.8224, 0.00014471], [0.8351, 0.00013696], [0.8463, 0.00013005], [0.8575, 0.00012348],
                        [0.8687, 0.00011763], [0.8771, 0.00011025], [0.8897, 0.00010571], [0.8995, 0.0001007],
                        [0.9065, 9.62e-05], [0.9177, 9.14e-05], [0.9275, 8.79e-05], [0.9373, 8.37e-05], [0.9443, 8e-05],
                        [0.9598, 7.53e-05], [0.971, 7.24e-05], [0.9794, 6.99e-05], [0.9906, 6.7e-05],
                        [0.9976, 6.38e-05], [1.0074, 6.12e-05], [1.0172, 5.7e-05], [1.0284, 5.52e-05],
                        [1.0383, 5.25e-05], [1.0467, 5.07e-05], [1.0536, 4.83e-05], [1.0635, 4.62e-05],
                        [1.0761, 4.38e-05], [1.0845, 4.23e-05], [1.0943, 4.04e-05], [1.1013, 3.87e-05],
                        [1.1125, 3.72e-05], [1.1223, 3.54e-05], [1.1321, 3.35e-05], [1.142, 3.23e-05],
                        [1.1476, 3.13e-05], [1.1574, 3.02e-05], [1.1644, 2.89e-05], [1.1728, 2.78e-05],
                        [1.184, 2.66e-05], [1.1882, 2.57e-05], [1.2036, 2.45e-05], [1.2106, 2.35e-05],
                        [1.219, 2.26e-05], [1.2317, 2.15e-05], [1.2401, 2.06e-05], [1.2485, 1.97e-05],
                        [1.2569, 1.9e-05], [1.2667, 1.83e-05], [1.2751, 1.75e-05], [1.2863, 1.67e-05],
                        [1.2933, 1.6e-05], [1.306, 1.54e-05], [1.3158, 1.49e-05], [1.327, 1.41e-05], [1.3368, 1.35e-05],
                        [1.348, 1.28e-05], [1.3593, 1.23e-05], [1.3719, 1.16e-05], [1.3845, 1.1e-05],
                        [1.3999, 1.04e-05], [1.4097, 9.88e-06], [1.4224, 9.48e-06], [1.4294, 9.06e-06],
                        [1.4406, 8.6e-06], [1.4546, 8.22e-06], [1.463, 7.88e-06], [1.4757, 7.63e-06],
                        [1.4841, 7.34e-06], [1.4953, 6.99e-06], [1.508, 6.79e-06], [1.5192, 6.51e-06],
                        [1.5304, 6.18e-06], [1.5374, 6e-06], [1.5458, 5.72e-06], [1.5585, 5.45e-06], [1.5697, 5.17e-06],
                        [1.5838, 4.99e-06], [1.5936, 4.82e-06], [1.6034, 4.63e-06], [1.6118, 4.47e-06],
                        [1.6216, 4.29e-06], [1.63, 4.06e-06], [1.6427, 3.95e-06], [1.6511, 3.78e-06],
                        [1.6637, 3.63e-06], [1.6749, 3.44e-06], [1.6862, 3.29e-06], [1.7002, 3.15e-06],
                        [1.7115, 3.03e-06], [1.724, 2.82e-06], [1.7381, 2.74e-06], [1.7493, 2.63e-06],
                        [1.762, 2.49e-06], [1.7788, 2.33e-06], [1.7928, 2.21e-06], [1.8055, 2.11e-06],
                        [1.8153, 2.02e-06], [1.8251, 1.91e-06], [1.8377, 1.82e-06], [1.8518, 1.73e-06],
                        [1.87, 1.62e-06], [1.8869, 1.54e-06], [1.8995, 1.44e-06], [1.9121, 1.37e-06], [1.9233, 1.3e-06],
                        [1.9345, 1.25e-06], [1.9486, 1.18e-06], [1.964, 1.13e-06], [1.9795, 1.08e-06],
                        [1.9936, 1.03e-06], [2.002, 1.01e-06]]
        self.lead_100 = [[0, 1], [0.03, 0.5432], [0.0436, 0.38671], [0.0549, 0.27086], [0.0686, 0.20077],
                         [0.0859, 0.16399], [0.0962, 0.13926], [0.11, 0.11617], [0.1225, 0.10525], [0.1287, 0.09398],
                         [0.1399, 0.08808], [0.1482, 0.08032], [0.1593, 0.07289], [0.1691, 0.06668], [0.1816, 0.05983],
                         [0.192, 0.05491], [0.2032, 0.05039], [0.2129, 0.04603], [0.2219, 0.0417], [0.2353, 0.03915],
                         [0.2443, 0.036873], [0.2555, 0.034786], [0.2689, 0.033137], [0.2716, 0.030959],
                         [0.2814, 0.029587], [0.2912, 0.027732], [0.3003, 0.02629], [0.3108, 0.025003],
                         [0.3199, 0.023856], [0.3311, 0.022542], [0.3395, 0.021683], [0.35, 0.02079],
                         [0.3577, 0.019901], [0.3683, 0.019392], [0.3759, 0.018593], [0.3872, 0.017855],
                         [0.3949, 0.017342], [0.4005, 0.016467], [0.4103, 0.015942], [0.4201, 0.01541],
                         [0.4257, 0.014846], [0.4384, 0.014443], [0.4489, 0.013714], [0.458, 0.013299],
                         [0.4685, 0.012751], [0.477, 0.012365], [0.4868, 0.011817], [0.4966, 0.011403],
                         [0.5057, 0.010987], [0.5149, 0.010654], [0.524, 0.010281], [0.5331, 0.009986],
                         [0.5408, 0.009715], [0.5492, 0.009405], [0.5591, 0.009106], [0.5689, 0.008773],
                         [0.5809, 0.008466], [0.5921, 0.008183], [0.5991, 0.007884], [0.6082, 0.007645],
                         [0.6159, 0.00739], [0.6258, 0.007201], [0.6363, 0.006949], [0.6447, 0.006771],
                         [0.6553, 0.006534], [0.6651, 0.006357], [0.675, 0.006164], [0.6827, 0.005987],
                         [0.6897, 0.005825], [0.6981, 0.005667], [0.7066, 0.005531], [0.7171, 0.005407],
                         [0.7305, 0.005167], [0.7481, 0.004994], [0.7544, 0.004859], [0.7621, 0.004719],
                         [0.7747, 0.004517], [0.7874, 0.004338], [0.8007, 0.004153], [0.8127, 0.004014],
                         [0.8267, 0.0038609], [0.8358, 0.0037078], [0.8478, 0.0035492], [0.8605, 0.0034585],
                         [0.8724, 0.0033592], [0.8858, 0.0032364], [0.8949, 0.0031282], [0.9076, 0.0030482],
                         [0.9195, 0.0029511], [0.9315, 0.002871], [0.9406, 0.0027616], [0.9497, 0.0026866],
                         [0.9574, 0.0025759], [0.9736, 0.0024818], [0.9898, 0.0023872], [1.0052, 0.0022777],
                         [1.0165, 0.0021874], [1.0298, 0.0021142], [1.0446, 0.0020271], [1.0559, 0.0019657],
                         [1.0678, 0.0019154], [1.0798, 0.0018574], [1.0889, 0.001807], [1.1009, 0.0017466],
                         [1.1121, 0.0016882], [1.1248, 0.0016424], [1.1353, 0.0015952], [1.1473, 0.0015394],
                         [1.1571, 0.001488], [1.1662, 0.0014382], [1.1725, 0.0014128], [1.1817, 0.0013767],
                         [1.1929, 0.0013437], [1.2049, 0.0013009], [1.2154, 0.0012533], [1.2288, 0.0012193],
                         [1.2379, 0.0011786], [1.2478, 0.001154], [1.2611, 0.0011209], [1.2696, 0.0010904],
                         [1.278, 0.0010643], [1.285, 0.0010472], [1.2956, 0.0010237], [1.3033, 0.0009943],
                         [1.3118, 0.0009673], [1.3216, 0.0009472], [1.3315, 0.000923], [1.3434, 0.0008921],
                         [1.3547, 0.0008651], [1.3673, 0.0008416], [1.3779, 0.0008161], [1.3905, 0.0007901],
                         [1.3968, 0.0007774], [1.4095, 0.0007551], [1.4222, 0.0007406], [1.4313, 0.0007123],
                         [1.4419, 0.0006897], [1.4517, 0.000672], [1.4665, 0.0006475], [1.4841, 0.0006258],
                         [1.4953, 0.0006039], [1.5044, 0.0005847], [1.5171, 0.000567], [1.5276, 0.0005471],
                         [1.5375, 0.0005271], [1.5494, 0.0005212], [1.5579, 0.0005054], [1.5691, 0.0004925],
                         [1.579, 0.0004791], [1.5923, 0.0004654], [1.6036, 0.0004535], [1.6134, 0.0004397],
                         [1.6254, 0.0004257], [1.6373, 0.0004108], [1.6507, 0.0003977], [1.6612, 0.0003863],
                         [1.6732, 0.00037279], [1.6837, 0.00036208], [1.6943, 0.00035397], [1.7048, 0.00034436],
                         [1.7168, 0.00033393], [1.7273, 0.00032172], [1.7393, 0.00031147], [1.7513, 0.000304],
                         [1.7611, 0.00029336], [1.7723, 0.00028679], [1.7822, 0.00028036], [1.792, 0.00027452],
                         [1.8033, 0.00026837], [1.8132, 0.00026278], [1.8216, 0.00025565], [1.8336, 0.00024871],
                         [1.8427, 0.00024235], [1.8518, 0.00023425], [1.8602, 0.00022826], [1.8729, 0.00022099],
                         [1.8813, 0.00021638], [1.8926, 0.00021153], [1.9046, 0.0002048], [1.9165, 0.00019827],
                         [1.9263, 0.0001901], [1.9404, 0.00018554], [1.9524, 0.0001805], [1.9658, 0.00017617],
                         [1.9742, 0.00017306], [1.9862, 0.00016891], [1.9946, 0.00016459], [2.0073, 0.00015986],
                         [2.0185, 0.00015603], [2.0284, 0.00015204], [2.0424, 0.00014696], [2.0565, 0.00014227],
                         [2.0671, 0.00013796], [2.0769, 0.00013444], [2.0875, 0.00013185], [2.098, 0.00012765],
                         [2.105, 0.00012418], [2.1134, 0.00012042], [2.1247, 0.00011753], [2.1339, 0.00011546],
                         [2.1437, 0.00011251], [2.1535, 0.00010963], [2.1641, 0.00010665], [2.1725, 0.00010393],
                         [2.1845, 0.00010176], [2.1922, 0.0001], [2.2021, 9.69e-05], [2.2119, 9.52e-05],
                         [2.2253, 9.22e-05], [2.2337, 8.93e-05], [2.2393, 8.81e-05], [2.2492, 8.56e-05],
                         [2.2598, 8.42e-05], [2.2731, 8.15e-05], [2.2766, 8.05e-05], [2.2879, 7.87e-05],
                         [2.2992, 7.7e-05], [2.3055, 7.57e-05], [2.3146, 7.37e-05], [2.3252, 7.16e-05],
                         [2.3308, 7.04e-05], [2.3392, 6.82e-05], [2.3477, 6.73e-05], [2.3561, 6.54e-05],
                         [2.3688, 6.36e-05], [2.3815, 6.28e-05], [2.3899, 6.16e-05], [2.3983, 6.02e-05],
                         [2.4089, 5.89e-05], [2.418, 5.75e-05], [2.4279, 5.59e-05], [2.4342, 5.46e-05],
                         [2.4447, 5.33e-05], [2.4581, 5.2e-05], [2.4687, 5.04e-05], [2.482, 4.88e-05],
                         [2.4905, 4.78e-05], [2.4996, 4.64e-05], [2.5073, 4.54e-05], [2.5179, 4.43e-05],
                         [2.5327, 4.29e-05], [2.539, 4.2e-05], [2.5467, 4.14e-05], [2.5587, 4.04e-05],
                         [2.5686, 3.94e-05], [2.577, 3.83e-05], [2.5882, 3.74e-05], [2.5967, 3.65e-05],
                         [2.6086, 3.55e-05], [2.6171, 3.48e-05], [2.6248, 3.4e-05], [2.634, 3.36e-05],
                         [2.6445, 3.25e-05], [2.6579, 3.17e-05], [2.667, 3.07e-05], [2.6797, 2.98e-05],
                         [2.693, 2.86e-05], [2.7036, 2.77e-05], [2.7184, 2.69e-05], [2.7282, 2.62e-05],
                         [2.7395, 2.55e-05], [2.7493, 2.5e-05], [2.7606, 2.44e-05], [2.7711, 2.39e-05],
                         [2.7803, 2.33e-05], [2.7887, 2.25e-05], [2.7985, 2.19e-05], [2.8077, 2.15e-05],
                         [2.8168, 2.1e-05], [2.8274, 2.06e-05], [2.8386, 2.01e-05], [2.8471, 1.96e-05],
                         [2.8569, 1.91e-05], [2.8675, 1.87e-05], [2.8759, 1.82e-05], [2.8865, 1.77e-05],
                         [2.8949, 1.72e-05], [2.9033, 1.68e-05], [2.9118, 1.65e-05], [2.9223, 1.61e-05],
                         [2.9343, 1.57e-05], [2.9441, 1.53e-05], [2.9547, 1.48e-05], [2.9659, 1.44e-05],
                         [2.9751, 1.4e-05], [2.987, 1.36e-05], [2.9962, 1.34e-05], [3.0081, 1.3e-05],
                         [3.0173, 1.27e-05], [3.0264, 1.23e-05], [3.037, 1.21e-05], [3.0468, 1.19e-05],
                         [3.056, 1.16e-05], [3.0644, 1.12e-05], [3.0749, 1.09e-05], [3.0869, 1.06e-05],
                         [3.0939, 1.03e-05], [3.1101, 9.97e-06], [3.1256, 9.65e-06], [3.1397, 9.36e-06],
                         [3.1466, 8.93e-06], [3.1586, 8.65e-06], [3.1685, 8.53e-06], [3.1748, 8.4e-06],
                         [3.1853, 8.16e-06], [3.1931, 8.04e-06], [3.2079, 7.83e-06], [3.2163, 7.6e-06],
                         [3.2219, 7.46e-06], [3.2318, 7.31e-06], [3.2416, 7.12e-06], [3.2486, 6.96e-06],
                         [3.2592, 6.81e-06], [3.274, 6.58e-06], [3.2894, 6.34e-06], [3.3007, 6.17e-06],
                         [3.3106, 6.06e-06], [3.3204, 5.91e-06], [3.3324, 5.73e-06], [3.3436, 5.55e-06],
                         [3.3535, 5.44e-06], [3.3591, 5.31e-06], [3.3689, 5.2e-06], [3.3795, 5.04e-06],
                         [3.3886, 4.95e-06], [3.3971, 4.85e-06], [3.4055, 4.76e-06], [3.414, 4.67e-06],
                         [3.4287, 4.53e-06], [3.4393, 4.43e-06], [3.4477, 4.25e-06], [3.4589, 4.13e-06],
                         [3.4723, 4.01e-06], [3.4829, 3.92e-06], [3.4948, 3.8e-06], [3.5033, 3.71e-06],
                         [3.5131, 3.61e-06], [3.523, 3.55e-06], [3.5321, 3.47e-06], [3.5384, 3.41e-06],
                         [3.5448, 3.35e-06], [3.5518, 3.27e-06], [3.5616, 3.21e-06], [3.568, 3.14e-06],
                         [3.5743, 3.09e-06], [3.5827, 3.02e-06], [3.5926, 2.97e-06], [3.6017, 2.9e-06],
                         [3.6116, 2.82e-06], [3.6236, 2.77e-06], [3.632, 2.7e-06], [3.6433, 2.64e-06],
                         [3.6538, 2.58e-06], [3.6622, 2.53e-06], [3.67, 2.47e-06], [3.6763, 2.39e-06],
                         [3.6889, 2.33e-06], [3.6995, 2.26e-06], [3.7122, 2.21e-06], [3.7185, 2.16e-06],
                         [3.7283, 2.11e-06], [3.7368, 2.06e-06], [3.7452, 2.02e-06], [3.7544, 1.98e-06],
                         [3.7649, 1.93e-06], [3.7727, 1.9e-06], [3.7839, 1.86e-06], [3.7931, 1.82e-06],
                         [3.8029, 1.77e-06], [3.8113, 1.72e-06], [3.8233, 1.67e-06], [3.8345, 1.62e-06],
                         [3.8437, 1.58e-06], [3.8563, 1.53e-06], [3.869, 1.49e-06], [3.8775, 1.46e-06],
                         [3.8873, 1.43e-06], [3.9014, 1.39e-06], [3.912, 1.36e-06], [3.9232, 1.32e-06],
                         [3.9359, 1.28e-06], [3.9513, 1.23e-06], [3.9703, 1.16e-06], [3.9823, 1.14e-06],
                         [3.9928, 1.1e-06], [4.0034, 1.07e-06], [4.0188, 1.04e-06], [4.0258, 1.02e-06], [4.0365, 1e-06]]
        self.lead_125 = [[0, 1], [0.0341, 0.5002], [0.0424, 0.4495], [0.0515, 0.4241], [0.0603, 0.3425], [0.0708, 0.3273], [0.0791, 0.2899], [0.091, 0.26693], [0.1, 0.24539], [0.1089, 0.21523], [0.1208, 0.20011], [0.1313, 0.18606], [0.141, 0.16966], [0.1515, 0.15546], [0.1619, 0.13948], [0.1745, 0.13244], [0.1843, 0.12254], [0.1933, 0.11449], [0.2052, 0.10662], [0.2157, 0.1014], [0.2262, 0.09473], [0.2367, 0.0901], [0.2423, 0.08638], [0.2528, 0.08296], [0.2626, 0.07903], [0.2724, 0.07455], [0.285, 0.07148], [0.2948, 0.06722], [0.306, 0.0631], [0.3172, 0.05944], [0.3306, 0.0568], [0.3425, 0.05437], [0.3523, 0.05196], [0.3635, 0.04974], [0.3705, 0.04777], [0.3832, 0.0458], [0.3937, 0.04342], [0.4063, 0.04156], [0.4175, 0.03946], [0.4323, 0.037591], [0.4435, 0.035752], [0.4568, 0.034223], [0.4688, 0.032865], [0.48, 0.031257], [0.4926, 0.029969], [0.5074, 0.028687], [0.5207, 0.027416], [0.5305, 0.026286], [0.5404, 0.025243], [0.553, 0.024281], [0.5628, 0.023432], [0.5769, 0.022177], [0.5867, 0.021436], [0.5994, 0.020719], [0.6078, 0.020092], [0.6169, 0.01942], [0.6288, 0.01853], [0.6436, 0.017881], [0.6548, 0.017144], [0.6661, 0.016438], [0.6759, 0.015811], [0.6878, 0.015258], [0.7012, 0.014772], [0.711, 0.014163], [0.7237, 0.013601], [0.7342, 0.013126], [0.7426, 0.012687], [0.7539, 0.012263], [0.7672, 0.011795], [0.7806, 0.011273], [0.7897, 0.010896], [0.8002, 0.010515], [0.81, 0.010147], [0.8213, 0.009824], [0.8297, 0.009511], [0.841, 0.009223], [0.8515, 0.008972], [0.8606, 0.0087], [0.8726, 0.008423], [0.8859, 0.008089], [0.8986, 0.007819], [0.9134, 0.007557], [0.9218, 0.00734], [0.9302, 0.007107], [0.9401, 0.006891], [0.9513, 0.006672], [0.9647, 0.006501], [0.9759, 0.006264], [0.9851, 0.006074], [0.9977, 0.00589], [1.0104, 0.00573], [1.0237, 0.005529], [1.0378, 0.005327], [1.0497, 0.005116], [1.0603, 0.004985], [1.0715, 0.00485], [1.0835, 0.004665], [1.0933, 0.004531], [1.1003, 0.004415], [1.1109, 0.004254], [1.1242, 0.004105], [1.1355, 0.004], [1.1446, 0.0039041], [1.158, 0.0037614], [1.1714, 0.0036298], [1.1819, 0.0035199], [1.191, 0.0034299], [1.2016, 0.0033099], [1.2149, 0.0031786], [1.2269, 0.0030823], [1.2381, 0.0029986], [1.2501, 0.0029172], [1.2599, 0.0028243], [1.2719, 0.0027299], [1.2845, 0.0026558], [1.2972, 0.0025795], [1.3071, 0.0025136], [1.3176, 0.0024414], [1.3282, 0.0023828], [1.3401, 0.0023032], [1.3499, 0.0022262], [1.3633, 0.0021518], [1.3767, 0.0020765], [1.3865, 0.0020168], [1.3992, 0.0019748], [1.4083, 0.0019306], [1.4175, 0.0018751], [1.4308, 0.0018125], [1.4393, 0.0017776], [1.4505, 0.0017237], [1.4632, 0.0016797], [1.4758, 0.0016052], [1.492, 0.0015591], [1.5033, 0.0015094], [1.5145, 0.0014614], [1.5229, 0.0014125], [1.5377, 0.0013587], [1.5483, 0.0013325], [1.5602, 0.0012901], [1.5729, 0.0012612], [1.5891, 0.001221], [1.601, 0.0011917], [1.6144, 0.0011481], [1.6249, 0.0011026], [1.6383, 0.0010623], [1.6481, 0.0010419], [1.6629, 0.0010038], [1.677, 0.0009797], [1.689, 0.0009516], [1.7023, 0.0009168], [1.7129, 0.0008948], [1.7255, 0.0008705], [1.7396, 0.0008455], [1.7515, 0.0008106], [1.7642, 0.0007976], [1.7755, 0.0007697], [1.7839, 0.0007476], [1.798, 0.0007285], [1.8071, 0.0007064], [1.8177, 0.0006928], [1.8282, 0.000674], [1.8374, 0.0006589], [1.8451, 0.0006431], [1.8571, 0.0006277], [1.869, 0.0006116], [1.8782, 0.000597], [1.8873, 0.0005798], [1.8964, 0.0005659], [1.9112, 0.0005452], [1.9239, 0.0005287], [1.9351, 0.0005119], [1.9471, 0.000498], [1.9576, 0.0004845], [1.9696, 0.0004728], [1.9801, 0.0004607], [1.9921, 0.0004439], [2.0026, 0.0004318], [2.0146, 0.0004167], [2.0273, 0.0004054], [2.0427, 0.0003938], [2.054, 0.00038371], [2.0653, 0.00037269], [2.08, 0.00036023], [2.0927, 0.00034876], [2.1061, 0.00034039], [2.1166, 0.00033276], [2.125, 0.0003206], [2.1384, 0.0003119], [2.1504, 0.00030294], [2.1616, 0.00029471], [2.1729, 0.00028533], [2.1834, 0.00027713], [2.1947, 0.00027092], [2.2066, 0.00026399], [2.2186, 0.000256], [2.2306, 0.00024985], [2.2397, 0.00024189], [2.2502, 0.00023495], [2.265, 0.00022783], [2.2749, 0.00022093], [2.2854, 0.00021528], [2.2981, 0.00020944], [2.3086, 0.00020408], [2.3206, 0.00019854], [2.3318, 0.00019221], [2.3424, 0.00018669], [2.3557, 0.00018104], [2.3663, 0.00017698], [2.379, 0.00017024], [2.3909, 0.00016481], [2.4015, 0.00016086], [2.412, 0.000157], [2.4254, 0.000152], [2.4359, 0.00014739], [2.4479, 0.00014363], [2.457, 0.00014041], [2.4676, 0.00013704], [2.4781, 0.00013375], [2.4901, 0.00012928], [2.5028, 0.00012618], [2.5154, 0.00012275], [2.526, 0.00011865], [2.5393, 0.00011562], [2.5485, 0.00011157], [2.5611, 0.00010872], [2.5731, 0.0001056], [2.59, 0.00010289], [2.6048, 9.929e-05], [2.6146, 9.598e-05], [2.6294, 9.277e-05], [2.642, 8.938e-05], [2.6554, 8.611e-05], [2.6681, 8.486e-05], [2.6828, 8.189e-05], [2.6934, 7.967e-05], [2.7039, 7.751e-05], [2.7166, 7.528e-05], [2.7286, 7.336e-05], [2.7384, 7.137e-05], [2.7525, 6.943e-05], [2.7623, 6.722e-05], [2.7722, 6.539e-05], [2.7855, 6.351e-05], [2.8003, 6.139e-05], [2.8116, 5.972e-05], [2.8235, 5.801e-05], [2.8362, 5.634e-05], [2.8454, 5.535e-05], [2.8559, 5.35e-05], [2.87, 5.205e-05], [2.8826, 5.031e-05], [2.8939, 4.831e-05], [2.9065, 4.7e-05], [2.9206, 4.572e-05], [2.9333, 4.463e-05], [2.9445, 4.335e-05], [2.9551, 4.203e-05], [2.9691, 4.076e-05], [2.9825, 3.959e-05], [2.9924, 3.8451e-05], [3.0022, 3.7408e-05], [3.0128, 3.6451e-05], [3.0261, 3.5404e-05], [3.0374, 3.4499e-05], [3.0479, 3.3617e-05], [3.0578, 3.3077e-05], [3.0662, 3.2179e-05], [3.0796, 3.1255e-05], [3.0901, 3.0456e-05], [3.1007, 2.9725e-05], [3.1105, 2.9059e-05], [3.1225, 2.8224e-05], [3.1345, 2.7547e-05], [3.1457, 2.6843e-05], [3.1549, 2.6072e-05], [3.1654, 2.5529e-05], [3.1746, 2.4916e-05], [3.1851, 2.4397e-05], [3.195, 2.3812e-05], [3.2034, 2.3278e-05], [3.214, 2.2646e-05], [3.2252, 2.2032e-05], [3.2351, 2.1468e-05], [3.247, 2.0852e-05], [3.259, 2.0286e-05], [3.2688, 1.9799e-05], [3.2794, 1.9324e-05], [3.2892, 1.8799e-05], [3.2998, 1.8438e-05], [3.311, 1.7995e-05], [3.3195, 1.7564e-05], [3.3293, 1.7115e-05], [3.3406, 1.6704e-05], [3.3504, 1.6277e-05], [3.3596, 1.5835e-05], [3.3694, 1.5581e-05], [3.3807, 1.5256e-05], [3.3898, 1.477e-05], [3.4004, 1.4416e-05], [3.4109, 1.4047e-05], [3.4222, 1.3688e-05], [3.4334, 1.3338e-05], [3.4454, 1.2997e-05], [3.4552, 1.2644e-05], [3.4658, 1.2341e-05], [3.4763, 1.2025e-05], [3.4869, 1.1737e-05], [3.4975, 1.1418e-05], [3.5087, 1.1162e-05], [3.52, 1.0859e-05], [3.5305, 1.0564e-05], [3.5411, 1.0228e-05], [3.5537, 9.95e-06], [3.5643, 9.696e-06], [3.5762, 9.417e-06], [3.5889, 9.132e-06], [3.6037, 8.855e-06], [3.6135, 8.601e-06], [3.6227, 8.395e-06], [3.6325, 8.207e-06], [3.6431, 8.01e-06], [3.6529, 7.818e-06], [3.6656, 7.63e-06], [3.6768, 7.411e-06], [3.6902, 7.268e-06], [3.6987, 7.071e-06], [3.7071, 6.901e-06], [3.7169, 6.725e-06], [3.7254, 6.532e-06], [3.7359, 6.365e-06], [3.7472, 6.212e-06], [3.7591, 6.073e-06], [3.7676, 5.956e-06], [3.7817, 5.804e-06], [3.7915, 5.674e-06], [3.8028, 5.511e-06], [3.8112, 5.378e-06], [3.8217, 5.215e-06], [3.8316, 5.058e-06], [3.8414, 4.92e-06], [3.8541, 4.787e-06], [3.8646, 4.657e-06], [3.8773, 4.545e-06], [3.8865, 4.429e-06], [3.9012, 4.302e-06], [3.9125, 4.198e-06], [3.9252, 4.091e-06], [3.9364, 3.98e-06], [3.9463, 3.8656e-06], [3.9561, 3.7546e-06], [3.9681, 3.6409e-06], [3.9793, 3.5363e-06], [3.9948, 3.4459e-06], [4.0082, 3.3307e-06], [4.0216, 3.2613e-06], [4.0328, 3.1882e-06], [4.0434, 3.0917e-06], [4.0539, 3.0126e-06], [4.0694, 2.9166e-06], [4.0828, 2.8329e-06], [4.0954, 2.7249e-06], [4.1074, 2.6552e-06], [4.12, 2.5665e-06], [4.1285, 2.4887e-06], [4.1411, 2.4212e-06], [4.1531, 2.3669e-06], [4.1672, 2.3027e-06], [4.1791, 2.2474e-06], [4.189, 2.1935e-06], [4.2017, 2.1305e-06], [4.2122, 2.0794e-06], [4.2235, 2.0262e-06], [4.2361, 1.9617e-06], [4.2481, 1.9146e-06], [4.2565, 1.8596e-06], [4.2671, 1.8004e-06], [4.279, 1.7458e-06], [4.2882, 1.7067e-06], [4.3022, 1.6604e-06], [4.3149, 1.6153e-06], [4.324, 1.5791e-06], [4.336, 1.5412e-06], [4.3473, 1.5018e-06], [4.3585, 1.461e-06], [4.367, 1.4329e-06], [4.3761, 1.3985e-06], [4.3853, 1.3716e-06], [4.3972, 1.3344e-06], [4.4085, 1.2877e-06], [4.4211, 1.2589e-06], [4.4317, 1.2187e-06], [4.445, 1.1761e-06], [4.4619, 1.146e-06], [4.4795, 1.0988e-06], [4.4957, 1.0638e-06], [4.5048, 1.0249e-06], [4.5168, 1.0036e-06]]
        self.lead_150 = [[0, 1], [0.0278, 0.7558], [0.0318, 0.6892], [0.0394, 0.6114], [0.0471, 0.5675], [0.0582, 0.5302], [0.0694, 0.4882], [0.0791, 0.4517], [0.0889, 0.4186], [0.0994, 0.3956], [0.1043, 0.37803], [0.1133, 0.33918], [0.121, 0.32415], [0.1287, 0.31029], [0.1357, 0.29895], [0.144, 0.28432], [0.1545, 0.26349], [0.165, 0.25263], [0.1755, 0.23949], [0.1839, 0.2274], [0.1944, 0.21211], [0.2063, 0.20108], [0.2133, 0.19217], [0.2217, 0.181], [0.2385, 0.1713], [0.2497, 0.16213], [0.2603, 0.1557], [0.2687, 0.15074], [0.2736, 0.14641], [0.2813, 0.14083], [0.2904, 0.13437], [0.2974, 0.1303], [0.3065, 0.12575], [0.3121, 0.12213], [0.3184, 0.11959], [0.324, 0.11578], [0.3331, 0.10994], [0.3472, 0.10541], [0.3521, 0.10238], [0.3612, 0.09944], [0.3703, 0.09519], [0.3837, 0.092], [0.3914, 0.08864], [0.3963, 0.08638], [0.404, 0.08308], [0.4166, 0.08044], [0.423, 0.07851], [0.4328, 0.07539], [0.4405, 0.0724], [0.4545, 0.06942], [0.4693, 0.06688], [0.4777, 0.06423], [0.4904, 0.06188], [0.5023, 0.05895], [0.5135, 0.05652], [0.524, 0.05419], [0.5339, 0.05246], [0.5458, 0.0503], [0.5592, 0.04823], [0.5704, 0.04624], [0.583, 0.04469], [0.5922, 0.04334], [0.602, 0.04176], [0.6154, 0.04049], [0.6259, 0.039012], [0.6329, 0.037526], [0.6469, 0.035805], [0.6617, 0.034552], [0.6737, 0.033505], [0.6807, 0.032438], [0.6877, 0.031763], [0.6968, 0.030355], [0.708, 0.029246], [0.7193, 0.028222], [0.7291, 0.027545], [0.7404, 0.026496], [0.7481, 0.025735], [0.7636, 0.024754], [0.7776, 0.023927], [0.7875, 0.023127], [0.798, 0.022282], [0.8099, 0.021607], [0.8142, 0.021329], [0.8226, 0.020616], [0.8345, 0.020024], [0.8437, 0.019449], [0.85, 0.018982], [0.8598, 0.018377], [0.8683, 0.017995], [0.8816, 0.017337], [0.8907, 0.016758], [0.8985, 0.016382], [0.909, 0.015912], [0.9182, 0.015505], [0.9266, 0.015182], [0.9378, 0.014674], [0.9484, 0.014184], [0.9596, 0.01371], [0.9673, 0.013273], [0.9793, 0.012913], [0.9884, 0.012603], [1.0018, 0.012162], [1.0123, 0.011775], [1.0236, 0.011436], [1.0313, 0.011162], [1.0405, 0.010877], [1.0517, 0.010598], [1.0616, 0.010344], [1.0721, 0.009982], [1.0805, 0.009664], [1.0953, 0.009296], [1.1037, 0.009044], [1.1164, 0.008812], [1.1234, 0.008629], [1.134, 0.008408], [1.141, 0.00814], [1.1501, 0.007881], [1.1642, 0.00768], [1.1712, 0.007435], [1.1846, 0.007304], [1.193, 0.007128], [1.2021, 0.00689], [1.2106, 0.006703], [1.2225, 0.006469], [1.2345, 0.006303], [1.2436, 0.006162], [1.2556, 0.005966], [1.2703, 0.00571], [1.2816, 0.005601], [1.2929, 0.005449], [1.302, 0.005266], [1.3132, 0.005082], [1.3245, 0.004944], [1.335, 0.004818], [1.3428, 0.004687], [1.3533, 0.004575], [1.3617, 0.004472], [1.3723, 0.004337], [1.3821, 0.004246], [1.3913, 0.004144], [1.4018, 0.004038], [1.4131, 0.003935], [1.4236, 0.0038036], [1.4335, 0.0036944], [1.4433, 0.0035999], [1.4525, 0.0035421], [1.4637, 0.0034515], [1.4736, 0.0033687], [1.4827, 0.003272], [1.4954, 0.0031832], [1.5045, 0.0030918], [1.5151, 0.003003], [1.5256, 0.0029357], [1.5348, 0.0028745], [1.5453, 0.0027875], [1.5558, 0.0027162], [1.5671, 0.0026725], [1.5798, 0.0026042], [1.5854, 0.0025376], [1.5952, 0.0024727], [1.6072, 0.0023824], [1.6205, 0.0022953], [1.6332, 0.0022366], [1.6473, 0.0021688], [1.6586, 0.0021237], [1.6684, 0.0020761], [1.6768, 0.002023], [1.6839, 0.0019873], [1.6909, 0.0019459], [1.7, 0.0019085], [1.7099, 0.0018597], [1.7204, 0.001815], [1.731, 0.0017572], [1.7437, 0.0017178], [1.7507, 0.0016793], [1.7612, 0.0016417], [1.7704, 0.0016101], [1.7781, 0.0015766], [1.7908, 0.0015313], [1.7992, 0.0015018], [1.8091, 0.0014682], [1.8197, 0.0014399], [1.8281, 0.0013986], [1.8365, 0.0013584], [1.8449, 0.0013237], [1.8562, 0.001294], [1.8646, 0.0012712], [1.8752, 0.0012267], [1.8907, 0.0011953], [1.9012, 0.0011667], [1.9188, 0.0011204], [1.9301, 0.0010935], [1.9427, 0.0010587], [1.9568, 0.0010316], [1.9695, 0.0010085], [1.9822, 0.0009779], [1.9934, 0.0009529], [2.0039, 0.0009181], [2.0152, 0.0008932], [2.0279, 0.0008647], [2.0356, 0.0008508], [2.0469, 0.0008251], [2.0595, 0.0008001], [2.075, 0.0007733], [2.0855, 0.0007535], [2.0982, 0.0007295], [2.1109, 0.000704], [2.1221, 0.0006882], [2.1334, 0.0006685], [2.1425, 0.0006514], [2.1566, 0.0006368], [2.17, 0.0006155], [2.1791, 0.0005959], [2.1896, 0.0005816], [2.2016, 0.0005631], [2.215, 0.0005469], [2.2262, 0.000532], [2.2389, 0.0005143], [2.2494, 0.0005035], [2.2579, 0.0004939], [2.2705, 0.0004773], [2.2839, 0.0004636], [2.2945, 0.0004518], [2.3043, 0.0004417], [2.312, 0.0004325], [2.3261, 0.0004214], [2.3353, 0.0004113], [2.3494, 0.0003995], [2.3578, 0.0003899], [2.3712, 0.00037931], [2.381, 0.00037141], [2.388, 0.00036545], [2.3972, 0.000359], [2.4084, 0.000347], [2.4176, 0.00033922], [2.4246, 0.00033377], [2.4338, 0.00032471], [2.4507, 0.00031488], [2.4591, 0.00030782], [2.4696, 0.00029801], [2.4802, 0.00028945], [2.4907, 0.00028251], [2.5083, 0.00027262], [2.5189, 0.00026522], [2.5308, 0.00025844], [2.5435, 0.00025265], [2.5527, 0.00024699], [2.5625, 0.00023835], [2.5738, 0.00023338], [2.585, 0.00022668], [2.5984, 0.00022232], [2.6068, 0.00021558], [2.6202, 0.00021109], [2.6279, 0.0002057], [2.6371, 0.00020076], [2.6462, 0.00019658], [2.6582, 0.00019155], [2.6687, 0.00018635], [2.6786, 0.00018218], [2.6877, 0.00017781], [2.6976, 0.00017298], [2.7095, 0.00016883], [2.7201, 0.00016425], [2.732, 0.00015953], [2.7398, 0.00015595], [2.7525, 0.00015246], [2.7651, 0.00014832], [2.7792, 0.00014313], [2.7904, 0.0001397], [2.8031, 0.00013568], [2.8116, 0.00013329], [2.8221, 0.00012946], [2.8312, 0.00012636], [2.8411, 0.00012332], [2.8559, 0.00011959], [2.865, 0.00011597], [2.877, 0.00011337], [2.8868, 0.00011083], [2.9016, 0.00010834], [2.9164, 0.00010337], [2.929, 0.0001004], [2.9438, 9.705e-05], [2.9537, 9.534e-05], [2.9642, 9.305e-05], [2.9748, 9.052e-05], [2.9881, 8.679e-05], [3.0008, 8.444e-05], [3.0149, 8.228e-05], [3.0282, 8.004e-05], [3.0374, 7.737e-05], [3.0451, 7.515e-05], [3.0578, 7.287e-05], [3.069, 7.089e-05], [3.0803, 6.919e-05], [3.0901, 6.764e-05], [3.1049, 6.58e-05], [3.1169, 6.391e-05], [3.1309, 6.218e-05], [3.1436, 6.02e-05], [3.1556, 5.875e-05], [3.1668, 5.716e-05], [3.1816, 5.579e-05], [3.19, 5.418e-05], [3.1992, 5.271e-05], [3.2097, 5.162e-05], [3.2224, 5.013e-05], [3.233, 4.877e-05], [3.2463, 4.776e-05], [3.2555, 4.638e-05], [3.2653, 4.527e-05], [3.2752, 4.411e-05], [3.2843, 4.348e-05], [3.2949, 4.202e-05], [3.3068, 4.088e-05], [3.3153, 3.99e-05], [3.3272, 3.907e-05], [3.335, 3.8257e-05], [3.3448, 3.746e-05], [3.3575, 3.6443e-05], [3.3687, 3.5569e-05], [3.3793, 3.4659e-05], [3.3905, 3.3773e-05], [3.4011, 3.2963e-05], [3.4159, 3.1758e-05], [3.425, 3.1046e-05], [3.4342, 3.0498e-05], [3.444, 2.9622e-05], [3.4532, 2.9099e-05], [3.4644, 2.8355e-05], [3.4757, 2.781e-05], [3.4869, 2.7055e-05], [3.4982, 2.632e-05], [3.508, 2.5689e-05], [3.5179, 2.5195e-05], [3.5271, 2.471e-05], [3.5376, 2.3961e-05], [3.5496, 2.3349e-05], [3.5615, 2.2495e-05], [3.5742, 2.1779e-05], [3.5854, 2.1085e-05], [3.5953, 2.0713e-05], [3.6079, 2.0281e-05], [3.6164, 1.9891e-05], [3.6276, 1.9382e-05], [3.6347, 1.8917e-05], [3.6452, 1.8493e-05], [3.6565, 1.8079e-05], [3.6663, 1.7702e-05], [3.6769, 1.725e-05], [3.6875, 1.689e-05], [3.6945, 1.6512e-05], [3.7072, 1.6142e-05], [3.7177, 1.578e-05], [3.7261, 1.5377e-05], [3.736, 1.4983e-05], [3.748, 1.4648e-05], [3.7564, 1.4296e-05], [3.7669, 1.3908e-05], [3.7775, 1.3619e-05], [3.7866, 1.3356e-05], [3.7986, 1.3078e-05], [3.8071, 1.2806e-05], [3.8183, 1.2378e-05], [3.8275, 1.2159e-05], [3.8352, 1.1887e-05], [3.8464, 1.1527e-05], [3.8605, 1.116e-05], [3.8704, 1.0927e-05], [3.8816, 1.0579e-05], [3.8957, 1.0309e-05], [3.9041, 1.0061e-05], [3.9203, 9.741e-06], [3.933, 9.492e-06], [3.9421, 9.234e-06], [3.9562, 9.012e-06], [3.9675, 8.754e-06], [3.9822, 8.393e-06], [3.9942, 8.06e-06], [4.0096, 7.79e-06], [4.028, 7.542e-06], [4.0434, 7.29e-06], [4.0554, 7.092e-06], [4.0652, 6.933e-06], [4.0772, 6.723e-06], [4.0878, 6.551e-06], [4.1011, 6.343e-06], [4.1159, 6.2e-06], [4.1272, 6.032e-06], [4.1356, 5.84e-06], [4.1433, 5.691e-06], [4.1553, 5.518e-06], [4.1651, 5.395e-06], [4.1785, 5.24e-06], [4.1912, 5.122e-06], [4.2081, 4.959e-06], [4.2214, 4.77e-06], [4.2341, 4.633e-06], [4.2446, 4.537e-06], [4.2531, 4.471e-06], [4.2658, 4.371e-06], [4.277, 4.231e-06], [4.2869, 4.137e-06], [4.2981, 4.031e-06], [4.3094, 3.941e-06], [4.3206, 3.8336e-06], [4.3277, 3.7355e-06], [4.3403, 3.64e-06], [4.3523, 3.5412e-06], [4.3607, 3.4618e-06], [4.3713, 3.3952e-06], [4.3812, 3.3353e-06], [4.3924, 3.2186e-06], [4.4093, 3.1262e-06], [4.4227, 3.0512e-06], [4.4346, 2.9635e-06], [4.4438, 2.8645e-06], [4.4557, 2.8048e-06], [4.4656, 2.7111e-06], [4.4761, 2.6417e-06], [4.4916, 2.5288e-06], [4.5078, 2.4167e-06], [4.5289, 2.3059e-06], [4.5415, 2.2433e-06], [4.5549, 2.2037e-06], [4.5704, 2.1473e-06], [4.581, 2.0958e-06], [4.5936, 2.0323e-06], [4.6035, 1.9771e-06], [4.6154, 1.911e-06], [4.6267, 1.8562e-06], [4.6337, 1.8087e-06], [4.6499, 1.7539e-06], [4.6626, 1.7035e-06], [4.6759, 1.66e-06], [4.6893, 1.6149e-06], [4.7027, 1.5635e-06], [4.7146, 1.5186e-06], [4.7273, 1.4773e-06], [4.7407, 1.4349e-06], [4.7491, 1.4005e-06], [4.7646, 1.3559e-06], [4.7765, 1.3105e-06], [4.7871, 1.2853e-06], [4.7983, 1.2464e-06], [4.8124, 1.2165e-06], [4.8237, 1.1815e-06], [4.8342, 1.1551e-06], [4.8497, 1.1255e-06], [4.8596, 1.0985e-06], [4.868, 1.0687e-06], [4.8814, 1.038e-06], [4.8898, 1.0164e-06]]
        self.lead_200 = [[0, 10], [0.1072, 1.0261], [0.1595, 0.4741], [0.2142, 0.27652], [0.2965, 0.20589],
                         [0.3645, 0.16314], [0.4377, 0.13259], [0.4956, 0.1053], [0.5586, 0.08499], [0.6218, 0.06939],
                         [0.6953, 0.05798], [0.7639, 0.04889], [0.8377, 0.04219], [0.8806, 0.03366], [0.9687, 0.02698],
                         [1.0267, 0.021626], [1.0999, 0.017617], [1.1738, 0.015378], [1.238, 0.0138], [1.302, 0.012185],
                         [1.3459, 0.01076], [1.4302, 0.009634], [1.4789, 0.008351], [1.5533, 0.007581],
                         [1.6069, 0.006512], [1.6603, 0.005428], [1.7342, 0.004705], [1.7983, 0.004193],
                         [1.8723, 0.003703], [1.9316, 0.003369], [2.0055, 0.002921], [2.0593, 0.0025378],
                         [2.1282, 0.0022152], [2.1872, 0.0019606], [2.2662, 0.0017193], [2.3356, 0.0015789],
                         [2.4101, 0.0014532], [2.4892, 0.0012921], [2.5685, 0.0011596], [2.6272, 0.0010006],
                         [2.7114, 0.0008917], [2.7707, 0.0008114], [2.8302, 0.0007502], [2.8894, 0.0006764],
                         [2.9584, 0.0006], [3.0175, 0.0005323], [3.0865, 0.00047], [3.1658, 0.0004227],
                         [3.2501, 0.000382], [3.2992, 0.0003412], [3.3683, 0.0003041], [3.4427, 0.0002792],
                         [3.517, 0.00025233], [3.5862, 0.00022696], [3.6452, 0.00020087], [3.7197, 0.00018489],
                         [3.7739, 0.00016745], [3.8383, 0.00015236], [3.9228, 0.00013991], [3.9868, 0.00012412],
                         [4.0413, 0.00011503], [4.0958, 0.0001076], [4.1653, 9.95e-05], [4.2148, 9.22e-05],
                         [4.2842, 8.45e-05], [4.3536, 7.74e-05], [4.4128, 7.01e-05], [4.4725, 6.59e-05],
                         [4.5521, 6.13e-05], [4.6065, 5.65e-05], [4.6559, 5.21e-05], [4.7305, 4.89e-05],
                         [4.7951, 4.57e-05], [4.8496, 4.26e-05], [4.9093, 4e-05], [4.9585, 3.63e-05],
                         [5.0226, 3.23e-05], [5.1071, 2.97e-05], [5.1967, 2.75e-05], [5.2559, 2.49e-05],
                         [5.2954, 2.33e-05], [5.3501, 2.21e-05], [5.4097, 2.06e-05], [5.4493, 1.95e-05],
                         [5.4838, 1.83e-05], [5.5383, 1.71e-05], [5.5879, 1.61e-05], [5.6426, 1.52e-05],
                         [5.677, 1.42e-05], [5.7169, 1.38e-05], [5.7562, 1.27e-05], [5.8108, 1.19e-05],
                         [5.8753, 1.1e-05], [5.9547, 1e-05], [6.0037, 8.96e-06], [6.0882, 8.19e-06], [6.1427, 7.61e-06],
                         [6.1973, 7.17e-06], [6.2418, 6.69e-06], [6.3061, 6.09e-06], [6.3508, 5.8e-06],
                         [6.4106, 5.55e-06], [6.4553, 5.26e-06], [6.52, 4.98e-06], [6.5695, 4.66e-06],
                         [6.6443, 4.41e-06], [6.7086, 4.01e-06], [6.7677, 3.58e-06], [6.827, 3.27e-06], [6.8864, 3e-06],
                         [6.946, 2.81e-06], [6.9957, 2.66e-06], [7.055, 2.44e-06], [7.1143, 2.21e-06], [7.169, 2.1e-06],
                         [7.2336, 1.96e-06], [7.283, 1.82e-06], [7.3426, 1.71e-06], [7.4073, 1.61e-06],
                         [7.4569, 1.52e-06], [7.5058, 1.33e-06], [7.56, 1.2e-06], [7.6245, 1.12e-06],
                         [7.6794, 1.08e-06], [7.7293, 1.04e-06], [7.7691, 1.01e-06]]
        self.lead_250 = [[0.01, 10], [0.182, 0.9776], [0.2524, 0.6054], [0.3244, 0.4374], [0.4123, 0.345], [0.48, 0.26716], [0.5434, 0.22168], [0.5925, 0.19985], [0.6768, 0.18017], [0.7563, 0.16545], [0.8098, 0.13952], [0.864, 0.12636], [0.9321, 0.10128], [0.9957, 0.0862], [1.0652, 0.08007], [1.1495, 0.07169], [1.2141, 0.06706], [1.2481, 0.06031], [1.3024, 0.05475], [1.3614, 0.04835], [1.4459, 0.0443], [1.5149, 0.03911], [1.5788, 0.0343], [1.6483, 0.03179], [1.7429, 0.02913], [1.7974, 0.027119], [1.8416, 0.024674], [1.926, 0.022399], [1.9953, 0.02038], [2.0447, 0.018715], [2.1139, 0.016833], [2.1733, 0.01553], [2.2279, 0.01456], [2.2824, 0.013525], [2.3268, 0.012593], [2.3915, 0.011861], [2.4762, 0.011069], [2.5504, 0.009979], [2.63, 0.00927], [2.7047, 0.008731], [2.7844, 0.008186], [2.8432, 0.007096], [2.8928, 0.006653], [2.9675, 0.006267], [3.0372, 0.00593], [3.0819, 0.005637], [3.1565, 0.00526], [3.1961, 0.004966], [3.2458, 0.004699], [3.3154, 0.004416], [3.37, 0.004121], [3.4345, 0.003828], [3.5041, 0.003589], [3.5637, 0.003349], [3.6382, 0.003097], [3.708, 0.002937], [3.7624, 0.0027035], [3.8321, 0.0025463], [3.9014, 0.0023222], [3.9813, 0.0022126], [4.0208, 0.0020744], [4.0757, 0.0019993], [4.1303, 0.0018831], [4.1901, 0.0018025], [4.2598, 0.0017056], [4.3195, 0.0016065], [4.374, 0.0014992], [4.4637, 0.0013927], [4.5432, 0.0012937], [4.6177, 0.0011908], [4.6775, 0.0011372], [4.7221, 0.0010711], [4.807, 0.0010229], [4.8517, 0.0009723], [4.9365, 0.0009201], [5.001, 0.0008547], [5.0606, 0.0008013], [5.1101, 0.0007461], [5.1999, 0.0007027], [5.2794, 0.0006483], [5.3692, 0.0006092], [5.454, 0.0005791], [5.5288, 0.0005505], [5.6032, 0.0005009], [5.6728, 0.0004686], [5.7374, 0.0004403], [5.8071, 0.0004147], [5.892, 0.0003933], [5.9665, 0.0003645], [6.0262, 0.0003457], [6.086, 0.0003287], [6.1606, 0.0003081], [6.2306, 0.0002977], [6.2902, 0.0002784], [6.36, 0.00026591], [6.4195, 0.00024644], [6.4792, 0.00023427], [6.5489, 0.00022065], [6.6388, 0.00020976], [6.7085, 0.00019711], [6.7683, 0.00018824], [6.8178, 0.00017648], [6.8925, 0.00016622], [6.9773, 0.0001562], [7.0521, 0.00014883], [7.1269, 0.00014115], [7.1867, 0.00013449], [7.2614, 0.00012697], [7.3261, 0.00011986], [7.3959, 0.00011394], [7.4556, 0.00010831], [7.5255, 0.00010368], [7.5902, 9.833e-05], [7.6401, 9.477e-05], [7.7098, 8.968e-05], [7.7795, 8.466e-05], [7.8592, 7.956e-05], [7.924, 7.545e-05], [8.0037, 7.09e-05], [8.0635, 6.818e-05], [8.1181, 6.363e-05], [8.1979, 6.035e-05], [8.2727, 5.75e-05], [8.3325, 5.516e-05], [8.3873, 5.256e-05], [8.4521, 5.031e-05], [8.5119, 4.793e-05], [8.5816, 4.536e-05], [8.6464, 4.332e-05], [8.7264, 4.146e-05], [8.7911, 3.923e-05], [8.8508, 3.738e-05], [8.9055, 3.537e-05], [9.0005, 3.378e-05], [9.0652, 3.211e-05], [9.1148, 3.031e-05], [9.1746, 2.875e-05], [9.2644, 2.7267e-05], [9.3242, 2.592e-05], [9.374, 2.4982e-05], [9.4338, 2.3803e-05], [9.5037, 2.2889e-05], [9.5634, 2.1708e-05], [9.6483, 2.0732e-05], [9.6979, 1.9572e-05], [9.7977, 1.8307e-05], [9.8824, 1.7204e-05], [9.9771, 1.6019e-05], [10.062, 1.5333e-05], [10.1318, 1.4576e-05], [10.2067, 1.3952e-05], [10.2714, 1.3202e-05], [10.3463, 1.2637e-05], [10.421, 1.1902e-05], [10.4857, 1.1262e-05], [10.5556, 1.083e-05], [10.6302, 1.0084e-05], [10.7151, 9.586e-06], [10.7747, 9.028e-06], [10.8395, 8.602e-06], [10.8943, 8.234e-06], [10.9791, 7.773e-06], [11.0789, 7.305e-06], [11.1488, 7.041e-06], [11.1884, 6.662e-06], [11.2832, 6.275e-06], [11.348, 5.951e-06], [11.4226, 5.567e-06], [11.5024, 5.292e-06], [11.5872, 4.984e-06], [11.662, 4.727e-06], [11.7368, 4.494e-06], [11.8166, 4.252e-06], [11.9063, 3.996e-06], [11.9611, 3.825e-06], [12.0258, 3.602e-06], [12.1257, 3.432e-06], [12.1755, 3.27e-06], [12.2401, 3.073e-06], [12.3299, 2.895e-06], [12.3997, 2.758e-06], [12.4644, 2.6097e-06], [12.5441, 2.4524e-06], [12.624, 2.3366e-06], [12.6936, 2.1806e-06], [12.7684, 2.0729e-06], [12.853, 1.9257e-06], [12.9177, 1.8263e-06], [13.0026, 1.7321e-06], [13.0623, 1.6466e-06], [13.112, 1.5616e-06], [13.1918, 1.4776e-06], [13.2516, 1.4111e-06], [13.3213, 1.3383e-06], [13.3862, 1.281e-06], [13.461, 1.2178e-06], [13.5207, 1.1576e-06], [13.5905, 1.0954e-06], [13.6702, 1.0365e-06], [13.7151, 1.0059e-06]]
        self.lead_300 = [[0.005, 10], [0.2126, 0.6267], [0.2795, 0.4507], [0.3387, 0.4073], [0.4121, 0.3364], [0.486, 0.2923], [0.5351, 0.2629], [0.599, 0.22948], [0.6733, 0.2088], [0.7527, 0.18999], [0.8561, 0.15441], [0.9354, 0.14049], [1.0049, 0.12991], [1.0792, 0.11712], [1.1338, 0.1098], [1.1982, 0.1006], [1.2677, 0.09324], [1.3273, 0.08741], [1.4068, 0.08027], [1.4563, 0.07509], [1.5258, 0.06943], [1.6006, 0.066], [1.6453, 0.0626], [1.6948, 0.05869], [1.7543, 0.05439], [1.789, 0.05206], [1.8438, 0.0496], [1.8935, 0.04737], [1.9483, 0.04545], [2.0127, 0.04154], [2.0473, 0.03949], [2.102, 0.03728], [2.1564, 0.03455], [2.2362, 0.03254], [2.2958, 0.03072], [2.3304, 0.02907], [2.4203, 0.02757], [2.4801, 0.026451], [2.5298, 0.025202], [2.5946, 0.024067], [2.6394, 0.023037], [2.7091, 0.021648], [2.7739, 0.020721], [2.8288, 0.019972], [2.8787, 0.019428], [2.9333, 0.018341], [2.9681, 0.017596], [3.0376, 0.016383], [3.1325, 0.015467], [3.1873, 0.014805], [3.2369, 0.014041], [3.3117, 0.013225], [3.4314, 0.012229], [3.4907, 0.011153], [3.5754, 0.010432], [3.6502, 0.009894], [3.7551, 0.009384], [3.8047, 0.008838], [3.8945, 0.008363], [3.9643, 0.007914], [4.0291, 0.007592], [4.0739, 0.007267], [4.1639, 0.006988], [4.2086, 0.006658], [4.2986, 0.006418], [4.3483, 0.006115], [4.4432, 0.005826], [4.5129, 0.005475], [4.6027, 0.005157], [4.6924, 0.004846], [4.7725, 0.004714], [4.8272, 0.004481], [4.9172, 0.004299], [4.9669, 0.004087], [5.0266, 0.003876], [5.0963, 0.003659], [5.2063, 0.00347], [5.3012, 0.003307], [5.401, 0.003129], [5.4557, 0.002954], [5.5207, 0.002873], [5.6005, 0.0027252], [5.6855, 0.0026388], [5.7605, 0.0025317], [5.8353, 0.0024233], [5.915, 0.002272], [6.0048, 0.0021351], [6.0697, 0.0020531], [6.1596, 0.0019607], [6.2295, 0.0018898], [6.2794, 0.0018257], [6.3494, 0.0017719], [6.4143, 0.0017039], [6.4792, 0.001646], [6.5541, 0.0015829], [6.6191, 0.0015433], [6.674, 0.0014875], [6.7289, 0.0014403], [6.7787, 0.0013818], [6.8988, 0.0013197], [6.9736, 0.0012545], [7.0484, 0.001198], [7.1285, 0.0011627], [7.1983, 0.0011104], [7.2683, 0.0010752], [7.3531, 0.0010221], [7.4432, 0.0009874], [7.5228, 0.0009236], [7.6027, 0.0008821], [7.6977, 0.0008424], [7.7827, 0.0008119], [7.8726, 0.0007772], [7.9323, 0.0007337], [8.0172, 0.0007039], [8.0872, 0.0006816], [8.1821, 0.0006479], [8.262, 0.0006174], [8.3267, 0.0005869], [8.4367, 0.0005566], [8.5616, 0.0005231], [8.6413, 0.0004927], [8.7812, 0.0004598], [8.8612, 0.0004442], [8.9311, 0.0004281], [8.9959, 0.0004051], [9.0859, 0.0003923], [9.1759, 0.0003763], [9.2408, 0.0003636], [9.3357, 0.0003448], [9.4307, 0.0003316], [9.4956, 0.0003196], [9.5855, 0.0003038], [9.6505, 0.0002955], [9.7655, 0.0002816], [9.8604, 0.00026831], [9.9404, 0.00025802], [10.0201, 0.00024358], [10.125, 0.00023049], [10.195, 0.0002237], [10.26, 0.0002166], [10.35, 0.00020829], [10.43, 0.00020076], [10.4798, 0.0001935], [10.5598, 0.0001878], [10.6298, 0.00018101], [10.7098, 0.00017567], [10.7946, 0.00016661], [10.8845, 0.00015765], [10.9945, 0.00015126], [11.0695, 0.00014646], [11.1695, 0.00013987], [11.2244, 0.00013544], [11.3043, 0.00012994], [11.3793, 0.00012495], [11.4593, 0.00012127], [11.5543, 0.00011608], [11.6041, 0.00011214], [11.679, 0.00010734], [11.7639, 0.00010204], [11.8438, 9.835e-05], [11.9239, 9.567e-05], [11.9988, 9.137e-05], [12.0787, 8.746e-05], [12.1586, 8.41e-05], [12.2284, 8.013e-05], [12.3085, 7.795e-05], [12.3534, 7.6e-05], [12.4384, 7.275e-05], [12.5134, 7.06e-05], [12.5783, 6.837e-05], [12.6432, 6.574e-05], [12.7232, 6.351e-05], [12.793, 6.037e-05], [12.8781, 5.846e-05], [12.958, 5.609e-05], [13.028, 5.443e-05], [13.1229, 5.198e-05], [13.2079, 5.011e-05], [13.2778, 4.829e-05], [13.3577, 4.612e-05], [13.4776, 4.324e-05], [13.5726, 4.149e-05], [13.6525, 3.98e-05], [13.7074, 3.863e-05], [13.8023, 3.672e-05], [13.9023, 3.507e-05], [13.9972, 3.341e-05], [14.0923, 3.228e-05], [14.1771, 3.062e-05], [14.2221, 2.985e-05], [14.327, 2.838e-05], [14.4069, 2.7288e-05], [14.5171, 2.6362e-05], [14.607, 2.5234e-05], [14.7021, 2.4434e-05], [14.7819, 2.3228e-05], [14.872, 2.2543e-05], [14.9469, 2.1578e-05], [15.0469, 2.056e-05], [15.1218, 1.9771e-05], [15.2469, 1.8969e-05], [15.3319, 1.8241e-05], [15.3918, 1.7663e-05], [15.4517, 1.6985e-05], [15.5467, 1.6409e-05], [15.6117, 1.5962e-05], [15.7168, 1.5385e-05], [15.8117, 1.4625e-05], [15.8715, 1.3967e-05], [15.9764, 1.3186e-05], [16.0763, 1.2564e-05], [16.1413, 1.2221e-05], [16.2213, 1.1834e-05], [16.2963, 1.1406e-05], [16.3862, 1.0868e-05], [16.4811, 1.0355e-05], [16.5761, 9.958e-06], [16.6811, 9.532e-06], [16.7612, 9.229e-06], [16.8712, 8.814e-06], [16.9812, 8.418e-06], [17.0361, 8.188e-06], [17.1261, 7.874e-06], [17.1961, 7.642e-06], [17.2711, 7.383e-06], [17.346, 7.099e-06], [17.4109, 6.796e-06], [17.4907, 6.46e-06], [17.5657, 6.226e-06], [17.6357, 6.071e-06], [17.7257, 5.865e-06], [17.8008, 5.718e-06], [17.8606, 5.436e-06], [17.9355, 5.251e-06], [18.0304, 4.992e-06], [18.1003, 4.8e-06], [18.1853, 4.595e-06], [18.2802, 4.388e-06], [18.3854, 4.269e-06], [18.4703, 4.086e-06], [18.5402, 3.938e-06], [18.6102, 3.813e-06], [18.6901, 3.642e-06], [18.795, 3.462e-06], [18.875, 3.345e-06], [18.9649, 3.187e-06], [19.05, 3.086e-06], [19.1248, 2.947e-06], [19.2098, 2.84e-06], [19.2848, 2.7376e-06], [19.3596, 2.6144e-06], [19.4296, 2.5315e-06], [19.5046, 2.4569e-06], [19.5996, 2.3518e-06], [19.7047, 2.2668e-06], [19.7645, 2.1798e-06], [19.8445, 2.0961e-06], [19.9194, 2.0064e-06], [20.0144, 1.9384e-06], [20.0891, 1.8257e-06], [20.1743, 1.7801e-06], [20.2391, 1.7e-06], [20.3341, 1.6348e-06], [20.394, 1.5793e-06], [20.4539, 1.5187e-06], [20.5088, 1.4739e-06], [20.5888, 1.4206e-06], [20.6886, 1.338e-06], [20.7837, 1.2927e-06], [20.8335, 1.2488e-06], [20.9185, 1.2009e-06], [20.9934, 1.1548e-06], [21.0584, 1.1233e-06], [21.1384, 1.0827e-06], [21.2033, 1.0435e-06], [21.2532, 1.0128e-06]]
        self.Table_Primary_Counter = 1
        self.Table_Secondary_Counter = 1
        self.Table_Scattering_Counter = 1
        self.Table_Stray_Counter = 1
        self.Figure_Primary_Counter = 1
        self.Figure_Secondary_Counter = 1
        self.Figure_Scattering_Counter = 1
        self.Figure_Stray_Counter = 1

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(756, 479)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setInputMethodHints(QtCore.Qt.ImhNone)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.tabWidget.setInputMethodHints(QtCore.Qt.ImhNone)
        self.tabWidget.setTabPosition(QtWidgets.QTabWidget.West)
        self.tabWidget.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.tabWidget.setTabsClosable(False)
        self.tabWidget.setObjectName("tabWidget")
        self.home = QtWidgets.QWidget()
        self.home.setAccessibleDescription("")
        self.home.setObjectName("home")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.home)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.label = QtWidgets.QLabel(self.home)
        self.label.setObjectName("label")
        self.gridLayout_6.addWidget(self.label, 0, 0, 1, 1)
        self.tabWidget.addTab(self.home, "")
        self.Calculator_measure = QtWidgets.QWidget()
        self.Calculator_measure.setObjectName("Calculator_measure")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.Calculator_measure)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.Calculator_Measure_tabWidget = QtWidgets.QTabWidget(self.Calculator_measure)
        self.Calculator_Measure_tabWidget.setObjectName("Calculator_Measure_tabWidget")
        self.Calculator_Measure_Primary_beam_tabWidgetPage = QtWidgets.QWidget()
        self.Calculator_Measure_Primary_beam_tabWidgetPage.setObjectName(
            "Calculator_Measure_Primary_beam_tabWidgetPage")
        self.gridLayout_13 = QtWidgets.QGridLayout(self.Calculator_Measure_Primary_beam_tabWidgetPage)
        self.gridLayout_13.setObjectName("gridLayout_13")
        self.Calculator_Measure_Primary_W_Edit = QtWidgets.QLineEdit(self.Calculator_Measure_Primary_beam_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_Measure_Primary_W_Edit.sizePolicy().hasHeightForWidth())
        self.Calculator_Measure_Primary_W_Edit.setSizePolicy(sizePolicy)
        self.Calculator_Measure_Primary_W_Edit.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_Measure_Primary_W_Edit.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_Measure_Primary_W_Edit.setAutoFillBackground(False)
        self.Calculator_Measure_Primary_W_Edit.setObjectName("Calculator_Measure_Primary_W_Edit")
        self.gridLayout_13.addWidget(self.Calculator_Measure_Primary_W_Edit, 0, 5, 1, 1)
        self.Calculator_Measure_Primary_E_comboBox = QtWidgets.QComboBox(
            self.Calculator_Measure_Primary_beam_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_Measure_Primary_E_comboBox.sizePolicy().hasHeightForWidth())
        self.Calculator_Measure_Primary_E_comboBox.setSizePolicy(sizePolicy)
        self.Calculator_Measure_Primary_E_comboBox.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_Measure_Primary_E_comboBox.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_Measure_Primary_E_comboBox.setObjectName("Calculator_Measure_Primary_E_comboBox")
        self.Calculator_Measure_Primary_E_comboBox.addItem("")
        self.Calculator_Measure_Primary_E_comboBox.addItem("")
        self.Calculator_Measure_Primary_E_comboBox.addItem("")
        self.Calculator_Measure_Primary_E_comboBox.addItem("")
        self.Calculator_Measure_Primary_E_comboBox.addItem("")
        self.Calculator_Measure_Primary_E_comboBox.addItem("")
        self.Calculator_Measure_Primary_E_comboBox.addItem("")
        self.Calculator_Measure_Primary_E_comboBox.addItem("")
        self.gridLayout_13.addWidget(self.Calculator_Measure_Primary_E_comboBox, 0, 0, 1, 1)
        self.Calculator_Measure_line = QtWidgets.QFrame(self.Calculator_Measure_Primary_beam_tabWidgetPage)
        self.Calculator_Measure_line.setFrameShape(QtWidgets.QFrame.VLine)
        self.Calculator_Measure_line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.Calculator_Measure_line.setObjectName("Calculator_Measure_line")
        self.gridLayout_13.addWidget(self.Calculator_Measure_line, 0, 4, 5, 1)
        self.Calculator_Measure_Primary_W_label = QtWidgets.QLabel(self.Calculator_Measure_Primary_beam_tabWidgetPage)
        self.Calculator_Measure_Primary_W_label.setObjectName("Calculator_Measure_Primary_W_label")
        self.gridLayout_13.addWidget(self.Calculator_Measure_Primary_W_label, 0, 6, 1, 1)
        self.Calculator_Measure_Primary_E_label = QtWidgets.QLabel(self.Calculator_Measure_Primary_beam_tabWidgetPage)
        self.Calculator_Measure_Primary_E_label.setObjectName("Calculator_Measure_Primary_E_label")
        self.gridLayout_13.addWidget(self.Calculator_Measure_Primary_E_label, 0, 1, 1, 2, QtCore.Qt.AlignLeft)
        self.Calculator_Measure_Primary_P_Edit = QtWidgets.QLineEdit(self.Calculator_Measure_Primary_beam_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_Measure_Primary_P_Edit.sizePolicy().hasHeightForWidth())
        self.Calculator_Measure_Primary_P_Edit.setSizePolicy(sizePolicy)
        self.Calculator_Measure_Primary_P_Edit.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_Measure_Primary_P_Edit.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_Measure_Primary_P_Edit.setAutoFillBackground(False)
        self.Calculator_Measure_Primary_P_Edit.setObjectName("Calculator_Measure_Primary_P_Edit")
        self.gridLayout_13.addWidget(self.Calculator_Measure_Primary_P_Edit, 1, 0, 1, 1)
        self.Calculator_Measure_Primary_T_Edit = QtWidgets.QLineEdit(self.Calculator_Measure_Primary_beam_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_Measure_Primary_T_Edit.sizePolicy().hasHeightForWidth())
        self.Calculator_Measure_Primary_T_Edit.setSizePolicy(sizePolicy)
        self.Calculator_Measure_Primary_T_Edit.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_Measure_Primary_T_Edit.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_Measure_Primary_T_Edit.setAutoFillBackground(False)
        self.Calculator_Measure_Primary_T_Edit.setObjectName("Calculator_Measure_Primary_T_Edit")
        self.gridLayout_13.addWidget(self.Calculator_Measure_Primary_T_Edit, 1, 5, 1, 1)
        self.Calculator_Measure_Primary_P_label = QtWidgets.QLabel(self.Calculator_Measure_Primary_beam_tabWidgetPage)
        self.Calculator_Measure_Primary_P_label.setObjectName("Calculator_Measure_Primary_P_label")
        self.gridLayout_13.addWidget(self.Calculator_Measure_Primary_P_label, 1, 1, 1, 3, QtCore.Qt.AlignLeft)
        self.Calculator_Measure_Primary_meterial_comboBox = QtWidgets.QComboBox(
            self.Calculator_Measure_Primary_beam_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_Measure_Primary_meterial_comboBox.sizePolicy().hasHeightForWidth())
        self.Calculator_Measure_Primary_meterial_comboBox.setSizePolicy(sizePolicy)
        self.Calculator_Measure_Primary_meterial_comboBox.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_Measure_Primary_meterial_comboBox.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_Measure_Primary_meterial_comboBox.setObjectName("Calculator_Measure_Primary_meterial_comboBox")
        self.Calculator_Measure_Primary_meterial_comboBox.addItem("")
        self.Calculator_Measure_Primary_meterial_comboBox.addItem("")
        self.gridLayout_13.addWidget(self.Calculator_Measure_Primary_meterial_comboBox, 3, 0, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_13.addItem(spacerItem, 4, 0, 1, 1)
        self.Calculator_Measure_Primary_U_label = QtWidgets.QLabel(self.Calculator_Measure_Primary_beam_tabWidgetPage)
        self.Calculator_Measure_Primary_U_label.setObjectName("Calculator_Measure_Primary_U_label")
        self.gridLayout_13.addWidget(self.Calculator_Measure_Primary_U_label, 2, 6, 1, 1)
        self.Calculator_Measure_Primary_Meterial_label = QtWidgets.QLabel(
            self.Calculator_Measure_Primary_beam_tabWidgetPage)
        self.Calculator_Measure_Primary_Meterial_label.setObjectName("Calculator_Measure_Primary_Meterial_label")
        self.gridLayout_13.addWidget(self.Calculator_Measure_Primary_Meterial_label, 3, 1, 1, 1, QtCore.Qt.AlignLeft)
        self.Calculator_Measure_Primary_U_Edit = QtWidgets.QLineEdit(self.Calculator_Measure_Primary_beam_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_Measure_Primary_U_Edit.sizePolicy().hasHeightForWidth())
        self.Calculator_Measure_Primary_U_Edit.setSizePolicy(sizePolicy)
        self.Calculator_Measure_Primary_U_Edit.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_Measure_Primary_U_Edit.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_Measure_Primary_U_Edit.setAutoFillBackground(False)
        self.Calculator_Measure_Primary_U_Edit.setObjectName("Calculator_Measure_Primary_U_Edit")
        self.gridLayout_13.addWidget(self.Calculator_Measure_Primary_U_Edit, 2, 5, 1, 1)
        self.Calculator_Measure_Primary_d_pri_label = QtWidgets.QLabel(
            self.Calculator_Measure_Primary_beam_tabWidgetPage)
        self.Calculator_Measure_Primary_d_pri_label.setObjectName("Calculator_Measure_Primary_d_pri_label")
        self.gridLayout_13.addWidget(self.Calculator_Measure_Primary_d_pri_label, 2, 1, 1, 3, QtCore.Qt.AlignLeft)
        self.Calculator_Measure_Primary_T_label = QtWidgets.QLabel(self.Calculator_Measure_Primary_beam_tabWidgetPage)
        self.Calculator_Measure_Primary_T_label.setObjectName("Calculator_Measure_Primary_T_label")
        self.gridLayout_13.addWidget(self.Calculator_Measure_Primary_T_label, 1, 6, 1, 1)
        self.Calculator_Measure_Primary_d_pri_Edit = QtWidgets.QLineEdit(
            self.Calculator_Measure_Primary_beam_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_Measure_Primary_d_pri_Edit.sizePolicy().hasHeightForWidth())
        self.Calculator_Measure_Primary_d_pri_Edit.setSizePolicy(sizePolicy)
        self.Calculator_Measure_Primary_d_pri_Edit.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_Measure_Primary_d_pri_Edit.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_Measure_Primary_d_pri_Edit.setAutoFillBackground(False)
        self.Calculator_Measure_Primary_d_pri_Edit.setObjectName("Calculator_Measure_Primary_d_pri_Edit")
        self.gridLayout_13.addWidget(self.Calculator_Measure_Primary_d_pri_Edit, 2, 0, 1, 1)
        self.Calculator_Measure_Primary_scrollArea = QtWidgets.QScrollArea(
            self.Calculator_Measure_Primary_beam_tabWidgetPage)
        self.Calculator_Measure_Primary_scrollArea.setMinimumSize(QtCore.QSize(0, 169))
        self.Calculator_Measure_Primary_scrollArea.setWidgetResizable(True)
        self.Calculator_Measure_Primary_scrollArea.setObjectName("Calculator_Measure_Primary_scrollArea")
        self.scrollAreaWidgetContents_11 = QtWidgets.QTextBrowser(self.Calculator_Measure_Primary_beam_tabWidgetPage)
        self.scrollAreaWidgetContents_11.setGeometry(QtCore.QRect(0, 0, 669, 167))
        self.scrollAreaWidgetContents_11.setObjectName("scrollAreaWidgetContents_11")
        self.Calculator_Measure_Primary_scrollArea.setWidget(self.scrollAreaWidgetContents_11)
        self.gridLayout_13.addWidget(self.Calculator_Measure_Primary_scrollArea, 5, 0, 1, 7)
        self.Calculator_Measure_Primary_Exposurerate_label = QtWidgets.QLabel(
            self.Calculator_Measure_Primary_beam_tabWidgetPage)
        self.Calculator_Measure_Primary_Exposurerate_label.setObjectName(
            "Calculator_Measure_Primary_Exposurerate_label")
        self.gridLayout_13.addWidget(self.Calculator_Measure_Primary_Exposurerate_label, 6, 2, 1, 2,
                                     QtCore.Qt.AlignRight)
        self.Calculator_Measure_Primary_Exposurerate_textBrowser = QtWidgets.QTextBrowser(
            self.Calculator_Measure_Primary_beam_tabWidgetPage)
        self.Calculator_Measure_Primary_Exposurerate_textBrowser.setMinimumSize(QtCore.QSize(324, 30))
        self.Calculator_Measure_Primary_Exposurerate_textBrowser.setMaximumSize(QtCore.QSize(16777215, 70))
        self.Calculator_Measure_Primary_Exposurerate_textBrowser.setObjectName(
            "Calculator_Measure_Primary_Exposurerate_textBrowser")
        self.gridLayout_13.addWidget(self.Calculator_Measure_Primary_Exposurerate_textBrowser, 6, 4, 1, 3)
        self.Calculator_Measure_Primary_thickness_label = QtWidgets.QLabel(
            self.Calculator_Measure_Primary_beam_tabWidgetPage)
        self.Calculator_Measure_Primary_thickness_label.setObjectName("Calculator_Measure_Primary_thickness_label")
        self.gridLayout_13.addWidget(self.Calculator_Measure_Primary_thickness_label, 7, 1, 1, 3, QtCore.Qt.AlignRight)
        self.Calculator_Measure_Primary_thickness_textBrowser = QtWidgets.QTextBrowser(
            self.Calculator_Measure_Primary_beam_tabWidgetPage)
        self.Calculator_Measure_Primary_thickness_textBrowser.setMinimumSize(QtCore.QSize(0, 30))
        self.Calculator_Measure_Primary_thickness_textBrowser.setMaximumSize(QtCore.QSize(16777215, 70))
        self.Calculator_Measure_Primary_thickness_textBrowser.setObjectName(
            "Calculator_Measure_Primary_thickness_textBrowser")
        self.gridLayout_13.addWidget(self.Calculator_Measure_Primary_thickness_textBrowser, 7, 4, 1, 3)
        self.Calculator_Measure_Primary_Calculate_Button = QtWidgets.QPushButton(
            self.Calculator_Measure_Primary_beam_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_Measure_Primary_Calculate_Button.sizePolicy().hasHeightForWidth())
        self.Calculator_Measure_Primary_Calculate_Button.setSizePolicy(sizePolicy)
        self.Calculator_Measure_Primary_Calculate_Button.setMinimumSize(QtCore.QSize(0, 47))
        self.Calculator_Measure_Primary_Calculate_Button.setObjectName("Calculator_Measure_Primary_Calculate_Button")
        self.Calculator_Measure_Primary_Calculate_Button.clicked.connect(self.Measure_Primary_Calculator)
        self.gridLayout_13.addWidget(self.Calculator_Measure_Primary_Calculate_Button, 3, 5, 2, 2)
        self.Calculator_Measure_tabWidget.addTab(self.Calculator_Measure_Primary_beam_tabWidgetPage, "")
        self.Calculator_Measure_Secondary_beam_tabWidgetPage = QtWidgets.QWidget()
        self.Calculator_Measure_Secondary_beam_tabWidgetPage.setObjectName(
            "Calculator_Measure_Secondary_beam_tabWidgetPage")
        self.gridLayout_14 = QtWidgets.QGridLayout(self.Calculator_Measure_Secondary_beam_tabWidgetPage)
        self.gridLayout_14.setObjectName("gridLayout_14")
        self.Calculator_Measure_Secondary_E_comboBox = QtWidgets.QComboBox(
            self.Calculator_Measure_Secondary_beam_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_Measure_Secondary_E_comboBox.sizePolicy().hasHeightForWidth())
        self.Calculator_Measure_Secondary_E_comboBox.setSizePolicy(sizePolicy)
        self.Calculator_Measure_Secondary_E_comboBox.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_Measure_Secondary_E_comboBox.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_Measure_Secondary_E_comboBox.setObjectName("Calculator_Measure_Secondary_E_comboBox")
        self.Calculator_Measure_Secondary_E_comboBox.addItem("")
        self.Calculator_Measure_Secondary_E_comboBox.addItem("")
        self.Calculator_Measure_Secondary_E_comboBox.addItem("")
        self.Calculator_Measure_Secondary_E_comboBox.addItem("")
        self.Calculator_Measure_Secondary_E_comboBox.addItem("")
        self.Calculator_Measure_Secondary_E_comboBox.addItem("")
        self.Calculator_Measure_Secondary_E_comboBox.addItem("")
        self.Calculator_Measure_Secondary_E_comboBox.addItem("")
        self.gridLayout_14.addWidget(self.Calculator_Measure_Secondary_E_comboBox, 0, 0, 1, 1)
        self.Calculator_Measure_Secondary_T_Edit = QtWidgets.QLineEdit(
            self.Calculator_Measure_Secondary_beam_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_Measure_Secondary_T_Edit.sizePolicy().hasHeightForWidth())
        self.Calculator_Measure_Secondary_T_Edit.setSizePolicy(sizePolicy)
        self.Calculator_Measure_Secondary_T_Edit.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_Measure_Secondary_T_Edit.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_Measure_Secondary_T_Edit.setAutoFillBackground(False)
        self.Calculator_Measure_Secondary_T_Edit.setObjectName("Calculator_Measure_Secondary_T_Edit")
        self.gridLayout_14.addWidget(self.Calculator_Measure_Secondary_T_Edit, 1, 5, 1, 1)
        self.Calculator_Measure_Secondary_T_label = QtWidgets.QLabel(
            self.Calculator_Measure_Secondary_beam_tabWidgetPage)
        self.Calculator_Measure_Secondary_T_label.setObjectName("Calculator_Measure_Secondary_T_label")
        self.gridLayout_14.addWidget(self.Calculator_Measure_Secondary_T_label, 1, 6, 1, 1)
        self.Calculator_Measure_Secondary_d_sec_label = QtWidgets.QLabel(
            self.Calculator_Measure_Secondary_beam_tabWidgetPage)
        self.Calculator_Measure_Secondary_d_sec_label.setObjectName("Calculator_Measure_Secondary_d_sec_label")
        self.gridLayout_14.addWidget(self.Calculator_Measure_Secondary_d_sec_label, 2, 1, 1, 3, QtCore.Qt.AlignLeft)
        self.Calculator_Measure_Secondary_I_Edit = QtWidgets.QLineEdit(
            self.Calculator_Measure_Secondary_beam_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_Measure_Secondary_I_Edit.sizePolicy().hasHeightForWidth())
        self.Calculator_Measure_Secondary_I_Edit.setSizePolicy(sizePolicy)
        self.Calculator_Measure_Secondary_I_Edit.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_Measure_Secondary_I_Edit.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_Measure_Secondary_I_Edit.setAutoFillBackground(False)
        self.Calculator_Measure_Secondary_I_Edit.setObjectName("Calculator_Measure_Secondary_I_Edit")
        self.gridLayout_14.addWidget(self.Calculator_Measure_Secondary_I_Edit, 2, 5, 1, 1)
        self.Calculator_Measure_Secondary_d_sec_Edit = QtWidgets.QLineEdit(
            self.Calculator_Measure_Secondary_beam_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_Measure_Secondary_d_sec_Edit.sizePolicy().hasHeightForWidth())
        self.Calculator_Measure_Secondary_d_sec_Edit.setSizePolicy(sizePolicy)
        self.Calculator_Measure_Secondary_d_sec_Edit.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_Measure_Secondary_d_sec_Edit.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_Measure_Secondary_d_sec_Edit.setAutoFillBackground(False)
        self.Calculator_Measure_Secondary_d_sec_Edit.setObjectName("Calculator_Measure_Secondary_d_sec_Edit")
        self.gridLayout_14.addWidget(self.Calculator_Measure_Secondary_d_sec_Edit, 2, 0, 1, 1)
        self.Calculator_Measure_Secondary_I_label = QtWidgets.QLabel(
            self.Calculator_Measure_Secondary_beam_tabWidgetPage)
        self.Calculator_Measure_Secondary_I_label.setObjectName("Calculator_Measure_Secondary_I_label")
        self.gridLayout_14.addWidget(self.Calculator_Measure_Secondary_I_label, 2, 6, 1, 1)
        self.Calculator_Measure_Secondary_Calculate_Button = QtWidgets.QPushButton(
            self.Calculator_Measure_Secondary_beam_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.Calculator_Measure_Secondary_Calculate_Button.sizePolicy().hasHeightForWidth())
        self.Calculator_Measure_Secondary_Calculate_Button.setSizePolicy(sizePolicy)
        self.Calculator_Measure_Secondary_Calculate_Button.setMinimumSize(QtCore.QSize(0, 47))
        self.Calculator_Measure_Secondary_Calculate_Button.setObjectName(
            "Calculator_Measure_Secondary_Calculate_Button")

        self.Calculator_Measure_Secondary_Calculate_Button.clicked.connect(self.Measure_Secondary_Calculator)
        self.gridLayout_14.addWidget(self.Calculator_Measure_Secondary_Calculate_Button, 3, 5, 2, 2)
        self.line_10 = QtWidgets.QFrame(self.Calculator_Measure_Secondary_beam_tabWidgetPage)
        self.line_10.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_10.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_10.setObjectName("line_10")
        self.gridLayout_14.addWidget(self.line_10, 0, 4, 5, 1)
        self.Calculator_Measure_Secondary_E_label = QtWidgets.QLabel(
            self.Calculator_Measure_Secondary_beam_tabWidgetPage)
        self.Calculator_Measure_Secondary_E_label.setObjectName("Calculator_Measure_Secondary_E_label")
        self.gridLayout_14.addWidget(self.Calculator_Measure_Secondary_E_label, 0, 1, 1, 2, QtCore.Qt.AlignLeft)
        self.Calculator_Measure_Secondary_W_Edit = QtWidgets.QLineEdit(
            self.Calculator_Measure_Secondary_beam_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_Measure_Secondary_W_Edit.sizePolicy().hasHeightForWidth())
        self.Calculator_Measure_Secondary_W_Edit.setSizePolicy(sizePolicy)
        self.Calculator_Measure_Secondary_W_Edit.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_Measure_Secondary_W_Edit.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_Measure_Secondary_W_Edit.setAutoFillBackground(False)
        self.Calculator_Measure_Secondary_W_Edit.setObjectName("Calculator_Measure_Secondary_W_Edit")
        self.gridLayout_14.addWidget(self.Calculator_Measure_Secondary_W_Edit, 0, 5, 1, 1)
        self.Calculator_Measure_Secondary_W_label = QtWidgets.QLabel(
            self.Calculator_Measure_Secondary_beam_tabWidgetPage)
        self.Calculator_Measure_Secondary_W_label.setObjectName("Calculator_Measure_Secondary_W_label")
        self.gridLayout_14.addWidget(self.Calculator_Measure_Secondary_W_label, 0, 6, 1, 1)
        self.Calculator_Measure_Secondary_P_Edit = QtWidgets.QLineEdit(
            self.Calculator_Measure_Secondary_beam_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_Measure_Secondary_P_Edit.sizePolicy().hasHeightForWidth())
        self.Calculator_Measure_Secondary_P_Edit.setSizePolicy(sizePolicy)
        self.Calculator_Measure_Secondary_P_Edit.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_Measure_Secondary_P_Edit.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_Measure_Secondary_P_Edit.setAutoFillBackground(False)
        self.Calculator_Measure_Secondary_P_Edit.setObjectName("Calculator_Measure_Secondary_P_Edit")
        self.gridLayout_14.addWidget(self.Calculator_Measure_Secondary_P_Edit, 1, 0, 1, 1)
        self.Calculator_Measure_Secondary_P_label = QtWidgets.QLabel(
            self.Calculator_Measure_Secondary_beam_tabWidgetPage)
        self.Calculator_Measure_Secondary_P_label.setObjectName("Calculator_Measure_Secondary_P_label")
        self.gridLayout_14.addWidget(self.Calculator_Measure_Secondary_P_label, 1, 1, 1, 3, QtCore.Qt.AlignLeft)
        self.Calculator_Measure_Secondary_thickness_textBrowser = QtWidgets.QTextBrowser(
            self.Calculator_Measure_Secondary_beam_tabWidgetPage)
        self.Calculator_Measure_Secondary_thickness_textBrowser.setMinimumSize(QtCore.QSize(0, 30))
        self.Calculator_Measure_Secondary_thickness_textBrowser.setMaximumSize(QtCore.QSize(16777215, 70))
        self.Calculator_Measure_Secondary_thickness_textBrowser.setObjectName(
            "Calculator_Measure_Secondary_thickness_textBrowser")
        self.gridLayout_14.addWidget(self.Calculator_Measure_Secondary_thickness_textBrowser, 7, 4, 1, 3)
        self.Calculator_Measure_Secondary_thickness_label = QtWidgets.QLabel(
            self.Calculator_Measure_Secondary_beam_tabWidgetPage)
        self.Calculator_Measure_Secondary_thickness_label.setObjectName("Calculator_Measure_Secondary_thickness_label")
        self.gridLayout_14.addWidget(self.Calculator_Measure_Secondary_thickness_label, 7, 1, 1, 3,
                                     QtCore.Qt.AlignRight)
        self.Calculator_Measure_Secondary_Exposurerate_label = QtWidgets.QLabel(
            self.Calculator_Measure_Secondary_beam_tabWidgetPage)
        self.Calculator_Measure_Secondary_Exposurerate_label.setObjectName(
            "Calculator_Measure_Secondary_Exposurerate_label")
        self.gridLayout_14.addWidget(self.Calculator_Measure_Secondary_Exposurerate_label, 6, 2, 1, 2,
                                     QtCore.Qt.AlignRight)
        self.Secondary_scrollArea = QtWidgets.QScrollArea(self.Calculator_Measure_Secondary_beam_tabWidgetPage)
        self.Secondary_scrollArea.setMinimumSize(QtCore.QSize(0, 169))
        self.Secondary_scrollArea.setWidgetResizable(True)
        self.Secondary_scrollArea.setObjectName("Secondary_scrollArea")
        self.scrollAreaWidgetContents_12 = QtWidgets.QTextBrowser(self.Calculator_Measure_Secondary_beam_tabWidgetPage)
        self.scrollAreaWidgetContents_12.setGeometry(QtCore.QRect(0, 0, 669, 167))
        self.scrollAreaWidgetContents_12.setObjectName("scrollAreaWidgetContents_12")
        self.Secondary_scrollArea.setWidget(self.scrollAreaWidgetContents_12)
        self.gridLayout_14.addWidget(self.Secondary_scrollArea, 5, 0, 1, 7)
        self.Calculator_Measure_Secondary_Exposurerate_TextBrowser = QtWidgets.QTextBrowser(
            self.Calculator_Measure_Secondary_beam_tabWidgetPage)
        self.Calculator_Measure_Secondary_Exposurerate_TextBrowser.setMinimumSize(QtCore.QSize(324, 30))
        self.Calculator_Measure_Secondary_Exposurerate_TextBrowser.setMaximumSize(QtCore.QSize(16777215, 70))
        self.Calculator_Measure_Secondary_Exposurerate_TextBrowser.setObjectName(
            "Calculator_Measure_Secondary_Exposurerate_TextBrowser")
        self.gridLayout_14.addWidget(self.Calculator_Measure_Secondary_Exposurerate_TextBrowser, 6, 4, 1, 3)
        self.Calculator_Measure_Secondary_meterial_comboBox = QtWidgets.QComboBox(
            self.Calculator_Measure_Secondary_beam_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.Calculator_Measure_Secondary_meterial_comboBox.sizePolicy().hasHeightForWidth())
        self.Calculator_Measure_Secondary_meterial_comboBox.setSizePolicy(sizePolicy)
        self.Calculator_Measure_Secondary_meterial_comboBox.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_Measure_Secondary_meterial_comboBox.setMaximumSize(QtCore.QSize(16777215, 21))
        self.Calculator_Measure_Secondary_meterial_comboBox.setObjectName(
            "Calculator_Measure_Secondary_meterial_comboBox")
        self.Calculator_Measure_Secondary_meterial_comboBox.addItem("")
        self.Calculator_Measure_Secondary_meterial_comboBox.addItem("")
        self.gridLayout_14.addWidget(self.Calculator_Measure_Secondary_meterial_comboBox, 3, 0, 1, 1)
        self.Calculator_Measure_Secondary_Meterial_label = QtWidgets.QLabel(
            self.Calculator_Measure_Secondary_beam_tabWidgetPage)
        self.Calculator_Measure_Secondary_Meterial_label.setObjectName("Calculator_Measure_Secondary_Meterial_label")
        self.gridLayout_14.addWidget(self.Calculator_Measure_Secondary_Meterial_label, 3, 1, 1, 1)
        self.Calculator_Measure_tabWidget.addTab(self.Calculator_Measure_Secondary_beam_tabWidgetPage, "")
        self.Calculator_Measure_Scattering_tabWidgetPage = QtWidgets.QWidget()
        self.Calculator_Measure_Scattering_tabWidgetPage.setObjectName("Calculator_Measure_Scattering_tabWidgetPage")
        self.gridLayout_9 = QtWidgets.QGridLayout(self.Calculator_Measure_Scattering_tabWidgetPage)
        self.gridLayout_9.setObjectName("gridLayout_9")
        self.Calculator_Measure_Scattering_E_comboBox = QtWidgets.QComboBox(
            self.Calculator_Measure_Scattering_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_Measure_Scattering_E_comboBox.sizePolicy().hasHeightForWidth())
        self.Calculator_Measure_Scattering_E_comboBox.setSizePolicy(sizePolicy)
        self.Calculator_Measure_Scattering_E_comboBox.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_Measure_Scattering_E_comboBox.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_Measure_Scattering_E_comboBox.setObjectName("Calculator_Measure_Scattering_E_comboBox")
        self.Calculator_Measure_Scattering_E_comboBox.addItem("")
        self.Calculator_Measure_Scattering_E_comboBox.addItem("")
        self.Calculator_Measure_Scattering_E_comboBox.addItem("")
        self.Calculator_Measure_Scattering_E_comboBox.addItem("")
        self.Calculator_Measure_Scattering_E_comboBox.addItem("")
        self.Calculator_Measure_Scattering_E_comboBox.addItem("")
        self.Calculator_Measure_Scattering_E_comboBox.addItem("")
        self.Calculator_Measure_Scattering_E_comboBox.addItem("")
        self.gridLayout_9.addWidget(self.Calculator_Measure_Scattering_E_comboBox, 0, 0, 1, 1)
        self.Calculator_Measure_Scattering_E_label = QtWidgets.QLabel(self.Calculator_Measure_Scattering_tabWidgetPage)
        self.Calculator_Measure_Scattering_E_label.setObjectName("Calculator_Measure_Scattering_E_label")
        self.gridLayout_9.addWidget(self.Calculator_Measure_Scattering_E_label, 0, 1, 1, 2)
        self.line_11 = QtWidgets.QFrame(self.Calculator_Measure_Scattering_tabWidgetPage)
        self.line_11.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_11.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_11.setObjectName("line_11")
        self.gridLayout_9.addWidget(self.line_11, 0, 3, 7, 2)
        self.Calculator_Measure_Scattering_W_Edit = QtWidgets.QLineEdit(
            self.Calculator_Measure_Scattering_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_Measure_Scattering_W_Edit.sizePolicy().hasHeightForWidth())
        self.Calculator_Measure_Scattering_W_Edit.setSizePolicy(sizePolicy)
        self.Calculator_Measure_Scattering_W_Edit.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_Measure_Scattering_W_Edit.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_Measure_Scattering_W_Edit.setAutoFillBackground(False)
        self.Calculator_Measure_Scattering_W_Edit.setObjectName("Calculator_Measure_Scattering_W_Edit")
        self.gridLayout_9.addWidget(self.Calculator_Measure_Scattering_W_Edit, 0, 5, 1, 1)
        self.Calculator_Measure_Scattering_W_label = QtWidgets.QLabel(self.Calculator_Measure_Scattering_tabWidgetPage)
        self.Calculator_Measure_Scattering_W_label.setObjectName("Calculator_Measure_Scattering_W_label")
        self.gridLayout_9.addWidget(self.Calculator_Measure_Scattering_W_label, 0, 6, 1, 1)
        self.Calculator_Measure_Scattering_P_Edit = QtWidgets.QLineEdit(
            self.Calculator_Measure_Scattering_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_Measure_Scattering_P_Edit.sizePolicy().hasHeightForWidth())
        self.Calculator_Measure_Scattering_P_Edit.setSizePolicy(sizePolicy)
        self.Calculator_Measure_Scattering_P_Edit.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_Measure_Scattering_P_Edit.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_Measure_Scattering_P_Edit.setAutoFillBackground(False)
        self.Calculator_Measure_Scattering_P_Edit.setObjectName("Calculator_Measure_Scattering_P_Edit")
        self.gridLayout_9.addWidget(self.Calculator_Measure_Scattering_P_Edit, 1, 0, 1, 1)
        self.Calculator_Measure_Scattering_P_label = QtWidgets.QLabel(self.Calculator_Measure_Scattering_tabWidgetPage)
        self.Calculator_Measure_Scattering_P_label.setObjectName("Calculator_Measure_Scattering_P_label")
        self.gridLayout_9.addWidget(self.Calculator_Measure_Scattering_P_label, 1, 1, 1, 2)
        self.Calculator_Measure_Scattering_T_Edit = QtWidgets.QLineEdit(
            self.Calculator_Measure_Scattering_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_Measure_Scattering_T_Edit.sizePolicy().hasHeightForWidth())
        self.Calculator_Measure_Scattering_T_Edit.setSizePolicy(sizePolicy)
        self.Calculator_Measure_Scattering_T_Edit.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_Measure_Scattering_T_Edit.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_Measure_Scattering_T_Edit.setAutoFillBackground(False)
        self.Calculator_Measure_Scattering_T_Edit.setObjectName("Calculator_Measure_Scattering_T_Edit")
        self.gridLayout_9.addWidget(self.Calculator_Measure_Scattering_T_Edit, 1, 5, 1, 1)
        self.Calculator_Measure_Scattering_T_label = QtWidgets.QLabel(self.Calculator_Measure_Scattering_tabWidgetPage)
        self.Calculator_Measure_Scattering_T_label.setObjectName("Calculator_Measure_Scattering_T_label")
        self.gridLayout_9.addWidget(self.Calculator_Measure_Scattering_T_label, 1, 6, 1, 1)
        self.Calculator_Measure_Scattering_d_sec_Edit = QtWidgets.QLineEdit(
            self.Calculator_Measure_Scattering_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_Measure_Scattering_d_sec_Edit.sizePolicy().hasHeightForWidth())
        self.Calculator_Measure_Scattering_d_sec_Edit.setSizePolicy(sizePolicy)
        self.Calculator_Measure_Scattering_d_sec_Edit.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_Measure_Scattering_d_sec_Edit.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_Measure_Scattering_d_sec_Edit.setAutoFillBackground(False)
        self.Calculator_Measure_Scattering_d_sec_Edit.setObjectName("Calculator_Measure_Scattering_d_sec_Edit")
        self.gridLayout_9.addWidget(self.Calculator_Measure_Scattering_d_sec_Edit, 2, 0, 1, 1)
        self.Calculator_Measure_Scattering_d_sec_label = QtWidgets.QLabel(
            self.Calculator_Measure_Scattering_tabWidgetPage)
        self.Calculator_Measure_Scattering_d_sec_label.setObjectName("Calculator_Measure_Scattering_d_sec_label")
        self.gridLayout_9.addWidget(self.Calculator_Measure_Scattering_d_sec_label, 2, 1, 1, 2)
        self.Calculator_Measure_Scattering_a_Edit = QtWidgets.QLineEdit(
            self.Calculator_Measure_Scattering_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_Measure_Scattering_a_Edit.sizePolicy().hasHeightForWidth())
        self.Calculator_Measure_Scattering_a_Edit.setSizePolicy(sizePolicy)
        self.Calculator_Measure_Scattering_a_Edit.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_Measure_Scattering_a_Edit.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_Measure_Scattering_a_Edit.setAutoFillBackground(False)
        self.Calculator_Measure_Scattering_a_Edit.setObjectName("Calculator_Measure_Scattering_a_Edit")
        self.gridLayout_9.addWidget(self.Calculator_Measure_Scattering_a_Edit, 2, 5, 1, 1)
        self.Calculator_Measure_Scattering_a_label = QtWidgets.QLabel(self.Calculator_Measure_Scattering_tabWidgetPage)
        self.Calculator_Measure_Scattering_a_label.setObjectName("Calculator_Measure_Scattering_a_label")
        self.gridLayout_9.addWidget(self.Calculator_Measure_Scattering_a_label, 2, 6, 1, 1)
        self.Calculator_Measure_Scattering_d_sca_Edit = QtWidgets.QLineEdit(
            self.Calculator_Measure_Scattering_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_Measure_Scattering_d_sca_Edit.sizePolicy().hasHeightForWidth())
        self.Calculator_Measure_Scattering_d_sca_Edit.setSizePolicy(sizePolicy)
        self.Calculator_Measure_Scattering_d_sca_Edit.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_Measure_Scattering_d_sca_Edit.setMaximumSize(QtCore.QSize(16777215, 19))
        self.Calculator_Measure_Scattering_d_sca_Edit.setAutoFillBackground(False)
        self.Calculator_Measure_Scattering_d_sca_Edit.setObjectName("Calculator_Measure_Scattering_d_sca_Edit")
        self.gridLayout_9.addWidget(self.Calculator_Measure_Scattering_d_sca_Edit, 3, 0, 2, 1)
        self.Calculator_Measure_Scattering_d_sca_label = QtWidgets.QLabel(
            self.Calculator_Measure_Scattering_tabWidgetPage)
        self.Calculator_Measure_Scattering_d_sca_label.setObjectName("Calculator_Measure_Scattering_d_sca_label")
        self.gridLayout_9.addWidget(self.Calculator_Measure_Scattering_d_sca_label, 3, 1, 2, 2)
        self.Calculator_Measure_Scattering_meterial_comboBox = QtWidgets.QComboBox(
            self.Calculator_Measure_Scattering_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.Calculator_Measure_Scattering_meterial_comboBox.sizePolicy().hasHeightForWidth())
        self.Calculator_Measure_Scattering_meterial_comboBox.setSizePolicy(sizePolicy)
        self.Calculator_Measure_Scattering_meterial_comboBox.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_Measure_Scattering_meterial_comboBox.setMaximumSize(QtCore.QSize(16777215, 21))
        self.Calculator_Measure_Scattering_meterial_comboBox.setObjectName(
            "Calculator_Measure_Scattering_meterial_comboBox")
        self.Calculator_Measure_Scattering_meterial_comboBox.addItem("")
        self.Calculator_Measure_Scattering_meterial_comboBox.addItem("")
        self.gridLayout_9.addWidget(self.Calculator_Measure_Scattering_meterial_comboBox, 5, 0, 1, 1)
        self.Calculator_Measure_Scattering_Meterial_label = QtWidgets.QLabel(
            self.Calculator_Measure_Scattering_tabWidgetPage)
        self.Calculator_Measure_Scattering_Meterial_label.setObjectName("Calculator_Measure_Scattering_Meterial_label")
        self.gridLayout_9.addWidget(self.Calculator_Measure_Scattering_Meterial_label, 5, 1, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(20, 17, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_9.addItem(spacerItem1, 6, 0, 1, 1)
        self.Calculator_Measure_Scattering_scrollArea = QtWidgets.QScrollArea(
            self.Calculator_Measure_Scattering_tabWidgetPage)
        self.Calculator_Measure_Scattering_scrollArea.setMinimumSize(QtCore.QSize(0, 140))
        self.Calculator_Measure_Scattering_scrollArea.setWidgetResizable(True)
        self.Calculator_Measure_Scattering_scrollArea.setObjectName("Calculator_Measure_Scattering_scrollArea")
        self.scrollAreaWidgetContents_13 = QtWidgets.QTextBrowser(self.Calculator_Measure_Scattering_tabWidgetPage)
        self.scrollAreaWidgetContents_13.setGeometry(QtCore.QRect(0, 0, 669, 138))
        self.scrollAreaWidgetContents_13.setObjectName("scrollAreaWidgetContents_13")
        self.Calculator_Measure_Scattering_scrollArea.setWidget(self.scrollAreaWidgetContents_13)
        self.gridLayout_9.addWidget(self.Calculator_Measure_Scattering_scrollArea, 7, 0, 1, 7)
        self.Calculator_Measure_Scattering_Exposurerate_label = QtWidgets.QLabel(
            self.Calculator_Measure_Scattering_tabWidgetPage)
        self.Calculator_Measure_Scattering_Exposurerate_label.setObjectName(
            "Calculator_Measure_Scattering_Exposurerate_label")
        self.gridLayout_9.addWidget(self.Calculator_Measure_Scattering_Exposurerate_label, 8, 2, 1, 1,
                                    QtCore.Qt.AlignRight)
        self.Calculator_Measure_Scattering_Exposurerate_TextBrowser = QtWidgets.QTextBrowser(
            self.Calculator_Measure_Scattering_tabWidgetPage)
        self.Calculator_Measure_Scattering_Exposurerate_TextBrowser.setMinimumSize(QtCore.QSize(324, 30))
        self.Calculator_Measure_Scattering_Exposurerate_TextBrowser.setMaximumSize(QtCore.QSize(16777215, 70))
        self.Calculator_Measure_Scattering_Exposurerate_TextBrowser.setObjectName(
            "Calculator_Measure_Scattering_Exposurerate_TextBrowser")
        self.gridLayout_9.addWidget(self.Calculator_Measure_Scattering_Exposurerate_TextBrowser, 8, 3, 1, 4)
        self.Calculator_Measure_Scattering_thickness_label = QtWidgets.QLabel(
            self.Calculator_Measure_Scattering_tabWidgetPage)
        self.Calculator_Measure_Scattering_thickness_label.setObjectName(
            "Calculator_Measure_Scattering_thickness_label")
        self.gridLayout_9.addWidget(self.Calculator_Measure_Scattering_thickness_label, 9, 1, 1, 2,
                                    QtCore.Qt.AlignRight)
        self.Calculator_Measure_Scattering_thickness_textBrowser = QtWidgets.QTextBrowser(
            self.Calculator_Measure_Scattering_tabWidgetPage)
        self.Calculator_Measure_Scattering_thickness_textBrowser.setMinimumSize(QtCore.QSize(0, 30))
        self.Calculator_Measure_Scattering_thickness_textBrowser.setMaximumSize(QtCore.QSize(16777215, 70))
        self.Calculator_Measure_Scattering_thickness_textBrowser.setObjectName(
            "Calculator_Measure_Scattering_thickness_textBrowser")
        self.gridLayout_9.addWidget(self.Calculator_Measure_Scattering_thickness_textBrowser, 9, 3, 1, 4)
        self.Calculator_Measure_Scattering_F_Edit = QtWidgets.QLineEdit(
            self.Calculator_Measure_Scattering_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_Measure_Scattering_F_Edit.sizePolicy().hasHeightForWidth())
        self.Calculator_Measure_Scattering_F_Edit.setSizePolicy(sizePolicy)
        self.Calculator_Measure_Scattering_F_Edit.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_Measure_Scattering_F_Edit.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_Measure_Scattering_F_Edit.setAutoFillBackground(False)
        self.Calculator_Measure_Scattering_F_Edit.setObjectName("Calculator_Measure_Scattering_F_Edit")
        self.gridLayout_9.addWidget(self.Calculator_Measure_Scattering_F_Edit, 3, 5, 1, 1)
        self.Calculator_Measure_Secondary_F_label = QtWidgets.QLabel(self.Calculator_Measure_Scattering_tabWidgetPage)
        self.Calculator_Measure_Secondary_F_label.setObjectName("Calculator_Measure_Secondary_F_label")
        self.gridLayout_9.addWidget(self.Calculator_Measure_Secondary_F_label, 3, 6, 1, 1)
        self.Calculator_Measure_Scattering_Calculate_Button = QtWidgets.QPushButton(
            self.Calculator_Measure_Scattering_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.Calculator_Measure_Scattering_Calculate_Button.sizePolicy().hasHeightForWidth())
        self.Calculator_Measure_Scattering_Calculate_Button.setSizePolicy(sizePolicy)
        self.Calculator_Measure_Scattering_Calculate_Button.setMinimumSize(QtCore.QSize(0, 47))
        self.Calculator_Measure_Scattering_Calculate_Button.setObjectName(
            "Calculator_Measure_Scattering_Calculate_Button")
        self.Calculator_Measure_Scattering_Calculate_Button.clicked.connect(self.Measure_Scattering_Calculator)
        self.gridLayout_9.addWidget(self.Calculator_Measure_Scattering_Calculate_Button, 5, 5, 2, 2)
        self.Calculator_Measure_tabWidget.addTab(self.Calculator_Measure_Scattering_tabWidgetPage, "")
        self.Calculator_Measure_Stray_tabWidgetPage = QtWidgets.QWidget()
        self.Calculator_Measure_Stray_tabWidgetPage.setObjectName("Calculator_Measure_Stray_tabWidgetPage")
        self.gridLayout_16 = QtWidgets.QGridLayout(self.Calculator_Measure_Stray_tabWidgetPage)
        self.gridLayout_16.setObjectName("gridLayout_16")
        self.Calculator_Measure_Stray_E_comboBox = QtWidgets.QComboBox(self.Calculator_Measure_Stray_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_Measure_Stray_E_comboBox.sizePolicy().hasHeightForWidth())
        self.Calculator_Measure_Stray_E_comboBox.setSizePolicy(sizePolicy)
        self.Calculator_Measure_Stray_E_comboBox.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_Measure_Stray_E_comboBox.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_Measure_Stray_E_comboBox.setObjectName("Calculator_Measure_Stray_E_comboBox")
        self.Calculator_Measure_Stray_E_comboBox.addItem("")
        self.Calculator_Measure_Stray_E_comboBox.addItem("")
        self.Calculator_Measure_Stray_E_comboBox.addItem("")
        self.Calculator_Measure_Stray_E_comboBox.addItem("")
        self.Calculator_Measure_Stray_E_comboBox.addItem("")
        self.Calculator_Measure_Stray_E_comboBox.addItem("")
        self.Calculator_Measure_Stray_E_comboBox.addItem("")
        self.Calculator_Measure_Stray_E_comboBox.addItem("")
        self.gridLayout_16.addWidget(self.Calculator_Measure_Stray_E_comboBox, 0, 0, 1, 1)
        self.Calculator_Measure_Stray_E_label = QtWidgets.QLabel(self.Calculator_Measure_Stray_tabWidgetPage)
        self.Calculator_Measure_Stray_E_label.setObjectName("Calculator_Measure_Stray_E_label")
        self.gridLayout_16.addWidget(self.Calculator_Measure_Stray_E_label, 0, 1, 1, 1)
        self.line_12 = QtWidgets.QFrame(self.Calculator_Measure_Stray_tabWidgetPage)
        self.line_12.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_12.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_12.setObjectName("line_12")
        self.gridLayout_16.addWidget(self.line_12, 0, 2, 7, 1)
        self.Calculator_Measure_Stray_meterial_comboBox = QtWidgets.QComboBox(
            self.Calculator_Measure_Stray_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_Measure_Stray_meterial_comboBox.sizePolicy().hasHeightForWidth())
        self.Calculator_Measure_Stray_meterial_comboBox.setSizePolicy(sizePolicy)
        self.Calculator_Measure_Stray_meterial_comboBox.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_Measure_Stray_meterial_comboBox.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_Measure_Stray_meterial_comboBox.setObjectName("Calculator_Measure_Stray_meterial_comboBox")
        self.Calculator_Measure_Stray_meterial_comboBox.addItem("")
        self.Calculator_Measure_Stray_meterial_comboBox.addItem("")
        self.gridLayout_16.addWidget(self.Calculator_Measure_Stray_meterial_comboBox, 3, 0, 1, 1)
        self.Calculator_Measure_Stray_Secondary_barrier_label = QtWidgets.QLabel(
            self.Calculator_Measure_Stray_tabWidgetPage)
        self.Calculator_Measure_Stray_Secondary_barrier_label.setObjectName(
            "Calculator_Measure_Stray_Secondary_barrier_label")
        self.gridLayout_16.addWidget(self.Calculator_Measure_Stray_Secondary_barrier_label, 1, 1, 1, 1)
        self.Calculator_Measure_Stray_Scattering_Barrier_Edit = QtWidgets.QLineEdit(
            self.Calculator_Measure_Stray_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.Calculator_Measure_Stray_Scattering_Barrier_Edit.sizePolicy().hasHeightForWidth())
        self.Calculator_Measure_Stray_Scattering_Barrier_Edit.setSizePolicy(sizePolicy)
        self.Calculator_Measure_Stray_Scattering_Barrier_Edit.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_Measure_Stray_Scattering_Barrier_Edit.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_Measure_Stray_Scattering_Barrier_Edit.setAutoFillBackground(False)
        self.Calculator_Measure_Stray_Scattering_Barrier_Edit.setObjectName(
            "Calculator_Measure_Stray_Scattering_Barrier_Edit")
        self.gridLayout_16.addWidget(self.Calculator_Measure_Stray_Scattering_Barrier_Edit, 2, 0, 1, 1)
        self.Calculator_Measure_Stray_thickness_textBrowser = QtWidgets.QTextBrowser(
            self.Calculator_Measure_Stray_tabWidgetPage)
        self.Calculator_Measure_Stray_thickness_textBrowser.setMinimumSize(QtCore.QSize(30, 30))
        self.Calculator_Measure_Stray_thickness_textBrowser.setMaximumSize(QtCore.QSize(16777215, 70))
        self.Calculator_Measure_Stray_thickness_textBrowser.setObjectName(
            "Calculator_Measure_Stray_thickness_textBrowser")
        self.gridLayout_16.addWidget(self.Calculator_Measure_Stray_thickness_textBrowser, 8, 2, 1, 2)
        self.Calculator_Measure_Stray_Scattering_barrier_label = QtWidgets.QLabel(
            self.Calculator_Measure_Stray_tabWidgetPage)
        self.Calculator_Measure_Stray_Scattering_barrier_label.setObjectName(
            "Calculator_Measure_Stray_Scattering_barrier_label")
        self.gridLayout_16.addWidget(self.Calculator_Measure_Stray_Scattering_barrier_label, 2, 1, 1, 1)
        self.Calculator_Measure_Stray_scrollArea = QtWidgets.QScrollArea(self.Calculator_Measure_Stray_tabWidgetPage)
        self.Calculator_Measure_Stray_scrollArea.setMinimumSize(QtCore.QSize(0, 205))
        self.Calculator_Measure_Stray_scrollArea.setWidgetResizable(True)
        self.Calculator_Measure_Stray_scrollArea.setObjectName("Calculator_Measure_Stray_scrollArea")
        self.scrollAreaWidgetContents_14 = QtWidgets.QTextBrowser(self.Calculator_Measure_Stray_tabWidgetPage)
        self.scrollAreaWidgetContents_14.setGeometry(QtCore.QRect(0, 0, 669, 203))
        self.scrollAreaWidgetContents_14.setObjectName("scrollAreaWidgetContents_14")
        self.Calculator_Measure_Stray_scrollArea.setWidget(self.scrollAreaWidgetContents_14)
        self.gridLayout_16.addWidget(self.Calculator_Measure_Stray_scrollArea, 7, 0, 1, 4)
        self.Calculator_Measure_Stray_Secondary_Barrier_Edit = QtWidgets.QLineEdit(
            self.Calculator_Measure_Stray_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.Calculator_Measure_Stray_Secondary_Barrier_Edit.sizePolicy().hasHeightForWidth())
        self.Calculator_Measure_Stray_Secondary_Barrier_Edit.setSizePolicy(sizePolicy)
        self.Calculator_Measure_Stray_Secondary_Barrier_Edit.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_Measure_Stray_Secondary_Barrier_Edit.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_Measure_Stray_Secondary_Barrier_Edit.setAutoFillBackground(False)
        self.Calculator_Measure_Stray_Secondary_Barrier_Edit.setObjectName(
            "Calculator_Measure_Stray_Secondary_Barrier_Edit")
        self.gridLayout_16.addWidget(self.Calculator_Measure_Stray_Secondary_Barrier_Edit, 1, 0, 1, 1)
        self.Calculator_Measure_Stray_thickness_label = QtWidgets.QLabel(self.Calculator_Measure_Stray_tabWidgetPage)
        self.Calculator_Measure_Stray_thickness_label.setObjectName("Calculator_Measure_Stray_thickness_label")
        self.gridLayout_16.addWidget(self.Calculator_Measure_Stray_thickness_label, 8, 0, 1, 2, QtCore.Qt.AlignRight)
        spacerItem2 = QtWidgets.QSpacerItem(50, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_16.addItem(spacerItem2, 0, 3, 1, 1)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_16.addItem(spacerItem3, 2, 3, 1, 1)
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_16.addItem(spacerItem4, 1, 3, 1, 1)
        self.Calculator_Measure_Stray_Meterial_label = QtWidgets.QLabel(self.Calculator_Measure_Stray_tabWidgetPage)
        self.Calculator_Measure_Stray_Meterial_label.setObjectName("Calculator_Measure_Stray_Meterial_label")
        self.gridLayout_16.addWidget(self.Calculator_Measure_Stray_Meterial_label, 3, 1, 1, 1)
        spacerItem5 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_16.addItem(spacerItem5, 4, 0, 2, 1)
        self.Calculator_Measure_Stray_Calculate_Button = QtWidgets.QPushButton(
            self.Calculator_Measure_Stray_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_Measure_Stray_Calculate_Button.sizePolicy().hasHeightForWidth())
        self.Calculator_Measure_Stray_Calculate_Button.setSizePolicy(sizePolicy)
        self.Calculator_Measure_Stray_Calculate_Button.setMinimumSize(QtCore.QSize(350, 47))
        self.Calculator_Measure_Stray_Calculate_Button.setObjectName("Calculator_Measure_Stray_Calculate_Button")
        self.Calculator_Measure_Stray_Calculate_Button.clicked.connect(self.Measure_Stray_Calculator)
        self.gridLayout_16.addWidget(self.Calculator_Measure_Stray_Calculate_Button, 3, 3, 3, 1)
        self.Calculator_Measure_tabWidget.addTab(self.Calculator_Measure_Stray_tabWidgetPage, "")
        self.gridLayout_3.addWidget(self.Calculator_Measure_tabWidget, 0, 0, 1, 1)
        self.tabWidget.addTab(self.Calculator_measure, "")
        self.Calculator_thoary = QtWidgets.QWidget()
        self.Calculator_thoary.setObjectName("Calculator_thoary")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.Calculator_thoary)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.Calculator_thoary_tabWidget = QtWidgets.QTabWidget(self.Calculator_thoary)
        self.Calculator_thoary_tabWidget.setObjectName("Calculator_thoary_tabWidget")
        self.Calculator_thoary_Primary_beam_tabWidgetPage = QtWidgets.QWidget()
        self.Calculator_thoary_Primary_beam_tabWidgetPage.setObjectName("Calculator_thoary_Primary_beam_tabWidgetPage")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.Calculator_thoary_Primary_beam_tabWidgetPage)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.Calculator_thoary_Primary_T_Edit = QtWidgets.QLineEdit(self.Calculator_thoary_Primary_beam_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_thoary_Primary_T_Edit.sizePolicy().hasHeightForWidth())
        self.Calculator_thoary_Primary_T_Edit.setSizePolicy(sizePolicy)
        self.Calculator_thoary_Primary_T_Edit.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_thoary_Primary_T_Edit.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_thoary_Primary_T_Edit.setAutoFillBackground(False)
        self.Calculator_thoary_Primary_T_Edit.setObjectName("Calculator_thoary_Primary_T_Edit")
        self.gridLayout_4.addWidget(self.Calculator_thoary_Primary_T_Edit, 1, 4, 1, 1)
        self.Calculator_thoary_Primary_E_label = QtWidgets.QLabel(self.Calculator_thoary_Primary_beam_tabWidgetPage)
        self.Calculator_thoary_Primary_E_label.setObjectName("Calculator_thoary_Primary_E_label")
        self.gridLayout_4.addWidget(self.Calculator_thoary_Primary_E_label, 0, 1, 1, 1)
        self.Calculator_thoary_Primary_P_label = QtWidgets.QLabel(self.Calculator_thoary_Primary_beam_tabWidgetPage)
        self.Calculator_thoary_Primary_P_label.setObjectName("Calculator_thoary_Primary_P_label")
        self.gridLayout_4.addWidget(self.Calculator_thoary_Primary_P_label, 1, 1, 1, 2)
        self.Calculator_thoary_Primary_W_label = QtWidgets.QLabel(self.Calculator_thoary_Primary_beam_tabWidgetPage)
        self.Calculator_thoary_Primary_W_label.setObjectName("Calculator_thoary_Primary_W_label")
        self.gridLayout_4.addWidget(self.Calculator_thoary_Primary_W_label, 0, 5, 1, 2)
        self.Calculator_thoary_Primary_T_label = QtWidgets.QLabel(self.Calculator_thoary_Primary_beam_tabWidgetPage)
        self.Calculator_thoary_Primary_T_label.setObjectName("Calculator_thoary_Primary_T_label")
        self.gridLayout_4.addWidget(self.Calculator_thoary_Primary_T_label, 1, 5, 1, 2)
        self.Calculator_thoary_Primary_d_pri_Edit = QtWidgets.QLineEdit(
            self.Calculator_thoary_Primary_beam_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_thoary_Primary_d_pri_Edit.sizePolicy().hasHeightForWidth())
        self.Calculator_thoary_Primary_d_pri_Edit.setSizePolicy(sizePolicy)
        self.Calculator_thoary_Primary_d_pri_Edit.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_thoary_Primary_d_pri_Edit.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_thoary_Primary_d_pri_Edit.setAutoFillBackground(False)
        self.Calculator_thoary_Primary_d_pri_Edit.setObjectName("Calculator_thoary_Primary_d_pri_Edit")
        self.gridLayout_4.addWidget(self.Calculator_thoary_Primary_d_pri_Edit, 2, 0, 1, 1)
        self.Calculator_thoary_Primary_d_pri_label = QtWidgets.QLabel(self.Calculator_thoary_Primary_beam_tabWidgetPage)
        self.Calculator_thoary_Primary_d_pri_label.setObjectName("Calculator_thoary_Primary_d_pri_label")
        self.gridLayout_4.addWidget(self.Calculator_thoary_Primary_d_pri_label, 2, 1, 1, 2)
        self.line = QtWidgets.QFrame(self.Calculator_thoary_Primary_beam_tabWidgetPage)
        self.line.setFrameShape(QtWidgets.QFrame.VLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.gridLayout_4.addWidget(self.line, 0, 3, 5, 1)
        self.Calculator_thoary_Primary_W_Edit = QtWidgets.QLineEdit(self.Calculator_thoary_Primary_beam_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_thoary_Primary_W_Edit.sizePolicy().hasHeightForWidth())
        self.Calculator_thoary_Primary_W_Edit.setSizePolicy(sizePolicy)
        self.Calculator_thoary_Primary_W_Edit.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_thoary_Primary_W_Edit.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_thoary_Primary_W_Edit.setAutoFillBackground(False)
        self.Calculator_thoary_Primary_W_Edit.setObjectName("Calculator_thoary_Primary_W_Edit")
        self.gridLayout_4.addWidget(self.Calculator_thoary_Primary_W_Edit, 0, 4, 1, 1)
        self.Calculator_thoary_Primary_E_comboBox = QtWidgets.QComboBox(
            self.Calculator_thoary_Primary_beam_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_thoary_Primary_E_comboBox.sizePolicy().hasHeightForWidth())
        self.Calculator_thoary_Primary_E_comboBox.setSizePolicy(sizePolicy)
        self.Calculator_thoary_Primary_E_comboBox.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_thoary_Primary_E_comboBox.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_thoary_Primary_E_comboBox.setObjectName("Calculator_thoary_Primary_E_comboBox")
        self.Calculator_thoary_Primary_E_comboBox.addItem("")
        self.Calculator_thoary_Primary_E_comboBox.addItem("")
        self.Calculator_thoary_Primary_E_comboBox.addItem("")
        self.Calculator_thoary_Primary_E_comboBox.addItem("")
        self.Calculator_thoary_Primary_E_comboBox.addItem("")
        self.Calculator_thoary_Primary_E_comboBox.addItem("")
        self.Calculator_thoary_Primary_E_comboBox.addItem("")
        self.Calculator_thoary_Primary_E_comboBox.addItem("")
        self.gridLayout_4.addWidget(self.Calculator_thoary_Primary_E_comboBox, 0, 0, 1, 1)
        self.Calculator_thoary_Primary_P_Edit = QtWidgets.QLineEdit(self.Calculator_thoary_Primary_beam_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_thoary_Primary_P_Edit.sizePolicy().hasHeightForWidth())
        self.Calculator_thoary_Primary_P_Edit.setSizePolicy(sizePolicy)
        self.Calculator_thoary_Primary_P_Edit.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_thoary_Primary_P_Edit.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_thoary_Primary_P_Edit.setAutoFillBackground(False)
        self.Calculator_thoary_Primary_P_Edit.setObjectName("Calculator_thoary_Primary_P_Edit")
        self.gridLayout_4.addWidget(self.Calculator_thoary_Primary_P_Edit, 1, 0, 1, 1)
        self.Calculator_thoary_Primary_Calculate_Button = QtWidgets.QPushButton(
            self.Calculator_thoary_Primary_beam_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_thoary_Primary_Calculate_Button.sizePolicy().hasHeightForWidth())
        self.Calculator_thoary_Primary_Calculate_Button.setSizePolicy(sizePolicy)
        self.Calculator_thoary_Primary_Calculate_Button.setMinimumSize(QtCore.QSize(0, 47))
        self.Calculator_thoary_Primary_Calculate_Button.setObjectName("Calculator_thoary_Primary_Calculate_Button")
        self.Calculator_thoary_Primary_Calculate_Button.clicked.connect(self.thoary_Primary_calculator)
        self.gridLayout_4.addWidget(self.Calculator_thoary_Primary_Calculate_Button, 3, 4, 2, 3)
        self.Calculator_thoary_Primary_U_label = QtWidgets.QLabel(self.Calculator_thoary_Primary_beam_tabWidgetPage)
        self.Calculator_thoary_Primary_U_label.setObjectName("Calculator_thoary_Primary_U_label")
        self.gridLayout_4.addWidget(self.Calculator_thoary_Primary_U_label, 2, 5, 1, 2)
        spacerItem6 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_4.addItem(spacerItem6, 4, 0, 1, 1)
        self.Calculator_thoary_Primary_U_Edit = QtWidgets.QLineEdit(self.Calculator_thoary_Primary_beam_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_thoary_Primary_U_Edit.sizePolicy().hasHeightForWidth())
        self.Calculator_thoary_Primary_U_Edit.setSizePolicy(sizePolicy)
        self.Calculator_thoary_Primary_U_Edit.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_thoary_Primary_U_Edit.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_thoary_Primary_U_Edit.setAutoFillBackground(False)
        self.Calculator_thoary_Primary_U_Edit.setObjectName("Calculator_thoary_Primary_U_Edit")
        self.gridLayout_4.addWidget(self.Calculator_thoary_Primary_U_Edit, 2, 4, 1, 1)
        self.Calculator_thoary_Primary_Meterial_label = QtWidgets.QLabel(
            self.Calculator_thoary_Primary_beam_tabWidgetPage)
        self.Calculator_thoary_Primary_Meterial_label.setObjectName("Calculator_thoary_Primary_Meterial_label")
        self.gridLayout_4.addWidget(self.Calculator_thoary_Primary_Meterial_label, 3, 1, 1, 1)
        self.Calculator_thoary_Primary_meterial_comboBox = QtWidgets.QComboBox(
            self.Calculator_thoary_Primary_beam_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_thoary_Primary_meterial_comboBox.sizePolicy().hasHeightForWidth())
        self.Calculator_thoary_Primary_meterial_comboBox.setSizePolicy(sizePolicy)
        self.Calculator_thoary_Primary_meterial_comboBox.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_thoary_Primary_meterial_comboBox.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_thoary_Primary_meterial_comboBox.setObjectName("Calculator_thoary_Primary_meterial_comboBox")
        self.Calculator_thoary_Primary_meterial_comboBox.addItem("")
        self.Calculator_thoary_Primary_meterial_comboBox.addItem("")
        self.gridLayout_4.addWidget(self.Calculator_thoary_Primary_meterial_comboBox, 3, 0, 1, 1)
        self.Calculator_thoary_Primary_Exposurerate_label = QtWidgets.QLabel(
            self.Calculator_thoary_Primary_beam_tabWidgetPage)
        self.Calculator_thoary_Primary_Exposurerate_label.setObjectName("Calculator_thoary_Primary_Exposurerate_label")
        self.gridLayout_4.addWidget(self.Calculator_thoary_Primary_Exposurerate_label, 6, 0, 1, 3, QtCore.Qt.AlignRight)
        self.Calculator_thoary_Primary_scrollArea = QtWidgets.QScrollArea(
            self.Calculator_thoary_Primary_beam_tabWidgetPage)
        self.Calculator_thoary_Primary_scrollArea.setMinimumSize(QtCore.QSize(0, 169))
        self.Calculator_thoary_Primary_scrollArea.setWidgetResizable(True)
        self.Calculator_thoary_Primary_scrollArea.setObjectName("Calculator_thoary_Primary_scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QTextBrowser(self.Calculator_thoary_Primary_beam_tabWidgetPage)
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 669, 167))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.Calculator_thoary_Primary_scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.gridLayout_4.addWidget(self.Calculator_thoary_Primary_scrollArea, 5, 0, 1, 7)
        self.Calculator_thoary_Primary_thickness_label = QtWidgets.QLabel(
            self.Calculator_thoary_Primary_beam_tabWidgetPage)
        self.Calculator_thoary_Primary_thickness_label.setObjectName("Calculator_thoary_Primary_thickness_label")
        self.gridLayout_4.addWidget(self.Calculator_thoary_Primary_thickness_label, 7, 0, 1, 3, QtCore.Qt.AlignRight)
        self.Calculator_thoary_Primary_thickness_textBrowser = QtWidgets.QTextBrowser(
            self.Calculator_thoary_Primary_beam_tabWidgetPage)
        self.Calculator_thoary_Primary_thickness_textBrowser.setMinimumSize(QtCore.QSize(0, 30))
        self.Calculator_thoary_Primary_thickness_textBrowser.setMaximumSize(QtCore.QSize(16777215, 70))
        self.Calculator_thoary_Primary_thickness_textBrowser.setObjectName(
            "Calculator_thoary_Primary_thickness_textBrowser")
        self.gridLayout_4.addWidget(self.Calculator_thoary_Primary_thickness_textBrowser, 7, 3, 1, 4)
        self.Calculator_thoary_Primary_Exposurerate_textBrowser = QtWidgets.QTextBrowser(
            self.Calculator_thoary_Primary_beam_tabWidgetPage)
        self.Calculator_thoary_Primary_Exposurerate_textBrowser.setMinimumSize(QtCore.QSize(0, 30))
        self.Calculator_thoary_Primary_Exposurerate_textBrowser.setMaximumSize(QtCore.QSize(16777215, 70))
        self.Calculator_thoary_Primary_Exposurerate_textBrowser.setObjectName(
            "Calculator_thoary_Primary_Exposurerate_textBrowser")
        self.gridLayout_4.addWidget(self.Calculator_thoary_Primary_Exposurerate_textBrowser, 6, 3, 1, 4)
        self.Calculator_thoary_tabWidget.addTab(self.Calculator_thoary_Primary_beam_tabWidgetPage, "")
        self.Calculator_thoary_Secondary_beam_tabWidgetPage = QtWidgets.QWidget()
        self.Calculator_thoary_Secondary_beam_tabWidgetPage.setObjectName(
            "Calculator_thoary_Secondary_beam_tabWidgetPage")
        self.gridLayout_8 = QtWidgets.QGridLayout(self.Calculator_thoary_Secondary_beam_tabWidgetPage)
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.Calculator_thoary_Secondary_E_comboBox = QtWidgets.QComboBox(
            self.Calculator_thoary_Secondary_beam_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_thoary_Secondary_E_comboBox.sizePolicy().hasHeightForWidth())
        self.Calculator_thoary_Secondary_E_comboBox.setSizePolicy(sizePolicy)
        self.Calculator_thoary_Secondary_E_comboBox.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_thoary_Secondary_E_comboBox.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_thoary_Secondary_E_comboBox.setObjectName("Calculator_thoary_Secondary_E_comboBox")
        self.Calculator_thoary_Secondary_E_comboBox.addItem("")
        self.Calculator_thoary_Secondary_E_comboBox.addItem("")
        self.Calculator_thoary_Secondary_E_comboBox.addItem("")
        self.Calculator_thoary_Secondary_E_comboBox.addItem("")
        self.Calculator_thoary_Secondary_E_comboBox.addItem("")
        self.Calculator_thoary_Secondary_E_comboBox.addItem("")
        self.Calculator_thoary_Secondary_E_comboBox.addItem("")
        self.Calculator_thoary_Secondary_E_comboBox.addItem("")
        self.gridLayout_8.addWidget(self.Calculator_thoary_Secondary_E_comboBox, 0, 0, 1, 1)
        self.Calculator_thoary_Secondary_E_label = QtWidgets.QLabel(self.Calculator_thoary_Secondary_beam_tabWidgetPage)
        self.Calculator_thoary_Secondary_E_label.setObjectName("Calculator_thoary_Secondary_E_label")
        self.gridLayout_8.addWidget(self.Calculator_thoary_Secondary_E_label, 0, 1, 1, 1)
        self.line_6 = QtWidgets.QFrame(self.Calculator_thoary_Secondary_beam_tabWidgetPage)
        self.line_6.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_6.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_6.setObjectName("line_6")
        self.gridLayout_8.addWidget(self.line_6, 0, 2, 5, 1)
        self.Calculator_thoary_Secondary_W_Edit = QtWidgets.QLineEdit(
            self.Calculator_thoary_Secondary_beam_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_thoary_Secondary_W_Edit.sizePolicy().hasHeightForWidth())
        self.Calculator_thoary_Secondary_W_Edit.setSizePolicy(sizePolicy)
        self.Calculator_thoary_Secondary_W_Edit.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_thoary_Secondary_W_Edit.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_thoary_Secondary_W_Edit.setAutoFillBackground(False)
        self.Calculator_thoary_Secondary_W_Edit.setObjectName("Calculator_thoary_Secondary_W_Edit")
        self.gridLayout_8.addWidget(self.Calculator_thoary_Secondary_W_Edit, 0, 3, 1, 1)
        self.Calculator_thoary_Secondary_W_label = QtWidgets.QLabel(self.Calculator_thoary_Secondary_beam_tabWidgetPage)
        self.Calculator_thoary_Secondary_W_label.setObjectName("Calculator_thoary_Secondary_W_label")
        self.gridLayout_8.addWidget(self.Calculator_thoary_Secondary_W_label, 0, 4, 1, 1)
        self.Calculator_thoary_Secondary_P_Edit = QtWidgets.QLineEdit(
            self.Calculator_thoary_Secondary_beam_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_thoary_Secondary_P_Edit.sizePolicy().hasHeightForWidth())
        self.Calculator_thoary_Secondary_P_Edit.setSizePolicy(sizePolicy)
        self.Calculator_thoary_Secondary_P_Edit.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_thoary_Secondary_P_Edit.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_thoary_Secondary_P_Edit.setAutoFillBackground(False)
        self.Calculator_thoary_Secondary_P_Edit.setObjectName("Calculator_thoary_Secondary_P_Edit")
        self.gridLayout_8.addWidget(self.Calculator_thoary_Secondary_P_Edit, 1, 0, 1, 1)
        self.Calculator_thoary_Secondary_P_label = QtWidgets.QLabel(self.Calculator_thoary_Secondary_beam_tabWidgetPage)
        self.Calculator_thoary_Secondary_P_label.setObjectName("Calculator_thoary_Secondary_P_label")
        self.gridLayout_8.addWidget(self.Calculator_thoary_Secondary_P_label, 1, 1, 1, 1)
        self.Calculator_thoary_Secondary_T_Edit = QtWidgets.QLineEdit(
            self.Calculator_thoary_Secondary_beam_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_thoary_Secondary_T_Edit.sizePolicy().hasHeightForWidth())
        self.Calculator_thoary_Secondary_T_Edit.setSizePolicy(sizePolicy)
        self.Calculator_thoary_Secondary_T_Edit.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_thoary_Secondary_T_Edit.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_thoary_Secondary_T_Edit.setAutoFillBackground(False)
        self.Calculator_thoary_Secondary_T_Edit.setObjectName("Calculator_thoary_Secondary_T_Edit")
        self.gridLayout_8.addWidget(self.Calculator_thoary_Secondary_T_Edit, 1, 3, 1, 1)
        self.Calculator_thoary_Secondary_T_label = QtWidgets.QLabel(self.Calculator_thoary_Secondary_beam_tabWidgetPage)
        self.Calculator_thoary_Secondary_T_label.setObjectName("Calculator_thoary_Secondary_T_label")
        self.gridLayout_8.addWidget(self.Calculator_thoary_Secondary_T_label, 1, 4, 1, 1)
        self.Calculator_thoary_Secondary_d_sec_Edit = QtWidgets.QLineEdit(
            self.Calculator_thoary_Secondary_beam_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_thoary_Secondary_d_sec_Edit.sizePolicy().hasHeightForWidth())
        self.Calculator_thoary_Secondary_d_sec_Edit.setSizePolicy(sizePolicy)
        self.Calculator_thoary_Secondary_d_sec_Edit.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_thoary_Secondary_d_sec_Edit.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_thoary_Secondary_d_sec_Edit.setAutoFillBackground(False)
        self.Calculator_thoary_Secondary_d_sec_Edit.setObjectName("Calculator_thoary_Secondary_d_sec_Edit")
        self.gridLayout_8.addWidget(self.Calculator_thoary_Secondary_d_sec_Edit, 2, 0, 1, 1)
        self.Calculator_thoary_Secondary_d_sec_label = QtWidgets.QLabel(
            self.Calculator_thoary_Secondary_beam_tabWidgetPage)
        self.Calculator_thoary_Secondary_d_sec_label.setObjectName("Calculator_thoary_Secondary_d_sec_label")
        self.gridLayout_8.addWidget(self.Calculator_thoary_Secondary_d_sec_label, 2, 1, 1, 1)
        self.Calculator_thoary_Secondary_I_Edit = QtWidgets.QLineEdit(
            self.Calculator_thoary_Secondary_beam_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_thoary_Secondary_I_Edit.sizePolicy().hasHeightForWidth())
        self.Calculator_thoary_Secondary_I_Edit.setSizePolicy(sizePolicy)
        self.Calculator_thoary_Secondary_I_Edit.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_thoary_Secondary_I_Edit.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_thoary_Secondary_I_Edit.setAutoFillBackground(False)
        self.Calculator_thoary_Secondary_I_Edit.setObjectName("Calculator_thoary_Secondary_I_Edit")
        self.gridLayout_8.addWidget(self.Calculator_thoary_Secondary_I_Edit, 2, 3, 1, 1)
        self.Calculator_thoary_Secondary_I_label = QtWidgets.QLabel(self.Calculator_thoary_Secondary_beam_tabWidgetPage)
        self.Calculator_thoary_Secondary_I_label.setObjectName("Calculator_thoary_Secondary_I_label")
        self.gridLayout_8.addWidget(self.Calculator_thoary_Secondary_I_label, 2, 4, 1, 1)
        self.Calculator_thoary_Secondary_Calculate_Button = QtWidgets.QPushButton(
            self.Calculator_thoary_Secondary_beam_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_thoary_Secondary_Calculate_Button.sizePolicy().hasHeightForWidth())
        self.Calculator_thoary_Secondary_Calculate_Button.setSizePolicy(sizePolicy)
        self.Calculator_thoary_Secondary_Calculate_Button.setMinimumSize(QtCore.QSize(0, 47))
        self.Calculator_thoary_Secondary_Calculate_Button.setObjectName("Calculator_thoary_Secondary_Calculate_Button")
        self.Calculator_thoary_Secondary_Calculate_Button.clicked.connect(self.thoary_Secondary_calculator)
        self.gridLayout_8.addWidget(self.Calculator_thoary_Secondary_Calculate_Button, 3, 3, 2, 2)
        self.Calculator_thoary_Secondary_scrollArea = QtWidgets.QScrollArea(
            self.Calculator_thoary_Secondary_beam_tabWidgetPage)
        self.Calculator_thoary_Secondary_scrollArea.setMinimumSize(QtCore.QSize(0, 169))
        self.Calculator_thoary_Secondary_scrollArea.setWidgetResizable(True)
        self.Calculator_thoary_Secondary_scrollArea.setObjectName("Calculator_thoary_Secondary_scrollArea")
        self.scrollAreaWidgetContents_7 = QtWidgets.QTextBrowser(self.Calculator_thoary_Secondary_beam_tabWidgetPage)
        self.scrollAreaWidgetContents_7.setGeometry(QtCore.QRect(0, 0, 669, 167))
        self.scrollAreaWidgetContents_7.setObjectName("scrollAreaWidgetContents_7")
        self.Calculator_thoary_Secondary_scrollArea.setWidget(self.scrollAreaWidgetContents_7)
        self.gridLayout_8.addWidget(self.Calculator_thoary_Secondary_scrollArea, 5, 0, 1, 5)
        self.Calculator_thoary_Secondary_Exposurerate_label = QtWidgets.QLabel(
            self.Calculator_thoary_Secondary_beam_tabWidgetPage)
        self.Calculator_thoary_Secondary_Exposurerate_label.setObjectName(
            "Calculator_thoary_Secondary_Exposurerate_label")
        self.gridLayout_8.addWidget(self.Calculator_thoary_Secondary_Exposurerate_label, 6, 1, 1, 1,
                                    QtCore.Qt.AlignRight)
        self.Calculator_thoary_Secondary_Exposurerate_TextBrowser = QtWidgets.QTextBrowser(
            self.Calculator_thoary_Secondary_beam_tabWidgetPage)
        self.Calculator_thoary_Secondary_Exposurerate_TextBrowser.setMinimumSize(QtCore.QSize(0, 30))
        self.Calculator_thoary_Secondary_Exposurerate_TextBrowser.setMaximumSize(QtCore.QSize(16777215, 70))
        self.Calculator_thoary_Secondary_Exposurerate_TextBrowser.setObjectName(
            "Calculator_thoary_Secondary_Exposurerate_TextBrowser")
        self.gridLayout_8.addWidget(self.Calculator_thoary_Secondary_Exposurerate_TextBrowser, 6, 2, 1, 3)
        self.Calculator_thoary_Secondary_thickness_label = QtWidgets.QLabel(
            self.Calculator_thoary_Secondary_beam_tabWidgetPage)
        self.Calculator_thoary_Secondary_thickness_label.setObjectName("Calculator_thoary_Secondary_thickness_label")
        self.gridLayout_8.addWidget(self.Calculator_thoary_Secondary_thickness_label, 7, 1, 1, 1, QtCore.Qt.AlignRight)
        self.Calculator_thoary_Secondary_thickness_textBrowser = QtWidgets.QTextBrowser(
            self.Calculator_thoary_Secondary_beam_tabWidgetPage)
        self.Calculator_thoary_Secondary_thickness_textBrowser.setMinimumSize(QtCore.QSize(0, 30))
        self.Calculator_thoary_Secondary_thickness_textBrowser.setMaximumSize(QtCore.QSize(16777215, 70))
        self.Calculator_thoary_Secondary_thickness_textBrowser.setObjectName(
            "Calculator_thoary_Secondary_thickness_textBrowser")
        self.gridLayout_8.addWidget(self.Calculator_thoary_Secondary_thickness_textBrowser, 7, 2, 1, 3)
        self.Calculator_thoary_Secondary_meterial_comboBox = QtWidgets.QComboBox(
            self.Calculator_thoary_Secondary_beam_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.Calculator_thoary_Secondary_meterial_comboBox.sizePolicy().hasHeightForWidth())
        self.Calculator_thoary_Secondary_meterial_comboBox.setSizePolicy(sizePolicy)
        self.Calculator_thoary_Secondary_meterial_comboBox.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_thoary_Secondary_meterial_comboBox.setMaximumSize(QtCore.QSize(16777215, 21))
        self.Calculator_thoary_Secondary_meterial_comboBox.setObjectName(
            "Calculator_thoary_Secondary_meterial_comboBox")
        self.Calculator_thoary_Secondary_meterial_comboBox.addItem("")
        self.Calculator_thoary_Secondary_meterial_comboBox.addItem("")
        self.gridLayout_8.addWidget(self.Calculator_thoary_Secondary_meterial_comboBox, 3, 0, 1, 1)
        self.Calculator_thoary_Secondary_Meterial_label = QtWidgets.QLabel(
            self.Calculator_thoary_Secondary_beam_tabWidgetPage)
        self.Calculator_thoary_Secondary_Meterial_label.setObjectName("Calculator_thoary_Secondary_Meterial_label")
        self.gridLayout_8.addWidget(self.Calculator_thoary_Secondary_Meterial_label, 3, 1, 1, 1)
        self.Calculator_thoary_tabWidget.addTab(self.Calculator_thoary_Secondary_beam_tabWidgetPage, "")
        self.Calculator_thoary_Scattering_beam_tabWidgetPage = QtWidgets.QWidget()
        self.Calculator_thoary_Scattering_beam_tabWidgetPage.setObjectName(
            "Calculator_thoary_Scattering_beam_tabWidgetPage")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.Calculator_thoary_Scattering_beam_tabWidgetPage)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.Calculator_thoary_Scattering_E_comboBox = QtWidgets.QComboBox(
            self.Calculator_thoary_Scattering_beam_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_thoary_Scattering_E_comboBox.sizePolicy().hasHeightForWidth())
        self.Calculator_thoary_Scattering_E_comboBox.setSizePolicy(sizePolicy)
        self.Calculator_thoary_Scattering_E_comboBox.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_thoary_Scattering_E_comboBox.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_thoary_Scattering_E_comboBox.setObjectName("Calculator_thoary_Scattering_E_comboBox")
        self.Calculator_thoary_Scattering_E_comboBox.addItem("")
        self.Calculator_thoary_Scattering_E_comboBox.addItem("")
        self.Calculator_thoary_Scattering_E_comboBox.addItem("")
        self.Calculator_thoary_Scattering_E_comboBox.addItem("")
        self.Calculator_thoary_Scattering_E_comboBox.addItem("")
        self.Calculator_thoary_Scattering_E_comboBox.addItem("")
        self.Calculator_thoary_Scattering_E_comboBox.addItem("")
        self.Calculator_thoary_Scattering_E_comboBox.addItem("")
        self.gridLayout_5.addWidget(self.Calculator_thoary_Scattering_E_comboBox, 0, 0, 1, 1)
        self.Calculator_thoary_Scattering_E_label = QtWidgets.QLabel(
            self.Calculator_thoary_Scattering_beam_tabWidgetPage)
        self.Calculator_thoary_Scattering_E_label.setObjectName("Calculator_thoary_Scattering_E_label")
        self.gridLayout_5.addWidget(self.Calculator_thoary_Scattering_E_label, 0, 1, 1, 2)
        self.line_4 = QtWidgets.QFrame(self.Calculator_thoary_Scattering_beam_tabWidgetPage)
        self.line_4.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_4.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_4.setObjectName("line_4")
        self.gridLayout_5.addWidget(self.line_4, 0, 3, 6, 1)
        self.Calculator_thoary_Scattering_W_Edit = QtWidgets.QLineEdit(
            self.Calculator_thoary_Scattering_beam_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_thoary_Scattering_W_Edit.sizePolicy().hasHeightForWidth())
        self.Calculator_thoary_Scattering_W_Edit.setSizePolicy(sizePolicy)
        self.Calculator_thoary_Scattering_W_Edit.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_thoary_Scattering_W_Edit.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_thoary_Scattering_W_Edit.setAutoFillBackground(False)
        self.Calculator_thoary_Scattering_W_Edit.setObjectName("Calculator_thoary_Scattering_W_Edit")
        self.gridLayout_5.addWidget(self.Calculator_thoary_Scattering_W_Edit, 0, 4, 1, 1)
        self.Calculator_thoary_Scattering_W_label = QtWidgets.QLabel(
            self.Calculator_thoary_Scattering_beam_tabWidgetPage)
        self.Calculator_thoary_Scattering_W_label.setObjectName("Calculator_thoary_Scattering_W_label")
        self.gridLayout_5.addWidget(self.Calculator_thoary_Scattering_W_label, 0, 5, 1, 1)
        self.Calculator_thoary_Scattering_P_Edit = QtWidgets.QLineEdit(
            self.Calculator_thoary_Scattering_beam_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_thoary_Scattering_P_Edit.sizePolicy().hasHeightForWidth())
        self.Calculator_thoary_Scattering_P_Edit.setSizePolicy(sizePolicy)
        self.Calculator_thoary_Scattering_P_Edit.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_thoary_Scattering_P_Edit.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_thoary_Scattering_P_Edit.setAutoFillBackground(False)
        self.Calculator_thoary_Scattering_P_Edit.setObjectName("Calculator_thoary_Scattering_P_Edit")
        self.gridLayout_5.addWidget(self.Calculator_thoary_Scattering_P_Edit, 1, 0, 1, 1)
        self.Calculator_thoary_Scattering_P_label = QtWidgets.QLabel(
            self.Calculator_thoary_Scattering_beam_tabWidgetPage)
        self.Calculator_thoary_Scattering_P_label.setObjectName("Calculator_thoary_Scattering_P_label")
        self.gridLayout_5.addWidget(self.Calculator_thoary_Scattering_P_label, 1, 1, 1, 2)
        self.Calculator_thoary_Scattering_T_Edit = QtWidgets.QLineEdit(
            self.Calculator_thoary_Scattering_beam_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_thoary_Scattering_T_Edit.sizePolicy().hasHeightForWidth())
        self.Calculator_thoary_Scattering_T_Edit.setSizePolicy(sizePolicy)
        self.Calculator_thoary_Scattering_T_Edit.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_thoary_Scattering_T_Edit.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_thoary_Scattering_T_Edit.setAutoFillBackground(False)
        self.Calculator_thoary_Scattering_T_Edit.setObjectName("Calculator_thoary_Scattering_T_Edit")
        self.gridLayout_5.addWidget(self.Calculator_thoary_Scattering_T_Edit, 1, 4, 1, 1)
        self.Calculator_thoary_Scattering_T_label = QtWidgets.QLabel(
            self.Calculator_thoary_Scattering_beam_tabWidgetPage)
        self.Calculator_thoary_Scattering_T_label.setObjectName("Calculator_thoary_Scattering_T_label")
        self.gridLayout_5.addWidget(self.Calculator_thoary_Scattering_T_label, 1, 5, 1, 1)
        self.Calculator_thoary_Scattering_d_sec_Edit = QtWidgets.QLineEdit(
            self.Calculator_thoary_Scattering_beam_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_thoary_Scattering_d_sec_Edit.sizePolicy().hasHeightForWidth())
        self.Calculator_thoary_Scattering_d_sec_Edit.setSizePolicy(sizePolicy)
        self.Calculator_thoary_Scattering_d_sec_Edit.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_thoary_Scattering_d_sec_Edit.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_thoary_Scattering_d_sec_Edit.setAutoFillBackground(False)
        self.Calculator_thoary_Scattering_d_sec_Edit.setObjectName("Calculator_thoary_Scattering_d_sec_Edit")
        self.gridLayout_5.addWidget(self.Calculator_thoary_Scattering_d_sec_Edit, 2, 0, 1, 1)
        self.Calculator_thoary_Scattering_d_sec_label = QtWidgets.QLabel(
            self.Calculator_thoary_Scattering_beam_tabWidgetPage)
        self.Calculator_thoary_Scattering_d_sec_label.setObjectName("Calculator_thoary_Scattering_d_sec_label")
        self.gridLayout_5.addWidget(self.Calculator_thoary_Scattering_d_sec_label, 2, 1, 1, 2)
        self.Calculator_thoary_Scattering_a_Edit = QtWidgets.QLineEdit(
            self.Calculator_thoary_Scattering_beam_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_thoary_Scattering_a_Edit.sizePolicy().hasHeightForWidth())
        self.Calculator_thoary_Scattering_a_Edit.setSizePolicy(sizePolicy)
        self.Calculator_thoary_Scattering_a_Edit.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_thoary_Scattering_a_Edit.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_thoary_Scattering_a_Edit.setAutoFillBackground(False)
        self.Calculator_thoary_Scattering_a_Edit.setObjectName("Calculator_thoary_Scattering_a_Edit")
        self.gridLayout_5.addWidget(self.Calculator_thoary_Scattering_a_Edit, 2, 4, 1, 1)
        self.Calculator_thoary_Scattering_a_label = QtWidgets.QLabel(
            self.Calculator_thoary_Scattering_beam_tabWidgetPage)
        self.Calculator_thoary_Scattering_a_label.setObjectName("Calculator_thoary_Scattering_a_label")
        self.gridLayout_5.addWidget(self.Calculator_thoary_Scattering_a_label, 2, 5, 1, 1)
        self.Calculator_thoary_Scattering_d_sca_Edit = QtWidgets.QLineEdit(
            self.Calculator_thoary_Scattering_beam_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_thoary_Scattering_d_sca_Edit.sizePolicy().hasHeightForWidth())
        self.Calculator_thoary_Scattering_d_sca_Edit.setSizePolicy(sizePolicy)
        self.Calculator_thoary_Scattering_d_sca_Edit.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_thoary_Scattering_d_sca_Edit.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_thoary_Scattering_d_sca_Edit.setAutoFillBackground(False)
        self.Calculator_thoary_Scattering_d_sca_Edit.setObjectName("Calculator_thoary_Scattering_d_sca_Edit")
        self.gridLayout_5.addWidget(self.Calculator_thoary_Scattering_d_sca_Edit, 3, 0, 1, 1)
        self.Calculator_thoary_Scattering_d_sca_label = QtWidgets.QLabel(
            self.Calculator_thoary_Scattering_beam_tabWidgetPage)
        self.Calculator_thoary_Scattering_d_sca_label.setObjectName("Calculator_thoary_Scattering_d_sca_label")
        self.gridLayout_5.addWidget(self.Calculator_thoary_Scattering_d_sca_label, 3, 1, 1, 2)
        self.Calculator_thoary_Scattering_F_Edit = QtWidgets.QLineEdit(
            self.Calculator_thoary_Scattering_beam_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_thoary_Scattering_F_Edit.sizePolicy().hasHeightForWidth())
        self.Calculator_thoary_Scattering_F_Edit.setSizePolicy(sizePolicy)
        self.Calculator_thoary_Scattering_F_Edit.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_thoary_Scattering_F_Edit.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_thoary_Scattering_F_Edit.setAutoFillBackground(False)
        self.Calculator_thoary_Scattering_F_Edit.setObjectName("Calculator_thoary_Scattering_F_Edit")
        self.gridLayout_5.addWidget(self.Calculator_thoary_Scattering_F_Edit, 3, 4, 1, 1)
        self.Calculator_thoary_Secondary_F_label = QtWidgets.QLabel(
            self.Calculator_thoary_Scattering_beam_tabWidgetPage)
        self.Calculator_thoary_Secondary_F_label.setObjectName("Calculator_thoary_Secondary_F_label")
        self.gridLayout_5.addWidget(self.Calculator_thoary_Secondary_F_label, 3, 5, 1, 1)
        self.Calculator_thoary_Scattering_meterial_comboBox = QtWidgets.QComboBox(
            self.Calculator_thoary_Scattering_beam_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.Calculator_thoary_Scattering_meterial_comboBox.sizePolicy().hasHeightForWidth())
        self.Calculator_thoary_Scattering_meterial_comboBox.setSizePolicy(sizePolicy)
        self.Calculator_thoary_Scattering_meterial_comboBox.setMinimumSize(QtCore.QSize(0, 21))
        self.Calculator_thoary_Scattering_meterial_comboBox.setMaximumSize(QtCore.QSize(16777215, 21))
        self.Calculator_thoary_Scattering_meterial_comboBox.setObjectName(
            "Calculator_thoary_Scattering_meterial_comboBox")
        self.Calculator_thoary_Scattering_meterial_comboBox.addItem("")
        self.Calculator_thoary_Scattering_meterial_comboBox.addItem("")
        self.gridLayout_5.addWidget(self.Calculator_thoary_Scattering_meterial_comboBox, 4, 0, 1, 1)
        self.Calculator_thoary_Scattering_Meterial_label = QtWidgets.QLabel(
            self.Calculator_thoary_Scattering_beam_tabWidgetPage)
        self.Calculator_thoary_Scattering_Meterial_label.setObjectName("Calculator_thoary_Scattering_Meterial_label")
        self.gridLayout_5.addWidget(self.Calculator_thoary_Scattering_Meterial_label, 4, 1, 1, 1)
        self.Calculator_thoary_Scattering_Calculate_Button = QtWidgets.QPushButton(
            self.Calculator_thoary_Scattering_beam_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.Calculator_thoary_Scattering_Calculate_Button.sizePolicy().hasHeightForWidth())
        self.Calculator_thoary_Scattering_Calculate_Button.setSizePolicy(sizePolicy)
        self.Calculator_thoary_Scattering_Calculate_Button.setMinimumSize(QtCore.QSize(0, 47))
        self.Calculator_thoary_Scattering_Calculate_Button.setObjectName(
            "Calculator_thoary_Scattering_Calculate_Button")
        self.Calculator_thoary_Scattering_Calculate_Button.clicked.connect(self.thaory_Scattering_calculator)
        self.gridLayout_5.addWidget(self.Calculator_thoary_Scattering_Calculate_Button, 4, 4, 2, 2)
        spacerItem7 = QtWidgets.QSpacerItem(20, 17, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_5.addItem(spacerItem7, 5, 0, 1, 1)
        self.Calculator_thoary_Scattering_scrollArea = QtWidgets.QScrollArea(
            self.Calculator_thoary_Scattering_beam_tabWidgetPage)
        self.Calculator_thoary_Scattering_scrollArea.setMinimumSize(QtCore.QSize(0, 140))
        self.Calculator_thoary_Scattering_scrollArea.setWidgetResizable(True)
        self.Calculator_thoary_Scattering_scrollArea.setObjectName("Calculator_thoary_Scattering_scrollArea")
        self.scrollAreaWidgetContents_3 = QtWidgets.QTextBrowser(self.Calculator_thoary_Scattering_beam_tabWidgetPage)
        self.scrollAreaWidgetContents_3.setGeometry(QtCore.QRect(0, 0, 669, 138))
        self.scrollAreaWidgetContents_3.setObjectName("scrollAreaWidgetContents_3")
        self.Calculator_thoary_Scattering_scrollArea.setWidget(self.scrollAreaWidgetContents_3)
        self.gridLayout_5.addWidget(self.Calculator_thoary_Scattering_scrollArea, 6, 0, 1, 6)
        self.Calculator_thoary_Scattering_Exposurerate_label = QtWidgets.QLabel(
            self.Calculator_thoary_Scattering_beam_tabWidgetPage)
        self.Calculator_thoary_Scattering_Exposurerate_label.setObjectName(
            "Calculator_thoary_Scattering_Exposurerate_label")
        self.gridLayout_5.addWidget(self.Calculator_thoary_Scattering_Exposurerate_label, 7, 2, 1, 1,
                                    QtCore.Qt.AlignRight)
        self.Calculator_thoary_Scattering_Exposurerate_TextBrowser = QtWidgets.QTextBrowser(
            self.Calculator_thoary_Scattering_beam_tabWidgetPage)
        self.Calculator_thoary_Scattering_Exposurerate_TextBrowser.setMinimumSize(QtCore.QSize(0, 30))
        self.Calculator_thoary_Scattering_Exposurerate_TextBrowser.setMaximumSize(QtCore.QSize(16777215, 70))
        self.Calculator_thoary_Scattering_Exposurerate_TextBrowser.setObjectName(
            "Calculator_thoary_Scattering_Exposurerate_TextBrowser")
        self.gridLayout_5.addWidget(self.Calculator_thoary_Scattering_Exposurerate_TextBrowser, 7, 3, 1, 3)
        self.Calculator_thoary_Scattering_thickness_label = QtWidgets.QLabel(
            self.Calculator_thoary_Scattering_beam_tabWidgetPage)
        self.Calculator_thoary_Scattering_thickness_label.setObjectName("Calculator_thoary_Scattering_thickness_label")
        self.gridLayout_5.addWidget(self.Calculator_thoary_Scattering_thickness_label, 8, 1, 1, 2, QtCore.Qt.AlignRight)
        self.Calculator_thoary_Scattering_thickness_textBrowser = QtWidgets.QTextBrowser(
            self.Calculator_thoary_Scattering_beam_tabWidgetPage)
        self.Calculator_thoary_Scattering_thickness_textBrowser.setMinimumSize(QtCore.QSize(0, 30))
        self.Calculator_thoary_Scattering_thickness_textBrowser.setMaximumSize(QtCore.QSize(16777215, 70))
        self.Calculator_thoary_Scattering_thickness_textBrowser.setObjectName(
            "Calculator_thoary_Scattering_thickness_textBrowser")
        self.gridLayout_5.addWidget(self.Calculator_thoary_Scattering_thickness_textBrowser, 8, 3, 1, 3)
        self.Calculator_thoary_tabWidget.addTab(self.Calculator_thoary_Scattering_beam_tabWidgetPage, "")
        self.Calculator_thoary_Stray_beam_tabWidgetPage = QtWidgets.QWidget()
        self.Calculator_thoary_Stray_beam_tabWidgetPage.setObjectName("Calculator_thoary_Stray_beam_tabWidgetPage")
        self.gridLayout_7 = QtWidgets.QGridLayout(self.Calculator_thoary_Stray_beam_tabWidgetPage)
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.Calculator_thoary_Stray_E_comboBox = QtWidgets.QComboBox(self.Calculator_thoary_Stray_beam_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_thoary_Stray_E_comboBox.sizePolicy().hasHeightForWidth())
        self.Calculator_thoary_Stray_E_comboBox.setSizePolicy(sizePolicy)
        self.Calculator_thoary_Stray_E_comboBox.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_thoary_Stray_E_comboBox.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_thoary_Stray_E_comboBox.setObjectName("Calculator_thoary_Stray_E_comboBox")
        self.Calculator_thoary_Stray_E_comboBox.addItem("")
        self.Calculator_thoary_Stray_E_comboBox.addItem("")
        self.Calculator_thoary_Stray_E_comboBox.addItem("")
        self.Calculator_thoary_Stray_E_comboBox.addItem("")
        self.Calculator_thoary_Stray_E_comboBox.addItem("")
        self.Calculator_thoary_Stray_E_comboBox.addItem("")
        self.Calculator_thoary_Stray_E_comboBox.addItem("")
        self.Calculator_thoary_Stray_E_comboBox.addItem("")
        self.gridLayout_7.addWidget(self.Calculator_thoary_Stray_E_comboBox, 0, 0, 1, 1)
        self.Calculator_thoary_Stray_E_label = QtWidgets.QLabel(self.Calculator_thoary_Stray_beam_tabWidgetPage)
        self.Calculator_thoary_Stray_E_label.setObjectName("Calculator_thoary_Stray_E_label")
        self.gridLayout_7.addWidget(self.Calculator_thoary_Stray_E_label, 0, 1, 1, 1)
        self.line_5 = QtWidgets.QFrame(self.Calculator_thoary_Stray_beam_tabWidgetPage)
        self.line_5.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_5.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_5.setObjectName("line_5")
        self.gridLayout_7.addWidget(self.line_5, 0, 2, 7, 1)
        self.Calculator_thoary_Stray_meterial_comboBox = QtWidgets.QComboBox(
            self.Calculator_thoary_Stray_beam_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_thoary_Stray_meterial_comboBox.sizePolicy().hasHeightForWidth())
        self.Calculator_thoary_Stray_meterial_comboBox.setSizePolicy(sizePolicy)
        self.Calculator_thoary_Stray_meterial_comboBox.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_thoary_Stray_meterial_comboBox.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_thoary_Stray_meterial_comboBox.setObjectName("Calculator_thoary_Stray_meterial_comboBox")
        self.Calculator_thoary_Stray_meterial_comboBox.addItem("")
        self.Calculator_thoary_Stray_meterial_comboBox.addItem("")
        self.gridLayout_7.addWidget(self.Calculator_thoary_Stray_meterial_comboBox, 3, 0, 1, 1)
        self.Calculator_thoary_Stray_Secondary_Barrier_label = QtWidgets.QLabel(
            self.Calculator_thoary_Stray_beam_tabWidgetPage)
        self.Calculator_thoary_Stray_Secondary_Barrier_label.setObjectName(
            "Calculator_thoary_Stray_Secondary_Barrier_label")
        self.gridLayout_7.addWidget(self.Calculator_thoary_Stray_Secondary_Barrier_label, 1, 1, 1, 1)
        self.Calculator_thoary_Stray_Scattering_Barrier_Edit = QtWidgets.QLineEdit(
            self.Calculator_thoary_Stray_beam_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.Calculator_thoary_Stray_Scattering_Barrier_Edit.sizePolicy().hasHeightForWidth())
        self.Calculator_thoary_Stray_Scattering_Barrier_Edit.setSizePolicy(sizePolicy)
        self.Calculator_thoary_Stray_Scattering_Barrier_Edit.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_thoary_Stray_Scattering_Barrier_Edit.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_thoary_Stray_Scattering_Barrier_Edit.setAutoFillBackground(False)
        self.Calculator_thoary_Stray_Scattering_Barrier_Edit.setObjectName(
            "Calculator_thoary_Stray_Scattering_Barrier_Edit")
        self.gridLayout_7.addWidget(self.Calculator_thoary_Stray_Scattering_Barrier_Edit, 2, 0, 1, 1)
        self.Calculator_thoary_Stray_thickness_textBrowser = QtWidgets.QTextBrowser(
            self.Calculator_thoary_Stray_beam_tabWidgetPage)
        self.Calculator_thoary_Stray_thickness_textBrowser.setMinimumSize(QtCore.QSize(30, 30))
        self.Calculator_thoary_Stray_thickness_textBrowser.setMaximumSize(QtCore.QSize(16777215, 70))
        self.Calculator_thoary_Stray_thickness_textBrowser.setObjectName(
            "Calculator_thoary_Stray_thickness_textBrowser")
        self.gridLayout_7.addWidget(self.Calculator_thoary_Stray_thickness_textBrowser, 8, 2, 1, 2)
        self.Calculator_thoary_Stray_Scattering_Barrier_label = QtWidgets.QLabel(
            self.Calculator_thoary_Stray_beam_tabWidgetPage)
        self.Calculator_thoary_Stray_Scattering_Barrier_label.setObjectName(
            "Calculator_thoary_Stray_Scattering_Barrier_label")
        self.gridLayout_7.addWidget(self.Calculator_thoary_Stray_Scattering_Barrier_label, 2, 1, 1, 1)
        self.Calculator_thoary_Stray_scrollArea = QtWidgets.QScrollArea(self.Calculator_thoary_Stray_beam_tabWidgetPage)
        self.Calculator_thoary_Stray_scrollArea.setMinimumSize(QtCore.QSize(0, 205))
        self.Calculator_thoary_Stray_scrollArea.setWidgetResizable(True)
        self.Calculator_thoary_Stray_scrollArea.setObjectName("Calculator_thoary_Stray_scrollArea")
        self.scrollAreaWidgetContents_4 = QtWidgets.QTextBrowser(self.Calculator_thoary_Stray_beam_tabWidgetPage)
        self.scrollAreaWidgetContents_4.setGeometry(QtCore.QRect(0, 0, 669, 203))
        self.scrollAreaWidgetContents_4.setObjectName("scrollAreaWidgetContents_4")
        self.Calculator_thoary_Stray_scrollArea.setWidget(self.scrollAreaWidgetContents_4)
        self.gridLayout_7.addWidget(self.Calculator_thoary_Stray_scrollArea, 7, 0, 1, 4)
        self.Calculator_thoary_Stray_Secondary_Barrier_Edit = QtWidgets.QLineEdit(
            self.Calculator_thoary_Stray_beam_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.Calculator_thoary_Stray_Secondary_Barrier_Edit.sizePolicy().hasHeightForWidth())
        self.Calculator_thoary_Stray_Secondary_Barrier_Edit.setSizePolicy(sizePolicy)
        self.Calculator_thoary_Stray_Secondary_Barrier_Edit.setMinimumSize(QtCore.QSize(0, 20))
        self.Calculator_thoary_Stray_Secondary_Barrier_Edit.setMaximumSize(QtCore.QSize(16777215, 30))
        self.Calculator_thoary_Stray_Secondary_Barrier_Edit.setAutoFillBackground(False)
        self.Calculator_thoary_Stray_Secondary_Barrier_Edit.setObjectName(
            "Calculator_thoary_Stray_Secondary_Barrier_Edit")
        self.gridLayout_7.addWidget(self.Calculator_thoary_Stray_Secondary_Barrier_Edit, 1, 0, 1, 1)
        self.Calculator_thoary_Stray_thickness_label = QtWidgets.QLabel(self.Calculator_thoary_Stray_beam_tabWidgetPage)
        self.Calculator_thoary_Stray_thickness_label.setObjectName("Calculator_thoary_Stray_thickness_label")
        self.gridLayout_7.addWidget(self.Calculator_thoary_Stray_thickness_label, 8, 0, 1, 2, QtCore.Qt.AlignRight)
        spacerItem8 = QtWidgets.QSpacerItem(50, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_7.addItem(spacerItem8, 0, 3, 1, 1)
        spacerItem9 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_7.addItem(spacerItem9, 2, 3, 1, 1)
        spacerItem10 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_7.addItem(spacerItem10, 1, 3, 1, 1)
        self.Calculator_thoary_Stray_Meterial_label = QtWidgets.QLabel(self.Calculator_thoary_Stray_beam_tabWidgetPage)
        self.Calculator_thoary_Stray_Meterial_label.setObjectName("Calculator_thoary_Stray_Meterial_label")
        self.gridLayout_7.addWidget(self.Calculator_thoary_Stray_Meterial_label, 3, 1, 1, 1)
        spacerItem11 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_7.addItem(spacerItem11, 4, 0, 2, 1)
        self.Calculator_thoary_Stray_Calculate_Button = QtWidgets.QPushButton(
            self.Calculator_thoary_Stray_beam_tabWidgetPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Calculator_thoary_Stray_Calculate_Button.sizePolicy().hasHeightForWidth())
        self.Calculator_thoary_Stray_Calculate_Button.setSizePolicy(sizePolicy)
        self.Calculator_thoary_Stray_Calculate_Button.setMinimumSize(QtCore.QSize(350, 47))
        self.Calculator_thoary_Stray_Calculate_Button.setObjectName("Calculator_thoary_Stray_Calculate_Button")
        self.Calculator_thoary_Stray_Calculate_Button.clicked.connect(self.Stray_check_calculator)
        self.gridLayout_7.addWidget(self.Calculator_thoary_Stray_Calculate_Button, 3, 3, 3, 1)
        self.Calculator_thoary_tabWidget.addTab(self.Calculator_thoary_Stray_beam_tabWidgetPage, "")
        self.gridLayout_2.addWidget(self.Calculator_thoary_tabWidget, 0, 0, 1, 1)
        self.tabWidget.addTab(self.Calculator_thoary, "")
        self.gridLayout.addWidget(self.tabWidget, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 756, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(1)
        self.Calculator_Measure_tabWidget.setCurrentIndex(3)
        self.Calculator_thoary_tabWidget.setCurrentIndex(3)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Radiation Protection Survey to NCRP 49"))
        self.label.setToolTip(
            _translate("MainWindow", "<html><head/><body><p><img src=\":/newPrefix/22.png\"/></p></body></html>"))
        self.label.setWhatsThis(_translate("MainWindow", "<html><head/><body><p><br/></p></body></html>"))
        self.label.setText(_translate("MainWindow",
                                      "<html><head/><body><p align=\"center\"><img src=\":/newPrefix/22.png\"/></p></body></html>"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.home), _translate("MainWindow", "home"))
        self.Calculator_Measure_Primary_W_Edit.setPlaceholderText(_translate("MainWindow", "W"))
        self.Calculator_Measure_Primary_W_Edit.setValidator(QDoubleValidator())
        self.Calculator_Measure_Primary_E_comboBox.setItemText(0, _translate("MainWindow", "50"))
        self.Calculator_Measure_Primary_E_comboBox.setItemText(1, _translate("MainWindow", "70"))
        self.Calculator_Measure_Primary_E_comboBox.setItemText(2, _translate("MainWindow", "100"))
        self.Calculator_Measure_Primary_E_comboBox.setItemText(3, _translate("MainWindow", "125"))
        self.Calculator_Measure_Primary_E_comboBox.setItemText(4, _translate("MainWindow", "150"))
        self.Calculator_Measure_Primary_E_comboBox.setItemText(5, _translate("MainWindow", "200"))
        self.Calculator_Measure_Primary_E_comboBox.setItemText(6, _translate("MainWindow", "250"))
        self.Calculator_Measure_Primary_E_comboBox.setItemText(7, _translate("MainWindow", "300"))
        self.Calculator_Measure_Primary_W_label.setText(_translate("MainWindow", "Weekly workload [mA min]"))
        self.Calculator_Measure_Primary_E_label.setText(_translate("MainWindow", "Energy [GeV]"))
        self.Calculator_Measure_Primary_P_Edit.setPlaceholderText(_translate("MainWindow", "P"))
        self.Calculator_Measure_Primary_P_Edit.setValidator(QDoubleValidator())
        self.Calculator_Measure_Primary_T_Edit.setPlaceholderText(_translate("MainWindow", "T"))
        self.Calculator_Measure_Primary_T_Edit.setValidator(QDoubleValidator())
        self.Calculator_Measure_Primary_P_label.setText(_translate("MainWindow", "Wekly design exposure rate [R]"))
        self.Calculator_Measure_Primary_meterial_comboBox.setItemText(0, _translate("MainWindow", "Lead"))
        self.Calculator_Measure_Primary_meterial_comboBox.setItemText(1, _translate("MainWindow", "Concrete"))
        self.Calculator_Measure_Primary_U_label.setText(_translate("MainWindow", "Use factor  (0<U<1)"))
        self.Calculator_Measure_Primary_Meterial_label.setText(_translate("MainWindow", "Meterial"))
        self.Calculator_Measure_Primary_U_Edit.setPlaceholderText(_translate("MainWindow", "U"))
        self.Calculator_Measure_Primary_U_Edit.setValidator(QDoubleValidator())
        self.Calculator_Measure_Primary_d_pri_label.setText(_translate("MainWindow", "Primary distance [m]"))
        self.Calculator_Measure_Primary_T_label.setText(_translate("MainWindow", "Occupancy factor  (0<T<1)"))
        self.Calculator_Measure_Primary_d_pri_Edit.setPlaceholderText(_translate("MainWindow", "d_pri"))
        self.Calculator_Measure_Primary_d_pri_Edit.setValidator(QDoubleValidator())
        self.Calculator_Measure_Primary_Exposurerate_label.setText(_translate("MainWindow", "Exposure rate  [R/min]"))
        self.Calculator_Measure_Primary_thickness_label.setText(
            _translate("MainWindow", "barrier thickness [mm] or [cm]"))
        self.Calculator_Measure_Primary_Calculate_Button.setText(_translate("MainWindow", "Calculate"))
        self.Calculator_Measure_tabWidget.setTabText(
            self.Calculator_Measure_tabWidget.indexOf(self.Calculator_Measure_Primary_beam_tabWidgetPage),
            _translate("MainWindow", "Primary beam"))
        self.Calculator_Measure_Secondary_E_comboBox.setItemText(0, _translate("MainWindow", "50"))
        self.Calculator_Measure_Secondary_E_comboBox.setItemText(1, _translate("MainWindow", "70"))
        self.Calculator_Measure_Secondary_E_comboBox.setItemText(2, _translate("MainWindow", "100"))
        self.Calculator_Measure_Secondary_E_comboBox.setItemText(3, _translate("MainWindow", "125"))
        self.Calculator_Measure_Secondary_E_comboBox.setItemText(4, _translate("MainWindow", "150"))
        self.Calculator_Measure_Secondary_E_comboBox.setItemText(5, _translate("MainWindow", "200"))
        self.Calculator_Measure_Secondary_E_comboBox.setItemText(6, _translate("MainWindow", "250"))
        self.Calculator_Measure_Secondary_E_comboBox.setItemText(7, _translate("MainWindow", "300"))
        self.Calculator_Measure_Secondary_T_Edit.setPlaceholderText(_translate("MainWindow", "T"))
        self.Calculator_Measure_Secondary_T_Edit.setValidator(QDoubleValidator())
        self.Calculator_Measure_Secondary_T_label.setText(_translate("MainWindow", "Occupancy factor  (0<T<1)"))
        self.Calculator_Measure_Secondary_d_sec_label.setText(_translate("MainWindow", "Secondary distance [m]"))
        self.Calculator_Measure_Secondary_I_Edit.setPlaceholderText(_translate("MainWindow", "I"))
        self.Calculator_Measure_Secondary_I_Edit.setValidator(QDoubleValidator())
        self.Calculator_Measure_Secondary_d_sec_Edit.setPlaceholderText(_translate("MainWindow", "d_sec"))
        self.Calculator_Measure_Secondary_d_sec_Edit.setValidator(QDoubleValidator())
        self.Calculator_Measure_Secondary_I_label.setText(_translate("MainWindow", "current [mA]"))
        self.Calculator_Measure_Secondary_F_label.setText(_translate("MainWindow", "Field area [cm2]"))
        self.Calculator_Measure_Secondary_meterial_comboBox.setItemText(0, _translate("MainWindow", "Lead"))
        self.Calculator_Measure_Secondary_meterial_comboBox.setItemText(1, _translate("MainWindow", "Concrete"))
        self.Calculator_Measure_Secondary_Calculate_Button.setText(_translate("MainWindow", "Calculate"))
        self.Calculator_Measure_Scattering_F_Edit.setPlaceholderText(_translate("MainWindow", "F"))
        self.Calculator_Measure_Scattering_F_Edit.setValidator(QDoubleValidator())
        self.Calculator_Measure_Secondary_E_label.setText(_translate("MainWindow", "Energy [GeV]"))
        self.Calculator_Measure_Secondary_W_Edit.setPlaceholderText(_translate("MainWindow", "W"))
        self.Calculator_Measure_Secondary_W_Edit.setValidator(QDoubleValidator())
        self.Calculator_Measure_Secondary_W_label.setText(_translate("MainWindow", "Weekly workload [mA min]"))
        self.Calculator_Measure_Secondary_P_Edit.setPlaceholderText(_translate("MainWindow", "P"))
        self.Calculator_Measure_Secondary_P_Edit.setValidator(QDoubleValidator())
        self.Calculator_Measure_Secondary_P_label.setText(_translate("MainWindow", "Wekly design exposure rate [R]"))
        self.Calculator_Measure_Secondary_thickness_label.setText(
            _translate("MainWindow", "barrier thickness [mm] or [cm]"))
        self.Calculator_Measure_Secondary_Exposurerate_label.setText(_translate("MainWindow", "Exposure rate  [R/min]"))
        self.Calculator_Measure_Secondary_Meterial_label.setText(_translate("MainWindow", "Meterial"))
        self.Calculator_Measure_tabWidget.setTabText(
            self.Calculator_Measure_tabWidget.indexOf(self.Calculator_Measure_Secondary_beam_tabWidgetPage),
            _translate("MainWindow", "Secondary beam"))
        self.Calculator_Measure_Scattering_P_label.setText(_translate("MainWindow", "Wekly design exposure rate [R]"))
        self.Calculator_Measure_Scattering_d_sec_label.setText(_translate("MainWindow", "Secondary distance [m]"))
        self.Calculator_Measure_Scattering_T_Edit.setPlaceholderText(_translate("MainWindow", "T"))
        self.Calculator_Measure_Scattering_T_Edit.setValidator(QDoubleValidator())
        self.Calculator_Measure_Scattering_T_label.setText(_translate("MainWindow", "Occupancy factor  (0<T<1)"))
        self.Calculator_Measure_Scattering_d_sec_Edit.setPlaceholderText(_translate("MainWindow", "d_sec"))
        self.Calculator_Measure_Scattering_d_sec_Edit.setValidator(QDoubleValidator())
        self.Calculator_Measure_Scattering_d_sca_Edit.setPlaceholderText(_translate("MainWindow", "d_sca"))
        self.Calculator_Measure_Scattering_d_sca_Edit.setValidator(QDoubleValidator())
        self.Calculator_Measure_Scattering_d_sca_label.setText(_translate("MainWindow", "Scattering distance [m]"))
        self.Calculator_Measure_Scattering_a_Edit.setPlaceholderText(_translate("MainWindow", "a"))
        self.Calculator_Measure_Scattering_a_Edit.setValidator(QDoubleValidator())
        self.Calculator_Measure_Scattering_a_label.setText(_translate("MainWindow", "Ratio of the scattered exposure"))
        self.Calculator_Measure_Scattering_Calculate_Button.setText(_translate("MainWindow", "Calculate"))
        self.Calculator_Measure_Scattering_W_Edit.setPlaceholderText(_translate("MainWindow", "W"))
        self.Calculator_Measure_Scattering_W_Edit.setValidator(QDoubleValidator())
        self.Calculator_Measure_Scattering_E_label.setText(_translate("MainWindow", "Energy [GeV]"))
        self.Calculator_Measure_Scattering_W_label.setText(_translate("MainWindow", "Weekly workload [mA min]"))
        self.Calculator_Measure_Scattering_E_comboBox.setItemText(0, _translate("MainWindow", "50"))
        self.Calculator_Measure_Scattering_E_comboBox.setItemText(1, _translate("MainWindow", "70"))
        self.Calculator_Measure_Scattering_E_comboBox.setItemText(2, _translate("MainWindow", "100"))
        self.Calculator_Measure_Scattering_E_comboBox.setItemText(3, _translate("MainWindow", "125"))
        self.Calculator_Measure_Scattering_E_comboBox.setItemText(4, _translate("MainWindow", "150"))
        self.Calculator_Measure_Scattering_E_comboBox.setItemText(5, _translate("MainWindow", "200"))
        self.Calculator_Measure_Scattering_E_comboBox.setItemText(6, _translate("MainWindow", "250"))
        self.Calculator_Measure_Scattering_E_comboBox.setItemText(7, _translate("MainWindow", "300"))
        self.Calculator_Measure_Scattering_P_Edit.setPlaceholderText(_translate("MainWindow", "P"))
        self.Calculator_Measure_Scattering_P_Edit.setValidator(QDoubleValidator())
        self.Calculator_Measure_Scattering_Meterial_label.setText(_translate("MainWindow", "Meterial"))
        self.Calculator_Measure_Scattering_meterial_comboBox.setItemText(0, _translate("MainWindow", "Lead"))
        self.Calculator_Measure_Scattering_meterial_comboBox.setItemText(1, _translate("MainWindow", "Concrete"))
        self.Calculator_Measure_Scattering_Exposurerate_label.setText(
            _translate("MainWindow", "Exposure rate  [R/min]"))
        self.Calculator_Measure_Scattering_thickness_label.setText(
            _translate("MainWindow", "barrier thickness [mm] or [cm]"))
        self.Calculator_Measure_tabWidget.setTabText(
            self.Calculator_Measure_tabWidget.indexOf(self.Calculator_Measure_Scattering_tabWidgetPage),
            _translate("MainWindow", "Scattering beam"))
        self.Calculator_Measure_Stray_E_comboBox.setItemText(0, _translate("MainWindow", "50"))
        self.Calculator_Measure_Stray_E_comboBox.setItemText(1, _translate("MainWindow", "70"))
        self.Calculator_Measure_Stray_E_comboBox.setItemText(2, _translate("MainWindow", "100"))
        self.Calculator_Measure_Stray_E_comboBox.setItemText(3, _translate("MainWindow", "125"))
        self.Calculator_Measure_Stray_E_comboBox.setItemText(4, _translate("MainWindow", "150"))
        self.Calculator_Measure_Stray_E_comboBox.setItemText(5, _translate("MainWindow", "200"))
        self.Calculator_Measure_Stray_E_comboBox.setItemText(6, _translate("MainWindow", "250"))
        self.Calculator_Measure_Stray_E_comboBox.setItemText(7, _translate("MainWindow", "300"))
        self.Calculator_Measure_Stray_E_label.setText(_translate("MainWindow", "Energy [GeV]"))
        self.Calculator_Measure_Stray_meterial_comboBox.setItemText(0, _translate("MainWindow", "Lead"))
        self.Calculator_Measure_Stray_meterial_comboBox.setItemText(1, _translate("MainWindow", "Concrete"))
        self.Calculator_Measure_Stray_Secondary_barrier_label.setText(
            _translate("MainWindow", "barrier thickness [mm] or [cm]"))
        self.Calculator_Measure_Stray_Scattering_Barrier_Edit.setPlaceholderText(
            _translate("MainWindow", "Scattering barrier"))
        self.Calculator_Measure_Stray_Scattering_Barrier_Edit.setValidator(QDoubleValidator())
        self.Calculator_Measure_Stray_Scattering_barrier_label.setText(
            _translate("MainWindow", "barrier thickness [mm] or [cm]"))
        self.Calculator_Measure_Stray_Secondary_Barrier_Edit.setPlaceholderText(
            _translate("MainWindow", "Secondary barrier"))
        self.Calculator_Measure_Stray_Secondary_Barrier_Edit.setValidator(QDoubleValidator())
        self.Calculator_Measure_Stray_thickness_label.setText(
            _translate("MainWindow", "Stray barrier thickness [mm] or [cm]"))
        self.Calculator_Measure_Stray_Meterial_label.setText(_translate("MainWindow", "Meterial"))
        self.Calculator_Measure_Stray_Calculate_Button.setText(_translate("MainWindow", "Calculate"))
        self.Calculator_Measure_tabWidget.setTabText(
            self.Calculator_Measure_tabWidget.indexOf(self.Calculator_Measure_Stray_tabWidgetPage),
            _translate("MainWindow", "Stray beam"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.Calculator_measure),
                                  _translate("MainWindow", "Calculator_Figure_Value"))
        self.Calculator_thoary_Primary_T_Edit.setPlaceholderText(_translate("MainWindow", "T"))
        self.Calculator_thoary_Primary_T_Edit.setValidator(QDoubleValidator())
        self.Calculator_thoary_Primary_E_label.setText(_translate("MainWindow", "Energy [GeV]"))
        self.Calculator_thoary_Primary_P_label.setText(_translate("MainWindow", "Wekly design exposure rate [R]"))
        self.Calculator_thoary_Primary_W_label.setText(_translate("MainWindow", "Weekly workload [mA min]"))
        self.Calculator_thoary_Primary_T_label.setText(_translate("MainWindow", "Occupancy factor  (0<T<1)"))
        self.Calculator_thoary_Primary_d_pri_Edit.setPlaceholderText(_translate("MainWindow", "d_pri"))
        self.Calculator_thoary_Primary_d_pri_Edit.setValidator(QDoubleValidator())
        self.Calculator_thoary_Primary_d_pri_label.setText(_translate("MainWindow", "Primary distance [m]"))
        self.Calculator_thoary_Primary_W_Edit.setPlaceholderText(_translate("MainWindow", "W"))
        self.Calculator_thoary_Primary_W_Edit.setValidator(QDoubleValidator())
        self.Calculator_thoary_Primary_E_comboBox.setItemText(0, _translate("MainWindow", "50"))
        self.Calculator_thoary_Primary_E_comboBox.setItemText(1, _translate("MainWindow", "70"))
        self.Calculator_thoary_Primary_E_comboBox.setItemText(2, _translate("MainWindow", "100"))
        self.Calculator_thoary_Primary_E_comboBox.setItemText(3, _translate("MainWindow", "125"))
        self.Calculator_thoary_Primary_E_comboBox.setItemText(4, _translate("MainWindow", "150"))
        self.Calculator_thoary_Primary_E_comboBox.setItemText(5, _translate("MainWindow", "200"))
        self.Calculator_thoary_Primary_E_comboBox.setItemText(6, _translate("MainWindow", "250"))
        self.Calculator_thoary_Primary_E_comboBox.setItemText(7, _translate("MainWindow", "300"))
        self.Calculator_thoary_Primary_P_Edit.setPlaceholderText(_translate("MainWindow", "P"))
        self.Calculator_thoary_Primary_P_Edit.setValidator(QDoubleValidator())
        self.Calculator_thoary_Primary_Calculate_Button.setText(_translate("MainWindow", "Calculate"))
        self.Calculator_thoary_Primary_U_label.setText(_translate("MainWindow", "Use factor  (0<U<1)"))
        self.Calculator_thoary_Primary_U_Edit.setPlaceholderText(_translate("MainWindow", "U"))
        self.Calculator_thoary_Primary_U_Edit.setValidator(QDoubleValidator())
        self.Calculator_thoary_Primary_Meterial_label.setText(_translate("MainWindow", "Meterial"))
        self.Calculator_thoary_Primary_meterial_comboBox.setItemText(0, _translate("MainWindow", "Lead"))
        self.Calculator_thoary_Primary_meterial_comboBox.setItemText(1, _translate("MainWindow", "Concrete"))
        self.Calculator_thoary_Primary_Exposurerate_label.setText(_translate("MainWindow", "Exposure rate  [R/min]"))
        self.Calculator_thoary_Primary_thickness_label.setText(
            _translate("MainWindow", "barrier thickness [mm] or [cm]"))
        self.Calculator_thoary_tabWidget.setTabText(
            self.Calculator_thoary_tabWidget.indexOf(self.Calculator_thoary_Primary_beam_tabWidgetPage),
            _translate("MainWindow", "Primary beam"))
        self.Calculator_thoary_Secondary_E_comboBox.setItemText(0, _translate("MainWindow", "50"))
        self.Calculator_thoary_Secondary_E_comboBox.setItemText(1, _translate("MainWindow", "70"))
        self.Calculator_thoary_Secondary_E_comboBox.setItemText(2, _translate("MainWindow", "100"))
        self.Calculator_thoary_Secondary_E_comboBox.setItemText(3, _translate("MainWindow", "125"))
        self.Calculator_thoary_Secondary_E_comboBox.setItemText(4, _translate("MainWindow", "150"))
        self.Calculator_thoary_Secondary_E_comboBox.setItemText(5, _translate("MainWindow", "200"))
        self.Calculator_thoary_Secondary_E_comboBox.setItemText(6, _translate("MainWindow", "250"))
        self.Calculator_thoary_Secondary_E_comboBox.setItemText(7, _translate("MainWindow", "300"))
        self.Calculator_thoary_Secondary_E_label.setText(_translate("MainWindow", "Energy [GeV]"))
        self.Calculator_thoary_Secondary_W_Edit.setPlaceholderText(_translate("MainWindow", "W"))
        self.Calculator_thoary_Secondary_W_Edit.setValidator(QDoubleValidator())
        self.Calculator_thoary_Secondary_W_label.setText(_translate("MainWindow", "Weekly workload [mA min]"))
        self.Calculator_thoary_Secondary_P_Edit.setPlaceholderText(_translate("MainWindow", "P"))
        self.Calculator_thoary_Secondary_P_Edit.setValidator(QDoubleValidator())
        self.Calculator_thoary_Secondary_P_label.setText(_translate("MainWindow", "Wekly design exposure rate [R]"))
        self.Calculator_thoary_Secondary_T_Edit.setPlaceholderText(_translate("MainWindow", "T"))
        self.Calculator_thoary_Secondary_T_Edit.setValidator(QDoubleValidator())
        self.Calculator_thoary_Secondary_T_label.setText(_translate("MainWindow", "Occupancy factor  (0<T<1)"))
        self.Calculator_thoary_Secondary_d_sec_Edit.setPlaceholderText(_translate("MainWindow", "d_sec"))
        self.Calculator_thoary_Secondary_d_sec_Edit.setValidator(QDoubleValidator())
        self.Calculator_thoary_Secondary_d_sec_label.setText(_translate("MainWindow", "Secondary distance [m]"))
        self.Calculator_thoary_Secondary_I_Edit.setPlaceholderText(_translate("MainWindow", "I"))
        self.Calculator_thoary_Secondary_I_Edit.setValidator(QDoubleValidator())
        self.Calculator_thoary_Secondary_I_label.setText(_translate("MainWindow", "current [mA]"))
        self.Calculator_thoary_Scattering_F_Edit.setPlaceholderText(_translate("MainWindow", "F"))
        self.Calculator_thoary_Scattering_F_Edit.setValidator(QDoubleValidator())
        self.Calculator_thoary_Secondary_F_label.setText(_translate("MainWindow", "Field area [cm2]"))
        self.Calculator_thoary_Secondary_Calculate_Button.setText(_translate("MainWindow", "Calculate"))
        self.Calculator_thoary_Secondary_meterial_comboBox.setItemText(0, _translate("MainWindow", "Lead"))
        self.Calculator_thoary_Secondary_meterial_comboBox.setItemText(1, _translate("MainWindow", "Concrete"))
        self.Calculator_thoary_Secondary_Meterial_label.setText(_translate("MainWindow", "Meterial"))
        self.Calculator_thoary_Secondary_Exposurerate_label.setText(_translate("MainWindow", "Exposure rate  [R/min]"))
        self.Calculator_thoary_Secondary_thickness_label.setText(
            _translate("MainWindow", "barrier thickness [mm] or [cm]"))
        self.Calculator_thoary_tabWidget.setTabText(
            self.Calculator_thoary_tabWidget.indexOf(self.Calculator_thoary_Secondary_beam_tabWidgetPage),
            _translate("MainWindow", "Secondary beam"))
        self.Calculator_thoary_Scattering_E_comboBox.setItemText(0, _translate("MainWindow", "50"))
        self.Calculator_thoary_Scattering_E_comboBox.setItemText(1, _translate("MainWindow", "70"))
        self.Calculator_thoary_Scattering_E_comboBox.setItemText(2, _translate("MainWindow", "100"))
        self.Calculator_thoary_Scattering_E_comboBox.setItemText(3, _translate("MainWindow", "125"))
        self.Calculator_thoary_Scattering_E_comboBox.setItemText(4, _translate("MainWindow", "150"))
        self.Calculator_thoary_Scattering_E_comboBox.setItemText(5, _translate("MainWindow", "200"))
        self.Calculator_thoary_Scattering_E_comboBox.setItemText(6, _translate("MainWindow", "250"))
        self.Calculator_thoary_Scattering_E_comboBox.setItemText(7, _translate("MainWindow", "300"))
        self.Calculator_thoary_Scattering_E_label.setText(_translate("MainWindow", "Energy [GeV]"))
        self.Calculator_thoary_Scattering_P_Edit.setPlaceholderText(_translate("MainWindow", "P"))
        self.Calculator_thoary_Scattering_P_Edit.setValidator(QDoubleValidator())
        self.Calculator_thoary_Scattering_P_label.setText(_translate("MainWindow", "Wekly design exposure rate [R]"))
        self.Calculator_thoary_Scattering_d_sec_Edit.setPlaceholderText(_translate("MainWindow", "d_sec"))
        self.Calculator_thoary_Scattering_d_sec_Edit.setValidator(QDoubleValidator())
        self.Calculator_thoary_Scattering_d_sec_label.setText(_translate("MainWindow", "Secondary distance [m]"))
        self.Calculator_thoary_Scattering_d_sca_Edit.setPlaceholderText(_translate("MainWindow", "d_sca"))
        self.Calculator_thoary_Scattering_d_sca_Edit.setValidator(QDoubleValidator())
        self.Calculator_thoary_Scattering_d_sca_label.setText(_translate("MainWindow", "Scattering distance [m]"))
        self.Calculator_thoary_Scattering_Meterial_label.setText(_translate("MainWindow", "Meterial"))
        self.Calculator_thoary_Scattering_meterial_comboBox.setItemText(0, _translate("MainWindow", "Lead"))
        self.Calculator_thoary_Scattering_meterial_comboBox.setItemText(1, _translate("MainWindow", "Concrete"))
        self.Calculator_thoary_Scattering_Calculate_Button.setText(_translate("MainWindow", "Calculate"))
        self.Calculator_thoary_Scattering_Exposurerate_label.setText(_translate("MainWindow", "Exposure rate  [R/min]"))
        self.Calculator_thoary_Scattering_thickness_label.setText(
            _translate("MainWindow", "barrier thickness [mm] or [cm]"))
        self.Calculator_thoary_Scattering_a_Edit.setPlaceholderText(_translate("MainWindow", "a"))
        self.Calculator_thoary_Scattering_a_Edit.setValidator(QDoubleValidator())
        self.Calculator_thoary_Scattering_a_label.setText(_translate("MainWindow", "Ratio of the scattered exposure"))
        self.Calculator_thoary_Scattering_W_label.setText(_translate("MainWindow", "Weekly workload [mA min]"))
        self.Calculator_thoary_Scattering_T_label.setText(_translate("MainWindow", "Occupancy factor  (0<T<1)"))
        self.Calculator_thoary_Scattering_T_Edit.setPlaceholderText(_translate("MainWindow", "T"))
        self.Calculator_thoary_Scattering_T_Edit.setValidator(QDoubleValidator())
        self.Calculator_thoary_Scattering_W_Edit.setPlaceholderText(_translate("MainWindow", "W"))
        self.Calculator_thoary_Scattering_W_Edit.setValidator(QDoubleValidator())
        self.Calculator_thoary_tabWidget.setTabText(
            self.Calculator_thoary_tabWidget.indexOf(self.Calculator_thoary_Scattering_beam_tabWidgetPage),
            _translate("MainWindow", "Scattering beam"))
        self.Calculator_thoary_Stray_E_comboBox.setItemText(0, _translate("MainWindow", "50"))
        self.Calculator_thoary_Stray_E_comboBox.setItemText(1, _translate("MainWindow", "70"))
        self.Calculator_thoary_Stray_E_comboBox.setItemText(2, _translate("MainWindow", "100"))
        self.Calculator_thoary_Stray_E_comboBox.setItemText(3, _translate("MainWindow", "125"))
        self.Calculator_thoary_Stray_E_comboBox.setItemText(4, _translate("MainWindow", "150"))
        self.Calculator_thoary_Stray_E_comboBox.setItemText(5, _translate("MainWindow", "200"))
        self.Calculator_thoary_Stray_E_comboBox.setItemText(6, _translate("MainWindow", "250"))
        self.Calculator_thoary_Stray_E_comboBox.setItemText(7, _translate("MainWindow", "300"))
        self.Calculator_thoary_Stray_E_label.setText(_translate("MainWindow", "Energy [GeV]"))
        self.Calculator_thoary_Stray_meterial_comboBox.setItemText(0, _translate("MainWindow", "Lead"))
        self.Calculator_thoary_Stray_meterial_comboBox.setItemText(1, _translate("MainWindow", "Concrete"))
        self.Calculator_thoary_Stray_Secondary_Barrier_label.setText(
            _translate("MainWindow", "barrier thickness [mm] or [cm]"))
        self.Calculator_thoary_Stray_Scattering_Barrier_Edit.setPlaceholderText(
            _translate("MainWindow", "Scattering barrier"))
        self.Calculator_thoary_Stray_Scattering_Barrier_Edit.setValidator(QDoubleValidator())
        self.Calculator_thoary_Stray_Scattering_Barrier_label.setText(
            _translate("MainWindow", "barrier thickness [mm] or [cm]"))
        self.Calculator_thoary_Stray_Secondary_Barrier_Edit.setPlaceholderText(
            _translate("MainWindow", "Secondary barrier"))
        self.Calculator_thoary_Stray_Secondary_Barrier_Edit.setValidator(QDoubleValidator())
        self.Calculator_thoary_Stray_thickness_label.setText(
            _translate("MainWindow", "Stray barrier thickness [mm] or [cm]"))
        self.Calculator_thoary_Stray_Meterial_label.setText(_translate("MainWindow", "Meterial"))
        self.Calculator_thoary_Stray_Calculate_Button.setText(_translate("MainWindow", "Calculate"))
        self.Calculator_thoary_tabWidget.setTabText(
            self.Calculator_thoary_tabWidget.indexOf(self.Calculator_thoary_Stray_beam_tabWidgetPage),
            _translate("MainWindow", "Stray beam"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.Calculator_thoary),
                                  _translate("MainWindow", "Calculator_Table_Value"))

    def Filter_Primary_Data_Menu(self):  # 임시로 NCRP49 measure data 사용
        if self.Calculator_Measure_Primary_meterial_comboBox.currentText() == 'Lead':
            if float(self.Calculator_Measure_Primary_E_comboBox.currentText()) == 50:
                Measure_Filter_Name = 'Al'
                Measure_Filter_Value = 0.5

            elif float(self.Calculator_Measure_Primary_E_comboBox.currentText()) == 70:
                Measure_Filter_Name = 'Al'
                Measure_Filter_Value = 1.5

            elif float(self.Calculator_Measure_Primary_E_comboBox.currentText()) == 100:
                Measure_Filter_Name = 'Al'
                Measure_Filter_Value = 2.5

            elif float(self.Calculator_Measure_Primary_E_comboBox.currentText()) == 125:
                Measure_Filter_Name = 'Al'
                Measure_Filter_Value = 2.5

            elif float(self.Calculator_Measure_Primary_E_comboBox.currentText()) == 150:
                Measure_Filter_Name = 'Al'
                Measure_Filter_Value = 2.5

            elif float(self.Calculator_Measure_Primary_E_comboBox.currentText()) == 200:
                Measure_Filter_Name = 'Al'
                Measure_Filter_Value = 3.0

            elif float(self.Calculator_Measure_Primary_E_comboBox.currentText()) == 250:
                Measure_Filter_Name = 'Al'
                Measure_Filter_Value = 3.0

            elif float(self.Calculator_Measure_Primary_E_comboBox.currentText()) == 300:
                Measure_Filter_Name = 'Al'
                Measure_Filter_Value = 3.0

            return Measure_Filter_Name, Measure_Filter_Value

        elif self.Calculator_Measure_Primary_meterial_comboBox.currentText() == 'Concrete':
            if float(self.Calculator_Measure_Primary_E_comboBox.currentText()) == 50:
                Measure_Filter_Name = 'Al'
                Measure_Filter_Value = 1.0

            elif float(self.Calculator_Measure_Primary_E_comboBox.currentText()) == 70:
                Measure_Filter_Name = 'Al'
                Measure_Filter_Value = 1.5

            elif float(self.Calculator_Measure_Primary_E_comboBox.currentText()) == 100:
                Measure_Filter_Name = 'Al'
                Measure_Filter_Value = 2.0

            elif float(self.Calculator_Measure_Primary_E_comboBox.currentText()) == 125:
                Measure_Filter_Name = 'Al'
                Measure_Filter_Value = 3.0

            elif float(self.Calculator_Measure_Primary_E_comboBox.currentText()) == 150:
                Measure_Filter_Name = 'Al'
                Measure_Filter_Value = 3.0

            elif float(self.Calculator_Measure_Primary_E_comboBox.currentText()) == 200:
                Measure_Filter_Name = 'Al'
                Measure_Filter_Value = 3.0

            elif float(self.Calculator_Measure_Primary_E_comboBox.currentText()) == 250:
                Measure_Filter_Name = 'Al'
                Measure_Filter_Value = 3.0

            elif float(self.Calculator_Measure_Primary_E_comboBox.currentText()) == 300:
                Measure_Filter_Name = 'Al'
                Measure_Filter_Value = 3.0

            return Measure_Filter_Name, Measure_Filter_Value

    def Filter_Secondary_Data_Menu(self):  # 임시로 NCRP49 measure data 사용
        if self.Calculator_Measure_Secondary_meterial_comboBox.currentText() == 'Lead':
            if float(self.Calculator_Measure_Secondary_E_comboBox.currentText()) == 50:
                Measure_Secondary_Filter_Name = 'Al'
                Measure_Secondary_Filter_Value = 0.5

            elif float(self.Calculator_Measure_Secondary_E_comboBox.currentText()) == 70:
                Measure_Secondary_Filter_Name = 'Al'
                Measure_Secondary_Filter_Value = 1.5

            elif float(self.Calculator_Measure_Secondary_E_comboBox.currentText()) == 100:
                Measure_Secondary_Filter_Name = 'Al'
                Measure_Secondary_Filter_Value = 2.5

            elif float(self.Calculator_Measure_Secondary_E_comboBox.currentText()) == 125:
                Measure_Secondary_Filter_Name = 'Al'
                Measure_Secondary_Filter_Value = 2.5

            elif float(self.Calculator_Measure_Secondary_E_comboBox.currentText()) == 150:
                Measure_Secondary_Filter_Name = 'Al'
                Measure_Secondary_Filter_Value = 2.5

            elif float(self.Calculator_Measure_Secondary_E_comboBox.currentText()) == 200:
                Measure_Secondary_Filter_Name = 'Al'
                Measure_Secondary_Filter_Value = 3.0

            elif float(self.Calculator_Measure_Secondary_E_comboBox.currentText()) == 250:
                Measure_Secondary_Filter_Name = 'Al'
                Measure_Secondary_Filter_Value = 3.0

            elif float(self.Calculator_Measure_Secondary_E_comboBox.currentText()) == 300:
                Measure_Secondary_Filter_Name = 'Al'
                Measure_Secondary_Filter_Value = 3.0

            return Measure_Secondary_Filter_Name, Measure_Secondary_Filter_Value

        elif self.Calculator_Measure_Secondary_meterial_comboBox.currentText() == 'Concrete':
            if float(self.Calculator_Measure_Secondary_E_comboBox.currentText()) == 50:
                Measure_Secondary_Filter_Name = 'Al'
                Measure_Secondary_Filter_Value = 1.0

            elif float(self.Calculator_Measure_Secondary_E_comboBox.currentText()) == 70:
                Measure_Secondary_Filter_Name = 'Al'
                Measure_Secondary_Filter_Value = 1.5

            elif float(self.Calculator_Measure_Secondary_E_comboBox.currentText()) == 100:
                Measure_Secondary_Filter_Name = 'Al'
                Measure_Secondary_Filter_Value = 2.0

            elif float(self.Calculator_Measure_Secondary_E_comboBox.currentText()) == 125:
                Measure_Secondary_Filter_Name = 'Al'
                Measure_Secondary_Filter_Value = 3.0

            elif float(self.Calculator_Measure_Secondary_E_comboBox.currentText()) == 150:
                Measure_Secondary_Filter_Name = 'Al'
                Measure_Secondary_Filter_Value = 3.0

            elif float(self.Calculator_Measure_Secondary_E_comboBox.currentText()) == 200:
                Measure_Secondary_Filter_Name = 'Al'
                Measure_Secondary_Filter_Value = 3.0

            elif float(self.Calculator_Measure_Secondary_E_comboBox.currentText()) == 250:
                Measure_Secondary_Filter_Name = 'Al'
                Measure_Secondary_Filter_Value = 3.0

            elif float(self.Calculator_Measure_Secondary_E_comboBox.currentText()) == 300:
                Measure_Secondary_Filter_Name = 'Al'
                Measure_Secondary_Filter_Value = 3.0

            return Measure_Secondary_Filter_Name, Measure_Secondary_Filter_Value

    def Filter_Scattering_Data_Menu(self):  # 임시로 NCRP49 measure data 사용
        if self.Calculator_Measure_Scattering_meterial_comboBox.currentText() == 'Lead':
            if float(self.Calculator_Measure_Scattering_E_comboBox.currentText()) == 50:
                Measure_Scattering_Filter_Name = 'Al'
                Measure_Scattering_Filter_Value = 0.5

            elif float(self.Calculator_Measure_Scattering_E_comboBox.currentText()) == 70:
                Measure_Scattering_Filter_Name = 'Al'
                Measure_Scattering_Filter_Value = 1.5

            elif float(self.Calculator_Measure_Scattering_E_comboBox.currentText()) == 100:
                Measure_Scattering_Filter_Name = 'Al'
                Measure_Scattering_Filter_Value = 2.5

            elif float(self.Calculator_Measure_Scattering_E_comboBox.currentText()) == 125:
                Measure_Scattering_Filter_Name = 'Al'
                Measure_Scattering_Filter_Value = 2.5

            elif float(self.Calculator_Measure_Scattering_E_comboBox.currentText()) == 150:
                Measure_Scattering_Filter_Name = 'Al'
                Measure_Scattering_Filter_Value = 2.5

            elif float(self.Calculator_Measure_Scattering_E_comboBox.currentText()) == 200:
                Measure_Scattering_Filter_Name = 'Al'
                Measure_Scattering_Filter_Value = 3.0

            elif float(self.Calculator_Measure_Scattering_E_comboBox.currentText()) == 250:
                Measure_Scattering_Filter_Name = 'Al'
                Measure_Scattering_Filter_Value = 3.0

            elif float(self.Calculator_Measure_Scattering_E_comboBox.currentText()) == 300:
                Measure_Scattering_Filter_Name = 'Al'
                Measure_Scattering_Filter_Value = 3.0

            return Measure_Scattering_Filter_Name, Measure_Scattering_Filter_Value

        elif self.Calculator_Measure_Scattering_meterial_comboBox.currentText() == 'Concrete':
            if float(self.Calculator_Measure_Scattering_E_comboBox.currentText()) == 50:
                Measure_Scattering_Filter_Name = 'Al'
                Measure_Scattering_Filter_Value = 1.0

            elif float(self.Calculator_Measure_Scattering_E_comboBox.currentText()) == 70:
                Measure_Scattering_Filter_Name = 'Al'
                Measure_Scattering_Filter_Value = 1.5

            elif float(self.Calculator_Measure_Scattering_E_comboBox.currentText()) == 100:
                Measure_Scattering_Filter_Name = 'Al'
                Measure_Scattering_Filter_Value = 2.0

            elif float(self.Calculator_Measure_Scattering_E_comboBox.currentText()) == 125:
                Measure_Scattering_Filter_Name = 'Al'
                Measure_Scattering_Filter_Value = 3.0

            elif float(self.Calculator_Measure_Scattering_E_comboBox.currentText()) == 150:
                Measure_Scattering_Filter_Name = 'Al'
                Measure_Scattering_Filter_Value = 3.0

            elif float(self.Calculator_Measure_Scattering_E_comboBox.currentText()) == 200:
                Measure_Scattering_Filter_Name = 'Al'
                Measure_Scattering_Filter_Value = 3.0

            elif float(self.Calculator_Measure_Scattering_E_comboBox.currentText()) == 250:
                Measure_Scattering_Filter_Name = 'Al'
                Measure_Scattering_Filter_Value = 3.0

            elif float(self.Calculator_Measure_Scattering_E_comboBox.currentText()) == 300:
                Measure_Scattering_Filter_Name = 'Al'
                Measure_Scattering_Filter_Value = 3.0

            return Measure_Scattering_Filter_Name, Measure_Scattering_Filter_Value

    def Relative_Primary_Transmission_Data_Menu(self):
        if self.Calculator_Measure_Primary_meterial_comboBox.currentText() == 'Lead':
            if float(self.Calculator_Measure_Primary_E_comboBox.currentText()) == 50:
                Relative_Primary_Transmission_Data = self.lead_50

            elif float(self.Calculator_Measure_Primary_E_comboBox.currentText()) == 70:
                Relative_Primary_Transmission_Data = self.lead_70

            elif float(self.Calculator_Measure_Primary_E_comboBox.currentText()) == 100:
                Relative_Primary_Transmission_Data = self.lead_100

            elif float(self.Calculator_Measure_Primary_E_comboBox.currentText()) == 125:
                Relative_Primary_Transmission_Data = self.lead_125

            elif float(self.Calculator_Measure_Primary_E_comboBox.currentText()) == 150:
                Relative_Primary_Transmission_Data = self.lead_150

            elif float(self.Calculator_Measure_Primary_E_comboBox.currentText()) == 200:
                Relative_Primary_Transmission_Data = self.lead_200

            elif float(self.Calculator_Measure_Primary_E_comboBox.currentText()) == 250:
                Relative_Primary_Transmission_Data = self.lead_250

            elif float(self.Calculator_Measure_Primary_E_comboBox.currentText()) == 300:
                Relative_Primary_Transmission_Data = self.lead_300

            return Relative_Primary_Transmission_Data

        elif self.Calculator_Measure_Primary_meterial_comboBox.currentText() == 'Concrete':
            if float(self.Calculator_Measure_Primary_E_comboBox.currentText()) == 50:
                Relative_Primary_Transmission_Data = self.concrete_50

            elif float(self.Calculator_Measure_Primary_E_comboBox.currentText()) == 70:
                Relative_Primary_Transmission_Data = self.concrete_70

            elif float(self.Calculator_Measure_Primary_E_comboBox.currentText()) == 100:
                Relative_Primary_Transmission_Data = self.concrete_100

            elif float(self.Calculator_Measure_Primary_E_comboBox.currentText()) == 125:
                Relative_Primary_Transmission_Data = self.concrete_125

            elif float(self.Calculator_Measure_Primary_E_comboBox.currentText()) == 150:
                Relative_Primary_Transmission_Data = self.concrete_150

            elif float(self.Calculator_Measure_Primary_E_comboBox.currentText()) == 200:
                Relative_Primary_Transmission_Data = self.concrete_200

            elif float(self.Calculator_Measure_Primary_E_comboBox.currentText()) == 250:
                Relative_Primary_Transmission_Data = self.concrete_250

            elif float(self.Calculator_Measure_Primary_E_comboBox.currentText()) == 300:
                Relative_Primary_Transmission_Data = self.concrete_300

            return Relative_Primary_Transmission_Data

    def Relative_Secondary_Transmission_Data_Menu(self):
        if self.Calculator_Measure_Secondary_meterial_comboBox.currentText() == 'Lead':
            if float(self.Calculator_Measure_Secondary_E_comboBox.currentText()) == 50:
                Relative_Secondary_Transmission_Data = self.lead_50

            elif float(self.Calculator_Measure_Secondary_E_comboBox.currentText()) == 70:
                Relative_Secondary_Transmission_Data = self.lead_70

            elif float(self.Calculator_Measure_Secondary_E_comboBox.currentText()) == 100:
                Relative_Secondary_Transmission_Data = self.lead_100

            elif float(self.Calculator_Measure_Secondary_E_comboBox.currentText()) == 125:
                Relative_Secondary_Transmission_Data = self.lead_125

            elif float(self.Calculator_Measure_Secondary_E_comboBox.currentText()) == 150:
                Relative_Secondary_Transmission_Data = self.lead_150

            elif float(self.Calculator_Measure_Secondary_E_comboBox.currentText()) == 200:
                Relative_Secondary_Transmission_Data = self.lead_200

            elif float(self.Calculator_Measure_Secondary_E_comboBox.currentText()) == 250:
                Relative_Secondary_Transmission_Data = self.lead_250

            elif float(self.Calculator_Measure_Secondary_E_comboBox.currentText()) == 300:
                Relative_Secondary_Transmission_Data = self.lead_300

            return Relative_Secondary_Transmission_Data

        elif self.Calculator_Measure_Secondary_meterial_comboBox.currentText() == 'Concrete':
            if float(self.Calculator_Measure_Secondary_E_comboBox.currentText()) == 50:
                Relative_Secondary_Transmission_Data = self.concrete_50

            elif float(self.Calculator_Measure_Secondary_E_comboBox.currentText()) == 70:
                Relative_Secondary_Transmission_Data = self.concrete_70

            elif float(self.Calculator_Measure_Secondary_E_comboBox.currentText()) == 100:
                Relative_Secondary_Transmission_Data = self.concrete_100

            elif float(self.Calculator_Measure_Secondary_E_comboBox.currentText()) == 125:
                Relative_Secondary_Transmission_Data = self.concrete_125

            elif float(self.Calculator_Measure_Secondary_E_comboBox.currentText()) == 150:
                Relative_Secondary_Transmission_Data = self.concrete_150

            elif float(self.Calculator_Measure_Secondary_E_comboBox.currentText()) == 200:
                Relative_Secondary_Transmission_Data = self.concrete_200

            elif float(self.Calculator_Measure_Secondary_E_comboBox.currentText()) == 250:
                Relative_Secondary_Transmission_Data = self.concrete_250

            elif float(self.Calculator_Measure_Secondary_E_comboBox.currentText()) == 300:
                Relative_Secondary_Transmission_Data = self.concrete_300

            return Relative_Secondary_Transmission_Data

    def Relative_Scattering_Transmission_Data_Menu(self):
        if self.Calculator_Measure_Scattering_meterial_comboBox.currentText() == 'Lead':
            if float(self.Calculator_Measure_Scattering_E_comboBox.currentText()) == 50:
                Relative_Scattering_Transmission_Data = self.lead_50

            elif float(self.Calculator_Measure_Scattering_E_comboBox.currentText()) == 70:
                Relative_Scattering_Transmission_Data = self.lead_70

            elif float(self.Calculator_Measure_Scattering_E_comboBox.currentText()) == 100:
                Relative_Scattering_Transmission_Data = self.lead_100

            elif float(self.Calculator_Measure_Scattering_E_comboBox.currentText()) == 125:
                Relative_Scattering_Transmission_Data = self.lead_125

            elif float(self.Calculator_Measure_Scattering_E_comboBox.currentText()) == 150:
                Relative_Scattering_Transmission_Data = self.lead_150

            elif float(self.Calculator_Measure_Scattering_E_comboBox.currentText()) == 200:
                Relative_Scattering_Transmission_Data = self.lead_200

            elif float(self.Calculator_Measure_Scattering_E_comboBox.currentText()) == 250:
                Relative_Scattering_Transmission_Data = self.lead_250

            elif float(self.Calculator_Measure_Scattering_E_comboBox.currentText()) == 300:
                Relative_Scattering_Transmission_Data = self.lead_300

            return Relative_Scattering_Transmission_Data

        elif self.Calculator_Measure_Scattering_meterial_comboBox.currentText() == 'Concrete':
            if float(self.Calculator_Measure_Scattering_E_comboBox.currentText()) == 50:
                Relative_Scattering_Transmission_Data = self.concrete_50

            elif float(self.Calculator_Measure_Scattering_E_comboBox.currentText()) == 70:
                Relative_Scattering_Transmission_Data = self.concrete_70

            elif float(self.Calculator_Measure_Scattering_E_comboBox.currentText()) == 100:
                Relative_Scattering_Transmission_Data = self.concrete_100

            elif float(self.Calculator_Measure_Scattering_E_comboBox.currentText()) == 125:
                Relative_Scattering_Transmission_Data = self.concrete_125

            elif float(self.Calculator_Measure_Scattering_E_comboBox.currentText()) == 150:
                Relative_Scattering_Transmission_Data = self.concrete_150

            elif float(self.Calculator_Measure_Scattering_E_comboBox.currentText()) == 200:
                Relative_Scattering_Transmission_Data = self.concrete_200

            elif float(self.Calculator_Measure_Scattering_E_comboBox.currentText()) == 250:
                Relative_Scattering_Transmission_Data = self.concrete_250

            elif float(self.Calculator_Measure_Scattering_E_comboBox.currentText()) == 300:
                Relative_Scattering_Transmission_Data = self.concrete_300

            return Relative_Scattering_Transmission_Data

    def Relative_Stray_Transmission_Data_Menu(self):
        if self.Calculator_Measure_Stray_meterial_comboBox.currentText() == 'Lead':
            if float(self.Calculator_Measure_Stray_E_comboBox.currentText()) == 50:
                Relative_Stray_Transmission_Data = self.lead_50

            elif float(self.Calculator_Measure_Stray_E_comboBox.currentText()) == 70:
                Relative_Stray_Transmission_Data = self.lead_70

            elif float(self.Calculator_Measure_Stray_E_comboBox.currentText()) == 100:
                Relative_Stray_Transmission_Data = self.lead_100

            elif float(self.Calculator_Measure_Stray_E_comboBox.currentText()) == 125:
                Relative_Stray_Transmission_Data = self.lead_125

            elif float(self.Calculator_Measure_Stray_E_comboBox.currentText()) == 150:
                Relative_Stray_Transmission_Data = self.lead_150

            elif float(self.Calculator_Measure_Stray_E_comboBox.currentText()) == 200:
                Relative_Stray_Transmission_Data = self.lead_200

            elif float(self.Calculator_Measure_Stray_E_comboBox.currentText()) == 250:
                Relative_Stray_Transmission_Data = self.lead_250

            elif float(self.Calculator_Measure_Stray_E_comboBox.currentText()) == 300:
                Relative_Stray_Transmission_Data = self.lead_300

            return Relative_Stray_Transmission_Data

        elif self.Calculator_Measure_Stray_meterial_comboBox.currentText() == 'Concrete':
            if float(self.Calculator_Measure_Stray_E_comboBox.currentText()) == 50:
                Relative_Stray_Transmission_Data = self.concrete_50

            elif float(self.Calculator_Measure_Stray_E_comboBox.currentText()) == 70:
                Relative_Stray_Transmission_Data = self.concrete_70

            elif float(self.Calculator_Measure_Stray_E_comboBox.currentText()) == 100:
                Relative_Stray_Transmission_Data = self.concrete_100

            elif float(self.Calculator_Measure_Stray_E_comboBox.currentText()) == 125:
                Relative_Stray_Transmission_Data = self.concrete_125

            elif float(self.Calculator_Measure_Stray_E_comboBox.currentText()) == 150:
                Relative_Stray_Transmission_Data = self.concrete_150

            elif float(self.Calculator_Measure_Stray_E_comboBox.currentText()) == 200:
                Relative_Stray_Transmission_Data = self.concrete_200

            elif float(self.Calculator_Measure_Stray_E_comboBox.currentText()) == 250:
                Relative_Stray_Transmission_Data = self.concrete_250

            elif float(self.Calculator_Measure_Stray_E_comboBox.currentText()) == 300:
                Relative_Stray_Transmission_Data = self.concrete_300

            return Relative_Stray_Transmission_Data

    def Measure_STVL_Manu(self):
        if self.Calculator_Measure_Stray_meterial_comboBox.currentText() == 'Lead':
            if float(self.Calculator_Measure_Stray_E_comboBox.currentText()) == 50:
                MSTHVL = 0.06
                MSTTVL = 0.17

            elif float(self.Calculator_Measure_Stray_E_comboBox.currentText()) == 70:
                MSTHVL = 0.17
                MSTTVL = 0.52

            elif float(self.Calculator_Measure_Stray_E_comboBox.currentText()) == 100:
                MSTHVL = 0.27
                MSTTVL = 0.88

            elif float(self.Calculator_Measure_Stray_E_comboBox.currentText()) == 125:
                MSTHVL = 0.28
                MSTTVL = 0.93

            elif float(self.Calculator_Measure_Stray_E_comboBox.currentText()) == 150:
                MSTHVL = 0.30
                MSTTVL = 0.99

            elif float(self.Calculator_Measure_Stray_E_comboBox.currentText()) == 200:
                MSTHVL = 0.52
                MSTTVL = 1.7

            elif float(self.Calculator_Measure_Stray_E_comboBox.currentText()) == 250:
                MSTHVL = 0.88
                MSTTVL = 2.9

            elif float(self.Calculator_Measure_Stray_E_comboBox.currentText()) == 300:
                MSTHVL = 1.47
                MSTTVL = 4.8

            return float(MSTHVL), float(MSTTVL)

        elif self.Calculator_Measure_Stray_meterial_comboBox.currentText() == 'Concrete':
            if float(self.Calculator_Measure_Stray_E_comboBox.currentText()) == 50:
                MSTHVL = 0.43
                MSTTVL = 1.5

            elif float(self.Calculator_Measure_Stray_E_comboBox.currentText()) == 70:
                MSTHVL = 0.84
                MSTTVL = 2.8

            elif float(self.Calculator_Measure_Stray_E_comboBox.currentText()) == 100:
                MSTHVL = 1.6
                MSTTVL = 5.3

            elif float(self.Calculator_Measure_Stray_E_comboBox.currentText()) == 125:
                MSTHVL = 2.0
                MSTTVL = 6.6

            elif float(self.Calculator_Measure_Stray_E_comboBox.currentText()) == 150:
                MSTHVL = 2.24
                MSTTVL = 7.4

            elif float(self.Calculator_Measure_Stray_E_comboBox.currentText()) == 200:
                MSTHVL = 2.5
                MSTTVL = 8.4

            elif float(self.Calculator_Measure_Stray_E_comboBox.currentText()) == 250:
                MSTHVL = 2.8
                MSTTVL = 9.4

            elif float(self.Calculator_Measure_Stray_E_comboBox.currentText()) == 300:
                MSTHVL = 3.1
                MSTTVL = 10.4

            return float(MSTHVL), float(MSTTVL)

    def thoary_PVL_Manu(self):
        if self.Calculator_thoary_Primary_meterial_comboBox.currentText() == 'Lead':
            if float(self.Calculator_thoary_Primary_E_comboBox.currentText()) == 50:
                PHVL = 0.06
                PTVL = 0.17

            elif float(self.Calculator_thoary_Primary_E_comboBox.currentText()) == 70:
                PHVL = 0.17
                PTVL = 0.52

            elif float(self.Calculator_thoary_Primary_E_comboBox.currentText()) == 100:
                PHVL = 0.27
                PTVL = 0.88

            elif float(self.Calculator_thoary_Primary_E_comboBox.currentText()) == 125:
                PHVL = 0.28
                PTVL = 0.93

            elif float(self.Calculator_thoary_Primary_E_comboBox.currentText()) == 150:
                PHVL = 0.30
                PTVL = 0.99

            elif float(self.Calculator_thoary_Primary_E_comboBox.currentText()) == 200:
                PHVL = 0.52
                PTVL = 1.7

            elif float(self.Calculator_thoary_Primary_E_comboBox.currentText()) == 250:
                PHVL = 0.88
                PTVL = 2.9

            elif float(self.Calculator_thoary_Primary_E_comboBox.currentText()) == 300:
                PHVL = 1.47
                PTVL = 4.8

            return float(PHVL), float(PTVL)

        elif self.Calculator_thoary_Primary_meterial_comboBox.currentText() == 'Concrete':
            if float(self.Calculator_thoary_Primary_E_comboBox.currentText()) == 50:
                PHVL = 0.43
                PTVL = 1.5

            elif float(self.Calculator_thoary_Primary_E_comboBox.currentText()) == 70:
                PHVL = 0.84
                PTVL = 2.8

            elif float(self.Calculator_thoary_Primary_E_comboBox.currentText()) == 100:
                PHVL = 1.6
                PTVL = 5.3

            elif float(self.Calculator_thoary_Primary_E_comboBox.currentText()) == 125:
                PHVL = 2.0
                PTVL = 6.6

            elif float(self.Calculator_thoary_Primary_E_comboBox.currentText()) == 150:
                PHVL = 2.24
                PTVL = 7.4

            elif float(self.Calculator_thoary_Primary_E_comboBox.currentText()) == 200:
                PHVL = 2.5
                PTVL = 8.4

            elif float(self.Calculator_thoary_Primary_E_comboBox.currentText()) == 250:
                PHVL = 2.8
                PTVL = 9.4

            elif float(self.Calculator_thoary_Primary_E_comboBox.currentText()) == 300:
                PHVL = 3.1
                PTVL = 10.4

            return float(PHVL), float(PTVL)

    def thoary_SEVL_Manu(self):
        if self.Calculator_thoary_Secondary_meterial_comboBox.currentText() == 'Lead':
            if float(self.Calculator_thoary_Secondary_E_comboBox.currentText()) == 50:
                SEHVL = 0.06
                SETVL = 0.17

            elif float(self.Calculator_thoary_Secondary_E_comboBox.currentText()) == 70:
                SEHVL = 0.17
                SETVL = 0.52

            elif float(self.Calculator_thoary_Secondary_E_comboBox.currentText()) == 100:
                SEHVL = 0.27
                SETVL = 0.88

            elif float(self.Calculator_thoary_Secondary_E_comboBox.currentText()) == 125:
                SEHVL = 0.28
                SETVL = 0.93

            elif float(self.Calculator_thoary_Secondary_E_comboBox.currentText()) == 150:
                SEHVL = 0.30
                SETVL = 0.99

            elif float(self.Calculator_thoary_Secondary_E_comboBox.currentText()) == 200:
                SEHVL = 0.52
                SETVL = 1.7

            elif float(self.Calculator_thoary_Secondary_E_comboBox.currentText()) == 250:
                SEHVL = 0.88
                SETVL = 2.9

            elif float(self.Calculator_thoary_Secondary_E_comboBox.currentText()) == 300:
                SEHVL = 1.47
                SETVL = 4.8

            return float(SEHVL), float(SETVL)

        elif self.Calculator_thoary_Secondary_meterial_comboBox.currentText() == 'Concrete':
            if float(self.Calculator_thoary_Secondary_E_comboBox.currentText()) == 50:
                SEHVL = 0.43
                SETVL = 1.5

            elif float(self.Calculator_thoary_Secondary_E_comboBox.currentText()) == 70:
                SEHVL = 0.84
                SETVL = 2.8

            elif float(self.Calculator_thoary_Secondary_E_comboBox.currentText()) == 100:
                SEHVL = 1.6
                SETVL = 5.3

            elif float(self.Calculator_thoary_Secondary_E_comboBox.currentText()) == 125:
                SEHVL = 2.0
                SETVL = 6.6

            elif float(self.Calculator_thoary_Secondary_E_comboBox.currentText()) == 150:
                SEHVL = 2.24
                SETVL = 7.4

            elif float(self.Calculator_thoary_Secondary_E_comboBox.currentText()) == 200:
                SEHVL = 2.5
                SETVL = 8.4

            elif float(self.Calculator_thoary_Secondary_E_comboBox.currentText()) == 250:
                SEHVL = 2.8
                SETVL = 9.4

            elif float(self.Calculator_thoary_Secondary_E_comboBox.currentText()) == 300:
                SEHVL = 3.1
                SETVL = 10.4

            return float(SEHVL), float(SETVL)

    def thoary_SCVL_Manu(self):
        if self.Calculator_thoary_Scattering_meterial_comboBox.currentText() == 'Lead':
            if float(self.Calculator_thoary_Scattering_E_comboBox.currentText()) == 50:
                TSCHVL = 0.06
                TSCTVL = 0.17

            elif float(self.Calculator_thoary_Scattering_E_comboBox.currentText()) == 70:
                TSCHVL = 0.17
                TSCTVL = 0.52

            elif float(self.Calculator_thoary_Scattering_E_comboBox.currentText()) == 100:
                TSCHVL = 0.27
                TSCTVL = 0.88

            elif float(self.Calculator_thoary_Scattering_E_comboBox.currentText()) == 125:
                TSCHVL = 0.28
                TSCTVL = 0.93

            elif float(self.Calculator_thoary_Scattering_E_comboBox.currentText()) == 150:
                TSCHVL = 0.30
                TSCTVL = 0.99

            elif float(self.Calculator_thoary_Scattering_E_comboBox.currentText()) == 200:
                TSCHVL = 0.52
                TSCTVL = 1.7

            elif float(self.Calculator_thoary_Scattering_E_comboBox.currentText()) == 250:
                TSCHVL = 0.88
                TSCTVL = 2.9

            elif float(self.Calculator_thoary_Scattering_E_comboBox.currentText()) == 300:
                TSCHVL = 1.47
                TSCTVL = 4.8

            return float(TSCHVL), float(TSCTVL)

        elif self.Calculator_thoary_Scattering_meterial_comboBox.currentText() == 'Concrete':
            if float(self.Calculator_thoary_Scattering_E_comboBox.currentText()) == 50:
                TSCHVL = 0.43
                TSCTVL = 1.5

            elif float(self.Calculator_thoary_Scattering_E_comboBox.currentText()) == 70:
                TSCHVL = 0.84
                TSCTVL = 2.8

            elif float(self.Calculator_thoary_Scattering_E_comboBox.currentText()) == 100:
                TSCHVL = 1.6
                TSCTVL = 5.3

            elif float(self.Calculator_thoary_Scattering_E_comboBox.currentText()) == 125:
                TSCHVL = 2.0
                TSCTVL = 6.6

            elif float(self.Calculator_thoary_Scattering_E_comboBox.currentText()) == 150:
                TSCHVL = 2.24
                TSCTVL = 7.4

            elif float(self.Calculator_thoary_Scattering_E_comboBox.currentText()) == 200:
                TSCHVL = 2.5
                TSCTVL = 8.4

            elif float(self.Calculator_thoary_Scattering_E_comboBox.currentText()) == 250:
                TSCHVL = 2.8
                TSCTVL = 9.4

            elif float(self.Calculator_thoary_Scattering_E_comboBox.currentText()) == 300:
                TSCHVL = 3.1
                TSCTVL = 10.4

            return float(TSCHVL), float(TSCTVL)

    def thoary_STVL_Manu(self):
        if self.Calculator_thoary_Stray_meterial_comboBox.currentText() == 'Lead':
            if float(self.Calculator_thoary_Stray_E_comboBox.currentText()) == 50:
                STHVL = 0.06
                STTVL = 0.17

            elif float(self.Calculator_thoary_Stray_E_comboBox.currentText()) == 70:
                STHVL = 0.17
                STTVL = 0.52

            elif float(self.Calculator_thoary_Stray_E_comboBox.currentText()) == 100:
                STHVL = 0.27
                STTVL = 0.88

            elif float(self.Calculator_thoary_Stray_E_comboBox.currentText()) == 125:
                STHVL = 0.28
                STTVL = 0.93

            elif float(self.Calculator_thoary_Stray_E_comboBox.currentText()) == 150:
                STHVL = 0.30
                STTVL = 0.99

            elif float(self.Calculator_thoary_Stray_E_comboBox.currentText()) == 200:
                STHVL = 0.52
                STTVL = 1.7

            elif float(self.Calculator_thoary_Stray_E_comboBox.currentText()) == 250:
                STHVL = 0.88
                STTVL = 2.9

            elif float(self.Calculator_thoary_Stray_E_comboBox.currentText()) == 300:
                STHVL = 1.47
                STTVL = 4.8

            return float(STHVL), float(STTVL)

        elif self.Calculator_thoary_Stray_meterial_comboBox.currentText() == 'Concrete':
            if float(self.Calculator_thoary_Stray_E_comboBox.currentText()) == 50:
                STHVL = 0.43
                STTVL = 1.5

            elif float(self.Calculator_thoary_Stray_E_comboBox.currentText()) == 70:
                STHVL = 0.84
                STTVL = 2.8

            elif float(self.Calculator_thoary_Stray_E_comboBox.currentText()) == 100:
                STHVL = 1.6
                STTVL = 5.3

            elif float(self.Calculator_thoary_Stray_E_comboBox.currentText()) == 125:
                STHVL = 2.0
                STTVL = 6.6

            elif float(self.Calculator_thoary_Stray_E_comboBox.currentText()) == 150:
                STHVL = 2.24
                STTVL = 7.4

            elif float(self.Calculator_thoary_Stray_E_comboBox.currentText()) == 200:
                STHVL = 2.5
                STTVL = 8.4

            elif float(self.Calculator_thoary_Stray_E_comboBox.currentText()) == 250:
                STHVL = 2.8
                STTVL = 9.4

            elif float(self.Calculator_thoary_Stray_E_comboBox.currentText()) == 300:
                STHVL = 3.1
                STTVL = 10.4

            return float(STHVL), float(STTVL)

    def Find_Nearest_Transmissionfactor_Data(self, array, value):
        array = np.asarray(array)
        idx = (np.abs(array - value)).argmin()
        return array[idx]

    def Measure_Primary_Calculator(self):
        ec = ""
        try:
            float(self.Calculator_Measure_Primary_P_Edit.text())
        except:
            ec += "\n\t     P"
        try:
            float(self.Calculator_Measure_Primary_d_pri_Edit.text())
        except:
            ec += "\n\t     d_pri"
        try:
            float(self.Calculator_Measure_Primary_W_Edit.text())
        except:
            ec += "\n\t     W"
        try:
            float(self.Calculator_Measure_Primary_U_Edit.text())
        except:
            ec += "\n\t     U"
        try:
            float(self.Calculator_Measure_Primary_T_Edit.text())
        except:
            ec += "\n\t     T"
        try:
            Calculator_Measure_Primary_P = float(self.Calculator_Measure_Primary_P_Edit.text())
            Calculator_Measure_Primary_d = float(self.Calculator_Measure_Primary_d_pri_Edit.text())
            Calculator_Measure_Primary_W = float(self.Calculator_Measure_Primary_W_Edit.text())
            Calculator_Measure_Primary_U = float(self.Calculator_Measure_Primary_U_Edit.text())
            Calculator_Measure_Primary_T = float(self.Calculator_Measure_Primary_T_Edit.text())

            B_pri = (Calculator_Measure_Primary_P * (Calculator_Measure_Primary_d ** 2)) / (
                        Calculator_Measure_Primary_W * Calculator_Measure_Primary_U * Calculator_Measure_Primary_T)  # exposure rate

            Measure_Primary_Filter_Name, Measure_Primary_Filter_Value = self.Filter_Primary_Data_Menu()

            Relative_Primary_Transmission_Data = self.Relative_Primary_Transmission_Data_Menu()  # 가층 : 물질과 에너지에 따라 에너지를 (1/2, 1/10)으로 줄여주는 두께의 값
            Primary_Transmissionfactor_Data = np.array(Relative_Primary_Transmission_Data).T[1]
            Primary_Nearest_Transmissionfactor = self.Find_Nearest_Transmissionfactor_Data(
                Primary_Transmissionfactor_Data, B_pri)
            for i in Relative_Primary_Transmission_Data:
                if i[1] == Primary_Nearest_Transmissionfactor:
                    Measure_Primary_Barrier = i[0]

            if self.Calculator_Measure_Primary_meterial_comboBox.currentText() in ['Lead']:
                Measure_Primary_Barrier_name = 'mm'
            elif self.Calculator_Measure_Primary_meterial_comboBox.currentText() in ['Concrete']:
                Measure_Primary_Barrier_name = 'cm'

            self.scrollAreaWidgetContents_11.append("---------------------------------------------"
                                                    + str(self.Figure_Primary_Counter) + "nd Calculator" +
                                                    "---------------------------------------------" +
                                                    "\n\nInherent Filter  =  " +
                                                    str(Measure_Primary_Filter_Value) + ' mm ' + str(
                Measure_Primary_Filter_Name) +
                                                    "\nB  =  P(" + str(Calculator_Measure_Primary_P) + ")x"
                                                    + "d(" + str(Calculator_Measure_Primary_d) + ")²x" +
                                                    " / " + "W(" + str(Calculator_Measure_Primary_W) +
                                                    ")x" + "U(" + str(Calculator_Measure_Primary_U) + ")x" +
                                                    "T(" + str(Calculator_Measure_Primary_T) + ")" + " = " +
                                                    str(B_pri) + ' R/min' +
                                                    "\nS  = " + str(
                format(Measure_Primary_Barrier, '3f')) + " " + Measure_Primary_Barrier_name +
                                                    "\n\n"
                                                    )
            self.Calculator_Measure_Primary_Exposurerate_textBrowser.setText(str(B_pri) + ' R/min')
            self.Calculator_Measure_Primary_thickness_textBrowser.setText(
                str(format(Measure_Primary_Barrier, '3f')) + " " + Measure_Primary_Barrier_name)
            self.Figure_Primary_Counter = self.Figure_Primary_Counter + 1
        except:
            msg = QMessageBox()
            msg.setText("다음 입력 값을 확인해주세요." + ec)
            msg.exec_()

    def Measure_Secondary_Calculator(self):
        ec = ""
        try:
            float(self.Calculator_Measure_Secondary_P_Edit.text())
        except:
            ec += "\n\t     P"
        try:
            float(self.Calculator_Measure_Secondary_d_sec_Edit.text())
        except:
            ec += "\n\t     d_sec"
        try:
            float(self.Calculator_Measure_Secondary_W_Edit.text())
        except:
            ec += "\n\t     W"
        try:
            float(self.Calculator_Measure_Secondary_I_Edit.text())
        except:
            ec += "\n\t     I"
        try:
            float(self.Calculator_Measure_Secondary_T_Edit.text())
        except:
            ec += "\n\t     T"

        try:
            Calculator_Measure_Secondary_P = float(self.Calculator_Measure_Secondary_P_Edit.text())
            Calculator_Measure_Secondary_d = float(self.Calculator_Measure_Secondary_d_sec_Edit.text())
            Calculator_Measure_Secondary_W = float(self.Calculator_Measure_Secondary_W_Edit.text())
            Calculator_Measure_Secondary_I = float(self.Calculator_Measure_Secondary_I_Edit.text())
            Calculator_Measure_Secondary_T = float(self.Calculator_Measure_Secondary_T_Edit.text())

            B_leak = (Calculator_Measure_Secondary_P * (
                        Calculator_Measure_Secondary_d ** 2) * 60 * Calculator_Measure_Secondary_I) / (
                                 Calculator_Measure_Secondary_W * Calculator_Measure_Secondary_T)  # exposure rate

            Measure_Secondary_Filter_Name, Measure_Secondary_Filter_Value = self.Filter_Secondary_Data_Menu()

            Relative_Secondary_Transmission_Data = self.Relative_Secondary_Transmission_Data_Menu()  # 가층 : 물질과 에너지에 따라 에너지를 (1/2, 1/10)으로 줄여주는 두께의 값
            Secondary_Transmissionfactor_Data = np.array(Relative_Secondary_Transmission_Data).T[1]
            Secondary_Nearest_Transmissionfactor = self.Find_Nearest_Transmissionfactor_Data(
                Secondary_Transmissionfactor_Data, B_leak)

            for i in Relative_Secondary_Transmission_Data:
                if i[1] == Secondary_Nearest_Transmissionfactor:
                    Measure_Secondary_Barrier = i[0]

            if self.Calculator_Measure_Secondary_meterial_comboBox.currentText() in ['Lead']:
                Measure_Secondary_Barrier_name = 'mm'
            elif self.Calculator_Measure_Secondary_meterial_comboBox.currentText() in ['Concrete']:
                Measure_Secondary_Barrier_name = 'cm'

            self.scrollAreaWidgetContents_12.append("---------------------------------------------"
                                                    + str(self.Figure_Secondary_Counter) + "nd Calculator" +
                                                    "---------------------------------------------" +
                                                    "\n\nInherent Filter  =  " +
                                                    str(Measure_Secondary_Filter_Value) + ' mm ' + str(
                Measure_Secondary_Filter_Name) +
                                                    "\nB  =  P(" + str(Calculator_Measure_Secondary_P) + ")x"
                                                    + "d(" + str(Calculator_Measure_Secondary_d) + ")²x" +
                                                    "I(" + str(Calculator_Measure_Secondary_I) + ")" +
                                                    " / " + "W(" + str(Calculator_Measure_Secondary_W) +
                                                    ")x" + "T(" + str(Calculator_Measure_Secondary_T) + ")" + "  =  " +
                                                    str(B_leak) + ' R/min' +
                                                    "\nS  =  " + str(
                format(Measure_Secondary_Barrier, '3f')) + " " + Measure_Secondary_Barrier_name +
                                                    "\n\n"
                                                    )
            self.Calculator_Measure_Secondary_Exposurerate_TextBrowser.setText(str(B_leak) + ' R/min')
            self.Calculator_Measure_Secondary_thickness_textBrowser.setText(
                str(format(Measure_Secondary_Barrier, '3f')) + " " + Measure_Secondary_Barrier_name)
            self.Figure_Secondary_Counter = self.Figure_Secondary_Counter + 1

        except:
            msg = QMessageBox()
            msg.setText("다음 입력 값을 확인해주세요." + ec)
            msg.exec_()

    def Measure_Scattering_Calculator(self):
        ec = ""
        try:
            float(self.Calculator_Measure_Scattering_P_Edit.text())
        except:
            ec += "\n\t     P"
        try:
            float(self.Calculator_Measure_Scattering_d_sec_Edit.text())
        except:
            ec += "\n\t     d_sec"
        try:
            float(self.Calculator_Measure_Scattering_d_sca_Edit.text())
        except:
            ec += "\n\t     d_sca"
        try:
            float(self.Calculator_Measure_Scattering_W_Edit.text())
        except:
            ec += "\n\t     W"
        try:
            float(self.Calculator_Measure_Scattering_a_Edit.text())
        except:
            ec += "\n\t     a"
        try:
            float(self.Calculator_Measure_Scattering_T_Edit.text())
        except:
            ec += "\n\t     T"
        try:
            float(self.Calculator_Measure_Scattering_F_Edit.text())  # Scattering
        except:
            ec += "\n\t     F"

        try:
            Calculator_Measure_Scattering_P = float(self.Calculator_Measure_Scattering_P_Edit.text())
            Calculator_Measure_Scattering_d_sec = float(self.Calculator_Measure_Scattering_d_sec_Edit.text())
            Calculator_Measure_Scattering_d_sca = float(self.Calculator_Measure_Scattering_d_sca_Edit.text())
            Calculator_Measure_Scattering_W = float(self.Calculator_Measure_Scattering_W_Edit.text())
            Calculator_Measure_Scattering_T = float(self.Calculator_Measure_Scattering_T_Edit.text())
            Calculator_Measure_Scattering_a = float(self.Calculator_Measure_Scattering_a_Edit.text())
            Calculator_Measure_Scattering_F = float(self.Calculator_Measure_Scattering_F_Edit.text())

            B_sec = (Calculator_Measure_Scattering_P * (Calculator_Measure_Scattering_d_sec ** 2) * (
                        Calculator_Measure_Scattering_d_sca ** 2) * 400) / (
                                Calculator_Measure_Scattering_W * Calculator_Measure_Scattering_T * Calculator_Measure_Scattering_a * Calculator_Measure_Scattering_F)  # exposure rate

            Measure_Scattering_Filter_Name, Measure_Scattering_Filter_Value = self.Filter_Scattering_Data_Menu()

            Relative_Scattering_Transmission_Data = self.Relative_Scattering_Transmission_Data_Menu()  # 가층 : 물질과 에너지에 따라 에너지를 (1/2, 1/10)으로 줄여주는 두께의 값
            Scattering_Transmissionfactor_Data = np.array(Relative_Scattering_Transmission_Data).T[1]
            Scattering_Nearest_Transmissionfactor = self.Find_Nearest_Transmissionfactor_Data(
                Scattering_Transmissionfactor_Data, B_sec)

            for i in Relative_Scattering_Transmission_Data:
                if i[1] == Scattering_Nearest_Transmissionfactor:
                    Measure_Scattering_Barrier = i[0]

            if self.Calculator_Measure_Scattering_meterial_comboBox.currentText() in ['Lead']:
                Measure_Scattering_Barrier_name = 'mm'
            elif self.Calculator_Measure_Scattering_meterial_comboBox.currentText() in ['Concrete']:
                Measure_Scattering_Barrier_name = 'cm'

            self.scrollAreaWidgetContents_13.append("---------------------------------------------"
                                                    + str(self.Figure_Scattering_Counter) + "nd Calculator" +
                                                    "---------------------------------------------" +
                                                    "\n\nInherent Filter  =  " +
                                                    str(Measure_Scattering_Filter_Value) + ' mm ' + str(
                Measure_Scattering_Filter_Name) +
                                                    "\nB  =  P(" + str(Calculator_Measure_Scattering_P) + ")x"
                                                    + "d_sec(" + str(Calculator_Measure_Scattering_d_sec) + ")²x" +
                                                    "d_sca(" + str(Calculator_Measure_Scattering_d_sca) + ")²x" +
                                                    "400.0"+
                                                    " / " + "W(" + str(Calculator_Measure_Scattering_W) +
                                                    ")x" + "a(" + str(Calculator_Measure_Scattering_a) + ")x" +
                                                    "F(" + str(Calculator_Measure_Scattering_F) + ")x" +
                                                    "T(" + str(Calculator_Measure_Scattering_T) + ")" + "  =  " +
                                                    str(B_sec) + ' R/min' +
                                                    "\nS  =  " + str(
                format(Measure_Scattering_Barrier, '3f')) + " " + Measure_Scattering_Barrier_name +
                                                    "\n\n"
                                                    )
            self.Calculator_Measure_Scattering_Exposurerate_TextBrowser.setText(str(B_sec) + ' R/min')
            self.Calculator_Measure_Scattering_thickness_textBrowser.setText(
                str(format(Measure_Scattering_Barrier, '3f')) + " " + Measure_Scattering_Barrier_name)
            self.Figure_Scattering_Counter = self.Figure_Scattering_Counter + 1

        except:
            msg = QMessageBox()
            msg.setText("다음 입력 값을 확인해주세요." + ec)
            msg.exec_()

    def Measure_Stray_Calculator(self):
        ec = ""
        try:
            float(self.Calculator_Measure_Stray_Secondary_Barrier_Edit.text())
        except:
            ec += "\n        Secondary_barrier"
        try:
            float(self.Calculator_Measure_Stray_Scattering_Barrier_Edit.text())
        except:
            ec += "\n        Scattering_barrier"
        try:
            Measure_cal_Stray_Secondary_Barrier = float(self.Calculator_Measure_Stray_Secondary_Barrier_Edit.text())
            Measure_cal_Stray_Scattering_Barrier = float(self.Calculator_Measure_Stray_Scattering_Barrier_Edit.text())
            Measure_cal_Barrier_Subtraction = abs(
                Measure_cal_Stray_Secondary_Barrier - Measure_cal_Stray_Scattering_Barrier)
            Measure_Stray_HVL, Measure_Stray_TVL = self.Measure_STVL_Manu()  # 가층 : 물질과 에너지에 따라 에너지를 (1/2, 1/10)으로 줄여주는 두께의 값

            if self.Calculator_Measure_Stray_meterial_comboBox.currentText() in ['Lead']:
                if Measure_cal_Barrier_Subtraction >= Measure_Stray_TVL:
                    if Measure_cal_Stray_Secondary_Barrier > Measure_cal_Stray_Scattering_Barrier:
                        self.Calculator_Measure_Stray_thickness_textBrowser.setText(
                            str(format(Measure_cal_Stray_Secondary_Barrier, '3f')) + ' mm')
                        self.scrollAreaWidgetContents_14.append("---------------------------------------------"
                                                                + str(self.Figure_Stray_Counter) + "nd Calculator" +
                                                                "---------------------------------------------" +
                                                                "\n\n" + "|S_secondary - S_scattering|(" + str(
                            Measure_cal_Barrier_Subtraction) + ")" + "  ≥  " + "TVL(" + str(Measure_Stray_TVL) + ")" +
                                                                "\n" + "S_secondary(" + str(
                            Measure_cal_Stray_Secondary_Barrier) + ")" + "  >  " + "S_scattering(" + str(
                            Measure_cal_Stray_Scattering_Barrier) + ")" +
                                                                "\n" + "∴ S_tot  =  " + str(
                            format(Measure_cal_Stray_Secondary_Barrier, '3f')) + ' mm' +
                                                                "\n\n"
                                                                )
                    else:
                        self.Calculator_Measure_Stray_thickness_textBrowser.setText(
                            str(format(Measure_cal_Stray_Scattering_Barrier, '3f')) + ' mm')
                        self.scrollAreaWidgetContents_14.append("---------------------------------------------"
                                                                + str(self.Figure_Stray_Counter) + "nd Calculator" +
                                                                "---------------------------------------------" +
                                                                "\n\n" + "|S_secondary - S_scattering|(" + str(
                            Measure_cal_Barrier_Subtraction) + ")" + "  ≥  " + "TVL(" + str(Measure_Stray_TVL) + ")" +
                                                                "\n" + "S_scattering(" + str(
                            Measure_cal_Stray_Scattering_Barrier) + ")" + "  >  " + "S_secondary(" + str(
                            Measure_cal_Stray_Secondary_Barrier) + ")" +
                                                                "\n" + "∴ S_tot  =  " + str(
                            format(Measure_cal_Stray_Scattering_Barrier, '3f')) + ' mm' +
                                                                "\n\n"
                                                                )
                else:
                    if Measure_cal_Stray_Secondary_Barrier > Measure_cal_Stray_Scattering_Barrier:
                        self.Calculator_Measure_Stray_thickness_textBrowser.setText(
                            str(format(Measure_cal_Stray_Secondary_Barrier + Measure_Stray_HVL, '3f')) + ' mm')
                        self.scrollAreaWidgetContents_14.append("---------------------------------------------"
                                                                + str(self.Figure_Stray_Counter) + "nd Calculator" +
                                                                "---------------------------------------------" +
                                                                "\n\n" + "TVL(" + str(
                            Measure_Stray_TVL) + ")" + "  ≥  " + "|S_secondary - S_scattering|(" + str(
                            Measure_cal_Barrier_Subtraction) + ")" +
                                                                "\n" + "S_secondary(" + str(
                            Measure_cal_Stray_Secondary_Barrier) + ")" + "  >  " + "S_scattering(" + str(
                            Measure_cal_Stray_Scattering_Barrier) + ")" +
                                                                "\n" + "∴ S_tot  =  " + str(
                            format(Measure_cal_Stray_Secondary_Barrier + Measure_Stray_HVL, '3f')) + ' mm' +
                                                                "\n\n"
                                                                )
                    else:
                        self.Calculator_Measure_Stray_thickness_textBrowser.setText(
                            str(format(Measure_cal_Stray_Scattering_Barrier + Measure_Stray_HVL, '3f')) + ' mm')
                        self.scrollAreaWidgetContents_14.append("---------------------------------------------"
                                                                + str(self.Figure_Stray_Counter) + "nd Calculator" +
                                                                "---------------------------------------------" +
                                                                "\n\n" + "TVL(" + str(
                            Measure_Stray_TVL) + ")" + "  ≥  " + "|S_secondary - S_scattering|(" + str(
                            Measure_cal_Barrier_Subtraction) + ")" +
                                                                "\n" + "S_scattering(" + str(
                            Measure_cal_Stray_Scattering_Barrier) + ")" + "  >  " + "S_secondary(" + str(
                            Measure_cal_Stray_Secondary_Barrier) + ")" +
                                                                "\n" + "∴ S_tot  =  " + str(
                            format(Measure_cal_Stray_Scattering_Barrier + Measure_Stray_HVL, '3f')) + ' mm' +
                                                                "\n\n"
                                                                )

            elif self.Calculator_Measure_Stray_meterial_comboBox.currentText() in ['Concrete']:
                if Measure_cal_Barrier_Subtraction >= Measure_Stray_TVL:
                    if Measure_cal_Stray_Secondary_Barrier > Measure_cal_Stray_Scattering_Barrier:
                        self.Calculator_Measure_Stray_thickness_textBrowser.setText(
                            str(format(Measure_cal_Stray_Secondary_Barrier, '3f')) + ' cm')
                        self.scrollAreaWidgetContents_14.append("---------------------------------------------"
                                                                + str(self.Figure_Stray_Counter) + "nd Calculator" +
                                                                "---------------------------------------------" +
                                                                "\n\n" + "|S_secondary - S_scattering|(" + str(
                            Measure_cal_Barrier_Subtraction) + ")" + "  ≥  " + "TVL(" + str(Measure_Stray_TVL) + ")" +
                                                                "\n" + "S_secondary(" + str(
                            Measure_cal_Stray_Secondary_Barrier) + ")" + "  >  " + "S_scattering(" + str(
                            Measure_cal_Stray_Scattering_Barrier) + ")" +
                                                                "\n" + "∴ S_tot  =  " + str(
                            format(Measure_cal_Stray_Secondary_Barrier, '3f')) + ' cm' +
                                                                "\n\n"
                                                                )
                    else:
                        self.Calculator_Measure_Stray_thickness_textBrowser.setText(
                            str(format(Measure_cal_Stray_Scattering_Barrier, '3f')) + ' cm')
                        self.scrollAreaWidgetContents_14.append("---------------------------------------------"
                                                                + str(self.Figure_Stray_Counter) + "nd Calculator" +
                                                                "---------------------------------------------" +
                                                                "\n\n" + "|S_secondary - S_scattering|(" + str(
                            Measure_cal_Barrier_Subtraction) + ")" + "  ≥  " + "TVL(" + str(Measure_Stray_TVL) + ")" +
                                                                "\n" + "S_scattering(" + str(
                            Measure_cal_Stray_Scattering_Barrier) + ")" + "  >  " + "S_secondary(" + str(
                            Measure_cal_Stray_Secondary_Barrier) + ")" +
                                                                "\n" + "∴ S_tot  =  " + str(
                            format(Measure_cal_Stray_Scattering_Barrier, '3f')) + ' cm' +
                                                                "\n\n"
                                                                )
                else:
                    if Measure_cal_Stray_Secondary_Barrier > Measure_cal_Stray_Scattering_Barrier:
                        self.Calculator_Measure_Stray_thickness_textBrowser.setText(
                            str(format(Measure_cal_Stray_Secondary_Barrier + Measure_Stray_HVL, '3f')) + ' cm')
                        self.scrollAreaWidgetContents_14.append("---------------------------------------------"
                                                                + str(self.Figure_Stray_Counter) + "nd Calculator" +
                                                                "---------------------------------------------" +
                                                                "\n\n" + "TVL(" + str(
                            Measure_Stray_TVL) + ")" + "  ≥  " + "|S_secondary - S_scattering|(" + str(
                            Measure_cal_Barrier_Subtraction) + ")" +
                                                                "\n" + "S_secondary(" + str(
                            Measure_cal_Stray_Secondary_Barrier) + ")" + "  >  " + "S_scattering(" + str(
                            Measure_cal_Stray_Scattering_Barrier) + ")" +
                                                                "\n" + "∴ S_tot  =  " + str(
                            format(Measure_cal_Stray_Secondary_Barrier + Measure_Stray_HVL, '3f')) + ' cm' +
                                                                "\n\n"
                                                                )
                    else:
                        self.Calculator_Measure_Stray_thickness_textBrowser.setText(
                            str(format(Measure_cal_Stray_Scattering_Barrier + Measure_Stray_HVL, '3f')) + ' cm')
                        self.scrollAreaWidgetContents_14.append("---------------------------------------------"
                                                                + str(self.Figure_Stray_Counter) + "nd Calculator" +
                                                                "---------------------------------------------" +
                                                                "\n\n" + "TVL(" + str(
                            Measure_Stray_TVL) + ")" + "  ≥  " + "|S_secondary - S_scattering|(" + str(
                            Measure_cal_Barrier_Subtraction) + ")" +
                                                                "\n" + "S_scattering(" + str(
                            Measure_cal_Stray_Scattering_Barrier) + ")" + "  >  " + "S_secondary(" + str(
                            Measure_cal_Stray_Secondary_Barrier) + ")" +
                                                                "\n" + "∴ S_tot  =  " + str(
                            format(Measure_cal_Stray_Scattering_Barrier + Measure_Stray_HVL, '3f')) + ' cm' +
                                                                "\n\n"
                                                                )
            self.Figure_Stray_Counter = self.Figure_Stray_Counter + 1
        except:
            msg = QMessageBox()
            msg.setText("다음 입력 값을 확인해주세요." + ec)
            msg.exec_()

    def thoary_Primary_calculator(self):
        ec = ""
        try:
            float(self.Calculator_thoary_Primary_P_Edit.text())
        except:
            ec += "\n\t     P"
        try:
            float(self.Calculator_thoary_Primary_d_pri_Edit.text())
        except:
            ec += "\n\t     d_pri"
        try:
            float(self.Calculator_thoary_Primary_W_Edit.text())
        except:
            ec += "\n\t     W"
        try:
            float(self.Calculator_thoary_Primary_U_Edit.text())
        except:
            ec += "\n\t     U"
        try:
            float(self.Calculator_thoary_Primary_T_Edit.text())
        except:
            ec += "\n\t     T"
        try:
            Calculator_thoary_primary_P = float(self.Calculator_thoary_Primary_P_Edit.text())
            Calculator_thoary_primary_d = float(self.Calculator_thoary_Primary_d_pri_Edit.text())
            Calculator_thoary_primary_W = float(self.Calculator_thoary_Primary_W_Edit.text())
            Calculator_thoary_primary_U = float(self.Calculator_thoary_Primary_U_Edit.text())
            Calculator_thoary_primary_T = float(self.Calculator_thoary_Primary_T_Edit.text())

            B_pri = (Calculator_thoary_primary_P * (Calculator_thoary_primary_d ** 2)) / (
                        Calculator_thoary_primary_W * Calculator_thoary_primary_U * Calculator_thoary_primary_T)  # exposure rate
            primary_n = -math.log2(B_pri)  # 세워질 벽의 양
            primary_N = -math.log10(B_pri)  # 세워질 벽의 양
            primary_HVL, primary_TVL = self.thoary_PVL_Manu()  # 가층 : 물질과 에너지에 따라 에너지를 (1/2, 1/10)으로 줄여주는 두께의 값
            primary_H_S = primary_n * primary_HVL  # 총 방벽두께(반가층)
            primary_T_S = primary_N * primary_TVL  # 총 방벽두께(십가층)

            if self.Calculator_thoary_Primary_meterial_comboBox.currentText() in ['Lead']:
                thoary_Primary_Barrier_name = 'mm'
            elif self.Calculator_thoary_Primary_meterial_comboBox.currentText() in ['Concrete']:
                thoary_Primary_Barrier_name = 'cm'

            self.scrollAreaWidgetContents.append("---------------------------------------------"
                                                 + str(self.Table_Primary_Counter) + "nd Calculator" +
                                                 "---------------------------------------------" +
                                                 "\n\nB  =  P(" + str(Calculator_thoary_primary_P) + ")x"
                                                 + "d(" + str(Calculator_thoary_primary_d) + ")²x" +
                                                 " / " + "W(" + str(Calculator_thoary_primary_W) +
                                                 ")x" + "U(" + str(Calculator_thoary_primary_U) + ")x" +
                                                 "T(" + str(Calculator_thoary_primary_T) + ")" + "  =  " +
                                                 str(B_pri) + ' R/min' +
                                                 "\nS(HVL)  =  " + str(
                format(primary_H_S, '3f')) + " " + thoary_Primary_Barrier_name +
                                                 "\nS(TVL)  =  " + str(
                format(primary_T_S, '3f')) + " " + thoary_Primary_Barrier_name +
                                                 "\n\n"
                                                 )
            self.Calculator_thoary_Primary_Exposurerate_textBrowser.setText(str(B_pri) + ' R/min')
            self.Calculator_thoary_Primary_thickness_textBrowser.setText(
                '(HVL) = ' + str(format(primary_H_S, '3f')) + " " + thoary_Primary_Barrier_name + "\n(TVL) = " + str(
                    format(primary_T_S, '3f')) + " " + thoary_Primary_Barrier_name)
            self.Table_Primary_Counter = self.Table_Primary_Counter + 1
        except:
            msg = QMessageBox()
            msg.setText("다음 입력 값을 확인해주세요." + ec)
            msg.exec_()

    def thoary_Secondary_calculator(self):
        ec = ""
        try:
            float(self.Calculator_thoary_Secondary_P_Edit.text())
        except:
            ec += "\n\t     P"
        try:
            float(self.Calculator_thoary_Secondary_d_sec_Edit.text())
        except:
            ec += "\n\t     d_sec"
        try:
            float(self.Calculator_thoary_Secondary_W_Edit.text())
        except:
            ec += "\n\t     W"
        try:
            float(self.Calculator_thoary_Secondary_I_Edit.text())
        except:
            ec += "\n\t     I"
        try:
            float(self.Calculator_thoary_Secondary_T_Edit.text())
        except:
            ec += "\n\t     T"
        try:
            Calculator_thoary_Secondary_P = float(self.Calculator_thoary_Secondary_P_Edit.text())
            Calculator_thoary_Secondary_d = float(self.Calculator_thoary_Secondary_d_sec_Edit.text())
            Calculator_thoary_Secondary_W = float(self.Calculator_thoary_Secondary_W_Edit.text())
            Calculator_thoary_Secondary_I = float(self.Calculator_thoary_Secondary_I_Edit.text())
            Calculator_thoary_Secondary_T = float(self.Calculator_thoary_Secondary_T_Edit.text())

            B_leak = (Calculator_thoary_Secondary_P * (
                        Calculator_thoary_Secondary_d ** 2) * 60 * Calculator_thoary_Secondary_I) / (
                                 Calculator_thoary_Secondary_W * Calculator_thoary_Secondary_T)  # exposure rate

            Secondary_n = -math.log2(B_leak)  # 세워질 벽의 양
            Secondary_N = -math.log10(B_leak)  # 세워질 벽의 양
            Secondary_HVL, Secondary_TVL = self.thoary_SEVL_Manu()  # 가층 : 물질과 에너지에 따라 에너지를 (1/2, 1/10)으로 줄여주는 두께의 값
            Secondary_H_S = Secondary_n * Secondary_HVL  # 총 방벽두께(반가층)
            Secondary_T_S = Secondary_N * Secondary_TVL  # 총 방벽두께(십가층)

            if self.Calculator_thoary_Secondary_meterial_comboBox.currentText() in ['Lead']:
                thoary_Secondary_Barrier_name = 'mm'
            elif self.Calculator_thoary_Secondary_meterial_comboBox.currentText() in ['Concrete']:
                thoary_Secondary_Barrier_name = 'cm'

            self.scrollAreaWidgetContents_7.append("---------------------------------------------"
                                                   + str(self.Table_Secondary_Counter) + "nd Calculator" +
                                                   "---------------------------------------------" +
                                                   "\n\nB  =  P(" + str(Calculator_thoary_Secondary_P) + ")x"
                                                   + "d(" + str(Calculator_thoary_Secondary_d) + ")²x" +
                                                   "I(" + str(Calculator_thoary_Secondary_I) + ")" +
                                                   " / " + "W(" + str(Calculator_thoary_Secondary_W) +
                                                   ")x" + "T(" + str(Calculator_thoary_Secondary_T) + ")" + "  =  " +
                                                   str(B_leak) + ' R/min' +
                                                   "\nS(HVL)  =  " + str(
                format(Secondary_H_S, '3f')) + " " + thoary_Secondary_Barrier_name +
                                                   "\nS(TVL)  =  " + str(
                format(Secondary_T_S, '3f')) + " " + thoary_Secondary_Barrier_name +
                                                   "\n\n"
                                                   )
            self.Calculator_thoary_Secondary_Exposurerate_TextBrowser.setText(str(B_leak) + ' R/min')
            self.Calculator_thoary_Secondary_thickness_textBrowser.setText('(HVL) = ' + str(
                format(Secondary_H_S, '3f')) + " " + thoary_Secondary_Barrier_name + "\n(TVL) = " + str(
                format(Secondary_T_S, '3f')) + " " + thoary_Secondary_Barrier_name)
            self.Table_Secondary_Counter = self.Table_Secondary_Counter + 1

        except:
            msg = QMessageBox()
            msg.setText("다음 입력 값을 확인해주세요." + ec)
            msg.exec_()

    def thaory_Scattering_calculator(self):
        ec = ""
        try:
            float(self.Calculator_thoary_Scattering_P_Edit.text())
        except:
            ec += "\n\t     P"
        try:
            float(self.Calculator_thoary_Scattering_d_sec_Edit.text())
        except:
            ec += "\n\t     d_sec"
        try:
            float(self.Calculator_thoary_Scattering_d_sca_Edit.text())
        except:
            ec += "\n\t     d_sca"
        try:
            float(self.Calculator_thoary_Scattering_W_Edit.text())
        except:
            ec += "\n\t     W"
        try:
            float(self.Calculator_thoary_Scattering_a_Edit.text())
        except:
            ec += "\n\t     a"
        try:
            float(self.Calculator_thoary_Scattering_T_Edit.text())
        except:
            ec += "\n\t     T"
        try:
            float(self.Calculator_thoary_Scattering_F_Edit.text())
        except:
            ec += "\n\t     F"
        try:
            Calculator_thoary_Scattering_P = float(self.Calculator_thoary_Scattering_P_Edit.text())
            Calculator_thoary_Scattering_d_sec = float(self.Calculator_thoary_Scattering_d_sec_Edit.text())
            Calculator_thoary_Scattering_d_sca = float(self.Calculator_thoary_Scattering_d_sca_Edit.text())
            Calculator_thoary_Scattering_W = float(self.Calculator_thoary_Scattering_W_Edit.text())
            Calculator_thoary_Scattering_T = float(self.Calculator_thoary_Scattering_T_Edit.text())
            Calculator_thoary_Scattering_a = float(self.Calculator_thoary_Scattering_a_Edit.text())
            Calculator_thoary_Secondary_F = float(self.Calculator_thoary_Scattering_F_Edit.text())

            B_sec = (Calculator_thoary_Scattering_P * (Calculator_thoary_Scattering_d_sec ** 2) * (
                        Calculator_thoary_Scattering_d_sca ** 2) * 400) / (
                                Calculator_thoary_Scattering_W * Calculator_thoary_Scattering_T * Calculator_thoary_Scattering_a * Calculator_thoary_Secondary_F)  # exposure rate
            Scattering_n = -math.log2(B_sec)  # 세워질 벽의 양
            Scattering_N = -math.log10(B_sec)  # 세워질 벽의 양
            Scattering_HVL, Scattering_TVL = self.thoary_SCVL_Manu()  # 가층 : 물질과 에너지에 따라 에너지를 (1/2, 1/10)으로 줄여주는 두께의 값
            Scattering_H_S = Scattering_n * Scattering_HVL  # 총 방벽두께(반가층)
            Scattering_T_S = Scattering_N * Scattering_TVL  # 총 방벽두께(십가층)

            if self.Calculator_thoary_Scattering_meterial_comboBox.currentText() in ['Lead']:
                thoary_Scattering_Barrier_name = 'mm'
            elif self.Calculator_thoary_Scattering_meterial_comboBox.currentText() in ['Concrete']:
                thoary_Scattering_Barrier_name = 'cm'

            self.scrollAreaWidgetContents_3.append("---------------------------------------------"
                                                   + str(self.Table_Scattering_Counter) + "nd Calculator" +
                                                   "---------------------------------------------" +
                                                   "\n\nB  =  P(" + str(Calculator_thoary_Scattering_P) + ")x" +
                                                   "d_sec(" + str(Calculator_thoary_Scattering_d_sec) + ")²x" +
                                                   "d_sca(" + str(Calculator_thoary_Scattering_d_sca) + ")²" + "x400"
                                                   " / " + "W(" + str(Calculator_thoary_Scattering_W) + ")x" +
                                                   "F(" + str(Calculator_thoary_Secondary_F) + ")x" +
                                                   ")" + "a(" + str(Calculator_thoary_Scattering_a) + ")x" +
                                                   "T(" + str(Calculator_thoary_Scattering_T) + ")" + "  =  " +
                                                   str(B_sec) + ' R/min' +
                                                   "\nS(HVL)  =  " + str(
                format(Scattering_H_S, '3f')) + " " + thoary_Scattering_Barrier_name +
                                                   "\nS(TVL)  =  " + str(
                format(Scattering_T_S, '3f')) + " " + thoary_Scattering_Barrier_name +
                                                   "\n\n"
                                                   )
            self.Calculator_thoary_Scattering_Exposurerate_TextBrowser.setText(str(B_sec) + ' R/min')
            self.Calculator_thoary_Scattering_thickness_textBrowser.setText('(HVL) = ' + str(
                format(Scattering_H_S, '3f')) + " " + thoary_Scattering_Barrier_name + "\n(TVL) = " + str(
                format(Scattering_T_S, '3f')) + " " + thoary_Scattering_Barrier_name)
            self.Table_Scattering_Counter = self.Table_Scattering_Counter + 1

        except:
            msg = QMessageBox()
            msg.setText("다음 입력 값을 확인해주세요." + ec)
            msg.exec_()

    def Stray_check_calculator(self):
        ec = ""
        try:
            float(self.Calculator_thoary_Stray_Secondary_Barrier_Edit.text())
        except:
            ec += "\n        Secondary_barrier"
        try:
            float(self.Calculator_thoary_Stray_Scattering_Barrier_Edit.text())
        except:
            ec += "\n        Scattering_barrier"
        try:
            Calculator_thoary_Stray_Secondary_barrier = float(
                self.Calculator_thoary_Stray_Secondary_Barrier_Edit.text())
            Calculator_thoary_Stray_Scattering_barrier = float(
                self.Calculator_thoary_Stray_Scattering_Barrier_Edit.text())
            Calculator_thoary_barrier_subtraction = abs(
                Calculator_thoary_Stray_Secondary_barrier - Calculator_thoary_Stray_Scattering_barrier)

            Stray_HVL, Stray_TVL = self.thoary_STVL_Manu()  # 가층 : 물질과 에너지에 따라 에너지를 (1/2, 1/10)으로 줄여주는 두께의 값
            if self.Calculator_thoary_Stray_meterial_comboBox.currentText() in ['Lead']:
                if Calculator_thoary_barrier_subtraction >= Stray_TVL:
                    if Calculator_thoary_Stray_Secondary_barrier > Calculator_thoary_Stray_Scattering_barrier:
                        self.Calculator_thoary_Stray_thickness_textBrowser.setText(
                            str(format(Calculator_thoary_Stray_Secondary_barrier, '3f')) + ' mm')
                        self.scrollAreaWidgetContents_4.append("---------------------------------------------"
                                                               + str(self.Table_Stray_Counter) + "nd Calculator" +
                                                               "---------------------------------------------" +
                                                               "\n\n" + "|S_secondary - S_scattering|(" + str(
                            Calculator_thoary_barrier_subtraction) + ")" + "  ≥  " + "TVL(" + str(Stray_TVL) + ")" +
                                                               "\n" + "S_secondary(" + str(
                            Calculator_thoary_Stray_Secondary_barrier) + ")" + "  >  " + "S_scattering(" + str(
                            Calculator_thoary_Stray_Scattering_barrier) + ")" +
                                                               "\n" + "∴ S_tot  =  " + str(
                            format(Calculator_thoary_Stray_Secondary_barrier, '3f')) + ' mm' +
                                                               "\n\n"
                                                               )
                    else:
                        self.Calculator_thoary_Stray_thickness_textBrowser.setText(
                            str(format(Calculator_thoary_Stray_Scattering_barrier, '3f')) + ' mm')
                        self.scrollAreaWidgetContents_4.append("---------------------------------------------"
                                                               + str(self.Table_Stray_Counter) + "nd Calculator" +
                                                               "---------------------------------------------" +
                                                               "\n\n" + "|S_secondary - S_scattering|(" + str(
                            Calculator_thoary_barrier_subtraction) + ")" + "  ≥  " + "TVL(" + str(Stray_TVL) + ")" +
                                                               "\n" + "S_scattering(" + str(
                            Calculator_thoary_Stray_Scattering_barrier) + ")" + "  >  " + "S_secondary(" + str(
                            Calculator_thoary_Stray_Secondary_barrier) + ")" +
                                                               "\n" + "∴ S_tot  =  " + str(
                            format(Calculator_thoary_Stray_Scattering_barrier, '3f')) + ' mm' +
                                                               "\n\n"
                                                               )
                else:
                    if Calculator_thoary_Stray_Secondary_barrier > Calculator_thoary_Stray_Scattering_barrier:
                        self.Calculator_thoary_Stray_thickness_textBrowser.setText(
                            str(format(Calculator_thoary_Stray_Secondary_barrier + Stray_HVL, '3f')) + ' mm')
                        self.scrollAreaWidgetContents_4.append("---------------------------------------------"
                                                               + str(self.Table_Stray_Counter) + "nd Calculator" +
                                                               "---------------------------------------------" +
                                                               "\n\n" + "TVL(" + str(
                            Stray_TVL) + ")" + "  ≥  " + "|S_secondary - S_scattering|(" + str(
                            Calculator_thoary_barrier_subtraction) + ")" +
                                                               "\n" + "S_secondary(" + str(
                            Calculator_thoary_Stray_Secondary_barrier) + ")" + "  >  " + "S_scattering(" + str(
                            Calculator_thoary_Stray_Scattering_barrier) + ")" +
                                                               "\n" + "∴ S_tot  =  " + str(
                            format(Calculator_thoary_Stray_Secondary_barrier + Stray_HVL, '3f')) + ' mm' +
                                                               "\n\n"
                                                               )
                    else:
                        self.Calculator_thoary_Stray_thickness_textBrowser.setText(
                            str(format(Calculator_thoary_Stray_Scattering_barrier + Stray_HVL, '3f')) + ' mm')
                        self.scrollAreaWidgetContents_4.append("---------------------------------------------"
                                                               + str(self.Table_Stray_Counter) + "nd Calculator" +
                                                               "---------------------------------------------" +
                                                               "\n\n" + "TVL(" + str(
                            Stray_TVL) + ")" + "  ≥  " + "|S_secondary - S_scattering|(" + str(
                            Calculator_thoary_barrier_subtraction) + ")" +
                                                               "\n" + "S_secondary(" + str(
                            Calculator_thoary_Stray_Scattering_barrier) + ")" + "  >  " + "S_scattering(" + str(
                            Calculator_thoary_Stray_Secondary_barrier) + ")" +
                                                               "\n" + "∴ S_tot  =  " + str(
                            format(Calculator_thoary_Stray_Scattering_barrier + Stray_HVL, '3f')) + ' mm' +
                                                               "\n\n"
                                                               )

            elif self.Calculator_thoary_Stray_meterial_comboBox.currentText() in ['Concrete']:
                if Calculator_thoary_barrier_subtraction >= Stray_TVL:
                    if Calculator_thoary_Stray_Secondary_barrier > Calculator_thoary_Stray_Scattering_barrier:
                        self.Calculator_thoary_Stray_thickness_textBrowser.setText(
                            str(format(Calculator_thoary_Stray_Secondary_barrier, '3f')) + ' cm')
                        self.scrollAreaWidgetContents_4.append("---------------------------------------------"
                                                               + str(self.Table_Stray_Counter) + "nd Calculator" +
                                                               "---------------------------------------------" +
                                                               "\n\n" + "|S_secondary - S_scattering|(" + str(
                            Calculator_thoary_barrier_subtraction) + ")" + "  ≥  " + "TVL(" + str(Stray_TVL) + ")" +
                                                               "\n" + "S_secondary(" + str(
                            Calculator_thoary_Stray_Secondary_barrier) + ")" + "  >  " + "S_scattering(" + str(
                            Calculator_thoary_Stray_Scattering_barrier) + ")" +
                                                               "\n" + "∴ S_tot  =  " + str(
                            format(Calculator_thoary_Stray_Secondary_barrier, '3f')) + ' cm' +
                                                               "\n\n"
                                                               )
                    else:
                        self.Calculator_thoary_Stray_thickness_textBrowser.setText(
                            str(format(Calculator_thoary_Stray_Scattering_barrier, '3f')) + ' cm')
                        self.scrollAreaWidgetContents_4.append("---------------------------------------------"
                                                               + str(self.Table_Stray_Counter) + "nd Calculator" +
                                                               "---------------------------------------------" +
                                                               "\n\n" + "|S_secondary - S_scattering|(" + str(
                            Calculator_thoary_barrier_subtraction) + ")" + "  ≥  " + "TVL(" + str(Stray_TVL) + ")" +
                                                               "\n" + "S_scattering(" + str(
                            Calculator_thoary_Stray_Scattering_barrier) + ")" + "  >  " + "S_secondary(" + str(
                            Calculator_thoary_Stray_Secondary_barrier) + ")" +
                                                               "\n" + "∴ S_tot  =  " + str(
                            format(Calculator_thoary_Stray_Scattering_barrier, '3f')) + ' cm' +
                                                               "\n\n"
                                                               )
                else:
                    if Calculator_thoary_Stray_Secondary_barrier > Calculator_thoary_Stray_Scattering_barrier:
                        self.Calculator_thoary_Stray_thickness_textBrowser.setText(
                            str(format(Calculator_thoary_Stray_Secondary_barrier + Stray_HVL, '3f')) + ' cm')
                        self.scrollAreaWidgetContents_4.append("---------------------------------------------"
                                                               + str(self.Table_Stray_Counter) + "nd Calculator" +
                                                               "---------------------------------------------" +
                                                               "\n\n" + "TVL(" + str(
                            Stray_TVL) + ")" + "  ≥  " + "|S_secondary - S_scattering|(" + str(
                            Calculator_thoary_barrier_subtraction) + ")" +
                                                               "\n" + "S_secondary(" + str(
                            Calculator_thoary_Stray_Secondary_barrier) + ")" + "  >  " + "S_scattering(" + str(
                            Calculator_thoary_Stray_Scattering_barrier) + ")" +
                                                               "\n" + "∴ S_tot  =  " + str(
                            format(Calculator_thoary_Stray_Secondary_barrier + Stray_HVL, '3f')) + ' cm' +
                                                               "\n\n"
                                                               )
                    else:
                        self.Calculator_thoary_Stray_thickness_textBrowser.setText(
                            str(format(Calculator_thoary_Stray_Scattering_barrier + Stray_HVL, '3f')) + ' cm')
                        self.scrollAreaWidgetContents_4.append("---------------------------------------------"
                                                               + str(self.Table_Stray_Counter) + "nd Calculator" +
                                                               "---------------------------------------------" +
                                                               "\n\n" + "TVL(" + str(
                            Stray_TVL) + ")" + "  ≥  " + "|S_secondary - S_scattering|(" + str(
                            Calculator_thoary_barrier_subtraction) + ")" +
                                                               "\n" + "S_secondary(" + str(
                            Calculator_thoary_Stray_Scattering_barrier) + ")" + "  >  " + "S_scattering(" + str(
                            Calculator_thoary_Stray_Secondary_barrier) + ")" +
                                                               "\n" + "∴ S_tot  =  " + str(
                            format(Calculator_thoary_Stray_Scattering_barrier + Stray_HVL, '3f')) + ' cm' +
                                                               "\n\n"
                                                               )
        except:
            msg = QMessageBox()
            msg.setText("다음 입력 값을 확인해주세요." + ec)
            msg.exec_()


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
